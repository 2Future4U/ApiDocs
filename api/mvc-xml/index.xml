<Overview>
  <Assemblies>
    <Assembly Name="System.Web.Mvc" Version="5.2.6.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Â© Microsoft Corporation. All rights reserved.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("System.Web.Mvc.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("5.2.60510.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("5.2.6-60510 (3155d174ba1d7e281ef0b9bbe78fb10a43aa7450)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyMetadata("Serviceable", "True")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft ASP.NET MVC")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("System.Web.Mvc.dll")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en-US")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.SatelliteContractVersion("5.2.6.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("DynamicProxyGenAssembly2, PublicKey=0024000004800000940000000602000000240000525341310004000001000100c547cac37abd99c8db225ef2f6c8a3602f3b3606cc9891605d02baa56104f4cfc0734aa39b93bf7852f7d9266654753cc297e7d2edfe0bac1cdcf9f717241550e0a7b191195b7667bb4f64bcb8e2121380fd1d9d46ad2d92d2d15605093924cceaf74c4861eff62abf69b9291ed0a340e113be11e6a7d3113e92484cf7045cc7")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("System.Web.Mvc.Test, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.Guid("4b5f4208-c6b0-4c37-9a41-63325ffa52ad")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5", FrameworkDisplayName=".NET Framework 4.5")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.PreApplicationStartMethod(typeof(System.Web.Mvc.PreApplicationStartCode), "Start")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="System.Web.Mvc">
      <Type Name="AcceptVerbsAttribute" Kind="Class" />
      <Type Name="ActionDescriptor" Kind="Class" />
      <Type Name="ActionExecutedContext" Kind="Class" />
      <Type Name="ActionExecutingContext" Kind="Class" />
      <Type Name="ActionFilterAttribute" Kind="Class" />
      <Type Name="ActionMethodSelectorAttribute" Kind="Class" />
      <Type Name="ActionNameAttribute" Kind="Class" />
      <Type Name="ActionNameSelectorAttribute" Kind="Class" />
      <Type Name="ActionResult" Kind="Class" />
      <Type Name="ActionSelector" Kind="Delegate" />
      <Type Name="AdditionalMetadataAttribute" Kind="Class" />
      <Type Name="AjaxHelper" Kind="Class" />
      <Type Name="AjaxHelper`1" DisplayName="AjaxHelper&lt;TModel&gt;" Kind="Class" />
      <Type Name="AjaxRequestExtensions" Kind="Class" />
      <Type Name="AllowAnonymousAttribute" Kind="Class" />
      <Type Name="AllowHtmlAttribute" Kind="Class" />
      <Type Name="AreaReference" Kind="Enumeration" />
      <Type Name="AreaRegistration" Kind="Class" />
      <Type Name="AreaRegistrationContext" Kind="Class" />
      <Type Name="AssociatedMetadataProvider" Kind="Class" />
      <Type Name="AssociatedValidatorProvider" Kind="Class" />
      <Type Name="AsyncController" Kind="Class" />
      <Type Name="AsyncTimeoutAttribute" Kind="Class" />
      <Type Name="AuthorizationContext" Kind="Class" />
      <Type Name="AuthorizeAttribute" Kind="Class" />
      <Type Name="BindAttribute" Kind="Class" />
      <Type Name="BuildManagerCompiledView" Kind="Class" />
      <Type Name="BuildManagerViewEngine" Kind="Class" />
      <Type Name="ByteArrayModelBinder" Kind="Class" />
      <Type Name="CachedAssociatedMetadataProvider`1" DisplayName="CachedAssociatedMetadataProvider&lt;TModelMetadata&gt;" Kind="Class" />
      <Type Name="CachedDataAnnotationsMetadataAttributes" Kind="Class" />
      <Type Name="CachedDataAnnotationsModelMetadata" Kind="Class" />
      <Type Name="CachedDataAnnotationsModelMetadataProvider" Kind="Class" />
      <Type Name="CachedModelMetadata`1" DisplayName="CachedModelMetadata&lt;TPrototypeCache&gt;" Kind="Class" />
      <Type Name="CancellationTokenModelBinder" Kind="Class" />
      <Type Name="ChildActionOnlyAttribute" Kind="Class" />
      <Type Name="ChildActionValueProvider" Kind="Class" />
      <Type Name="ChildActionValueProviderFactory" Kind="Class" />
      <Type Name="ClientDataTypeModelValidatorProvider" Kind="Class" />
      <Type Name="CompareAttribute" Kind="Class" />
      <Type Name="ContentResult" Kind="Class" />
      <Type Name="Controller" Kind="Class" />
      <Type Name="ControllerActionInvoker" Kind="Class" />
      <Type Name="ControllerBase" Kind="Class" />
      <Type Name="ControllerBuilder" Kind="Class" />
      <Type Name="ControllerContext" Kind="Class" />
      <Type Name="ControllerDescriptor" Kind="Class" />
      <Type Name="ControllerInstanceFilterProvider" Kind="Class" />
      <Type Name="CustomModelBinderAttribute" Kind="Class" />
      <Type Name="DataAnnotationsModelMetadata" Kind="Class" />
      <Type Name="DataAnnotationsModelMetadataProvider" Kind="Class" />
      <Type Name="DataAnnotationsModelValidationFactory" Kind="Delegate" />
      <Type Name="DataAnnotationsModelValidator" Kind="Class" />
      <Type Name="DataAnnotationsModelValidator`1" DisplayName="DataAnnotationsModelValidator&lt;TAttribute&gt;" Kind="Class" />
      <Type Name="DataAnnotationsModelValidatorProvider" Kind="Class" />
      <Type Name="DataAnnotationsValidatableObjectAdapterFactory" Kind="Delegate" />
      <Type Name="DataErrorInfoModelValidatorProvider" Kind="Class" />
      <Type Name="DefaultControllerFactory" Kind="Class" />
      <Type Name="DefaultModelBinder" Kind="Class" />
      <Type Name="DefaultViewLocationCache" Kind="Class" />
      <Type Name="DependencyResolver" Kind="Class" />
      <Type Name="DependencyResolverExtensions" Kind="Class" />
      <Type Name="DictionaryValueProvider`1" DisplayName="DictionaryValueProvider&lt;TValue&gt;" Kind="Class" />
      <Type Name="EmptyModelMetadataProvider" Kind="Class" />
      <Type Name="EmptyModelValidatorProvider" Kind="Class" />
      <Type Name="EmptyResult" Kind="Class" />
      <Type Name="ExceptionContext" Kind="Class" />
      <Type Name="ExpressionHelper" Kind="Class" />
      <Type Name="FieldValidationMetadata" Kind="Class" />
      <Type Name="FileContentResult" Kind="Class" />
      <Type Name="FilePathResult" Kind="Class" />
      <Type Name="FileResult" Kind="Class" />
      <Type Name="FileStreamResult" Kind="Class" />
      <Type Name="Filter" Kind="Class" />
      <Type Name="FilterAttribute" Kind="Class" />
      <Type Name="FilterAttributeFilterProvider" Kind="Class" />
      <Type Name="FilterInfo" Kind="Class" />
      <Type Name="FilterProviderCollection" Kind="Class" />
      <Type Name="FilterProviders" Kind="Class" />
      <Type Name="FilterScope" Kind="Enumeration" />
      <Type Name="FormCollection" Kind="Class" />
      <Type Name="FormContext" Kind="Class" />
      <Type Name="FormMethod" Kind="Enumeration" />
      <Type Name="FormValueProvider" Kind="Class" />
      <Type Name="FormValueProviderFactory" Kind="Class" />
      <Type Name="GlobalFilterCollection" Kind="Class" />
      <Type Name="GlobalFilters" Kind="Class" />
      <Type Name="HandleErrorAttribute" Kind="Class" />
      <Type Name="HandleErrorInfo" Kind="Class" />
      <Type Name="HiddenInputAttribute" Kind="Class" />
      <Type Name="Html5DateRenderingMode" Kind="Enumeration" />
      <Type Name="HtmlHelper" Kind="Class" />
      <Type Name="HtmlHelper`1" DisplayName="HtmlHelper&lt;TModel&gt;" Kind="Class" />
      <Type Name="HttpDeleteAttribute" Kind="Class" />
      <Type Name="HttpFileCollectionValueProvider" Kind="Class" />
      <Type Name="HttpFileCollectionValueProviderFactory" Kind="Class" />
      <Type Name="HttpGetAttribute" Kind="Class" />
      <Type Name="HttpHeadAttribute" Kind="Class" />
      <Type Name="HttpNotFoundResult" Kind="Class" />
      <Type Name="HttpOptionsAttribute" Kind="Class" />
      <Type Name="HttpPatchAttribute" Kind="Class" />
      <Type Name="HttpPostAttribute" Kind="Class" />
      <Type Name="HttpPostedFileBaseModelBinder" Kind="Class" />
      <Type Name="HttpPutAttribute" Kind="Class" />
      <Type Name="HttpRequestExtensions" Kind="Class" />
      <Type Name="HttpStatusCodeResult" Kind="Class" />
      <Type Name="HttpUnauthorizedResult" Kind="Class" />
      <Type Name="HttpVerbs" Kind="Enumeration" />
      <Type Name="IActionFilter" Kind="Interface" />
      <Type Name="IActionInvoker" Kind="Interface" />
      <Type Name="IActionInvokerFactory" Kind="Interface" />
      <Type Name="IAuthorizationFilter" Kind="Interface" />
      <Type Name="IClientValidatable" Kind="Interface" />
      <Type Name="IController" Kind="Interface" />
      <Type Name="IControllerActivator" Kind="Interface" />
      <Type Name="IControllerFactory" Kind="Interface" />
      <Type Name="IDependencyResolver" Kind="Interface" />
      <Type Name="IEnumerableValueProvider" Kind="Interface" />
      <Type Name="IExceptionFilter" Kind="Interface" />
      <Type Name="IFilterProvider" Kind="Interface" />
      <Type Name="IMetadataAware" Kind="Interface" />
      <Type Name="IMethodInfoActionDescriptor" Kind="Interface" />
      <Type Name="IModelBinder" Kind="Interface" />
      <Type Name="IModelBinderProvider" Kind="Interface" />
      <Type Name="IMvcFilter" Kind="Interface" />
      <Type Name="InputType" Kind="Enumeration" />
      <Type Name="IResultFilter" Kind="Interface" />
      <Type Name="IRouteWithArea" Kind="Interface" />
      <Type Name="ITempDataProvider" Kind="Interface" />
      <Type Name="ITempDataProviderFactory" Kind="Interface" />
      <Type Name="IUnvalidatedValueProvider" Kind="Interface" />
      <Type Name="IValueProvider" Kind="Interface" />
      <Type Name="IView" Kind="Interface" />
      <Type Name="IViewDataContainer" Kind="Interface" />
      <Type Name="IViewEngine" Kind="Interface" />
      <Type Name="IViewLocationCache" Kind="Interface" />
      <Type Name="IViewPageActivator" Kind="Interface" />
      <Type Name="JavaScriptResult" Kind="Class" />
      <Type Name="JQueryFormValueProvider" Kind="Class" />
      <Type Name="JQueryFormValueProviderFactory" Kind="Class" />
      <Type Name="JsonRequestBehavior" Kind="Enumeration" />
      <Type Name="JsonResult" Kind="Class" />
      <Type Name="JsonValueProviderFactory" Kind="Class" />
      <Type Name="LinqBinaryModelBinder" Kind="Class" />
      <Type Name="MaxLengthAttributeAdapter" Kind="Class" />
      <Type Name="MinLengthAttributeAdapter" Kind="Class" />
      <Type Name="ModelBinderAttribute" Kind="Class" />
      <Type Name="ModelBinderDictionary" Kind="Class" />
      <Type Name="ModelBinderProviderCollection" Kind="Class" />
      <Type Name="ModelBinderProviders" Kind="Class" />
      <Type Name="ModelBinders" Kind="Class" />
      <Type Name="ModelBindingContext" Kind="Class" />
      <Type Name="ModelError" Kind="Class" />
      <Type Name="ModelErrorCollection" Kind="Class" />
      <Type Name="ModelMetadata" Kind="Class" />
      <Type Name="ModelMetadataProvider" Kind="Class" />
      <Type Name="ModelMetadataProviders" Kind="Class" />
      <Type Name="ModelState" Kind="Class" />
      <Type Name="ModelStateDictionary" Kind="Class" />
      <Type Name="ModelValidationResult" Kind="Class" />
      <Type Name="ModelValidator" Kind="Class" />
      <Type Name="ModelValidatorProvider" Kind="Class" />
      <Type Name="ModelValidatorProviderCollection" Kind="Class" />
      <Type Name="ModelValidatorProviders" Kind="Class" />
      <Type Name="MultiSelectList" Kind="Class" />
      <Type Name="MvcFilter" Kind="Class" />
      <Type Name="MvcHandler" Kind="Class" />
      <Type Name="MvcHtmlString" Kind="Class" />
      <Type Name="MvcHttpHandler" Kind="Class" />
      <Type Name="MvcRouteHandler" Kind="Class" />
      <Type Name="MvcWebRazorHostFactory" Kind="Class" />
      <Type Name="NameValueCollectionExtensions" Kind="Class" />
      <Type Name="NameValueCollectionValueProvider" Kind="Class" />
      <Type Name="NoAsyncTimeoutAttribute" Kind="Class" />
      <Type Name="NonActionAttribute" Kind="Class" />
      <Type Name="OutputCacheAttribute" Kind="Class" />
      <Type Name="OverrideActionFiltersAttribute" Kind="Class" />
      <Type Name="OverrideAuthenticationAttribute" Kind="Class" />
      <Type Name="OverrideAuthorizationAttribute" Kind="Class" />
      <Type Name="OverrideExceptionFiltersAttribute" Kind="Class" />
      <Type Name="OverrideResultFiltersAttribute" Kind="Class" />
      <Type Name="ParameterBindingInfo" Kind="Class" />
      <Type Name="ParameterDescriptor" Kind="Class" />
      <Type Name="PartialViewResult" Kind="Class" />
      <Type Name="PreApplicationStartCode" Kind="Class" />
      <Type Name="QueryStringValueProvider" Kind="Class" />
      <Type Name="QueryStringValueProviderFactory" Kind="Class" />
      <Type Name="RangeAttributeAdapter" Kind="Class" />
      <Type Name="RazorView" Kind="Class" />
      <Type Name="RazorViewEngine" Kind="Class" />
      <Type Name="RedirectResult" Kind="Class" />
      <Type Name="RedirectToRouteResult" Kind="Class" />
      <Type Name="ReflectedActionDescriptor" Kind="Class" />
      <Type Name="ReflectedControllerDescriptor" Kind="Class" />
      <Type Name="ReflectedParameterDescriptor" Kind="Class" />
      <Type Name="RegularExpressionAttributeAdapter" Kind="Class" />
      <Type Name="RemoteAttribute" Kind="Class" />
      <Type Name="RequiredAttributeAdapter" Kind="Class" />
      <Type Name="RequireHttpsAttribute" Kind="Class" />
      <Type Name="ResultExecutedContext" Kind="Class" />
      <Type Name="ResultExecutingContext" Kind="Class" />
      <Type Name="RouteAreaAttribute" Kind="Class" />
      <Type Name="RouteAttribute" Kind="Class" />
      <Type Name="RouteCollectionAttributeRoutingExtensions" Kind="Class" />
      <Type Name="RouteCollectionExtensions" Kind="Class" />
      <Type Name="RouteDataValueProvider" Kind="Class" />
      <Type Name="RouteDataValueProviderFactory" Kind="Class" />
      <Type Name="RoutePrefixAttribute" Kind="Class" />
      <Type Name="SelectList" Kind="Class" />
      <Type Name="SelectListGroup" Kind="Class" />
      <Type Name="SelectListItem" Kind="Class" />
      <Type Name="SessionStateAttribute" Kind="Class" />
      <Type Name="SessionStateTempDataProvider" Kind="Class" />
      <Type Name="StringLengthAttributeAdapter" Kind="Class" />
      <Type Name="TempDataDictionary" Kind="Class" />
      <Type Name="TemplateInfo" Kind="Class" />
      <Type Name="UrlHelper" Kind="Class" />
      <Type Name="UrlParameter" Kind="Class" />
      <Type Name="ValidatableObjectAdapter" Kind="Class" />
      <Type Name="ValidateAntiForgeryTokenAttribute" Kind="Class" />
      <Type Name="ValidateInputAttribute" Kind="Class" />
      <Type Name="ValueProviderCollection" Kind="Class" />
      <Type Name="ValueProviderDictionary" Kind="Class" />
      <Type Name="ValueProviderFactories" Kind="Class" />
      <Type Name="ValueProviderFactory" Kind="Class" />
      <Type Name="ValueProviderFactoryCollection" Kind="Class" />
      <Type Name="ValueProviderResult" Kind="Class" />
      <Type Name="ViewContext" Kind="Class" />
      <Type Name="ViewDataDictionary" Kind="Class" />
      <Type Name="ViewDataDictionary`1" DisplayName="ViewDataDictionary&lt;TModel&gt;" Kind="Class" />
      <Type Name="ViewDataInfo" Kind="Class" />
      <Type Name="ViewEngineCollection" Kind="Class" />
      <Type Name="ViewEngineResult" Kind="Class" />
      <Type Name="ViewEngines" Kind="Class" />
      <Type Name="ViewMasterPage" Kind="Class" />
      <Type Name="ViewMasterPage`1" DisplayName="ViewMasterPage&lt;TModel&gt;" Kind="Class" />
      <Type Name="ViewPage" Kind="Class" />
      <Type Name="ViewPage`1" DisplayName="ViewPage&lt;TModel&gt;" Kind="Class" />
      <Type Name="ViewResult" Kind="Class" />
      <Type Name="ViewResultBase" Kind="Class" />
      <Type Name="ViewStartPage" Kind="Class" />
      <Type Name="ViewTemplateUserControl" Kind="Class" />
      <Type Name="ViewTemplateUserControl`1" DisplayName="ViewTemplateUserControl&lt;TModel&gt;" Kind="Class" />
      <Type Name="ViewType" Kind="Class" />
      <Type Name="ViewUserControl" Kind="Class" />
      <Type Name="ViewUserControl`1" DisplayName="ViewUserControl&lt;TModel&gt;" Kind="Class" />
      <Type Name="VirtualPathProviderViewEngine" Kind="Class" />
      <Type Name="WebFormView" Kind="Class" />
      <Type Name="WebFormViewEngine" Kind="Class" />
      <Type Name="WebViewPage" Kind="Class" />
      <Type Name="WebViewPage`1" DisplayName="WebViewPage&lt;TModel&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Ajax">
      <Type Name="AjaxExtensions" Kind="Class" />
      <Type Name="AjaxOptions" Kind="Class" />
      <Type Name="InsertionMode" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Async">
      <Type Name="AsyncActionDescriptor" Kind="Class" />
      <Type Name="AsyncControllerActionInvoker" Kind="Class" />
      <Type Name="AsyncManager" Kind="Class" />
      <Type Name="IAsyncActionInvoker" Kind="Interface" />
      <Type Name="IAsyncActionInvokerFactory" Kind="Interface" />
      <Type Name="IAsyncController" Kind="Interface" />
      <Type Name="IAsyncManagerContainer" Kind="Interface" />
      <Type Name="OperationCounter" Kind="Class" />
      <Type Name="ReflectedAsyncActionDescriptor" Kind="Class" />
      <Type Name="ReflectedAsyncControllerDescriptor" Kind="Class" />
      <Type Name="SynchronousOperationException" Kind="Class" />
      <Type Name="TaskAsyncActionDescriptor" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Filters">
      <Type Name="AuthenticationChallengeContext" Kind="Class" />
      <Type Name="AuthenticationContext" Kind="Class" />
      <Type Name="IAuthenticationFilter" Kind="Interface" />
      <Type Name="IOverrideFilter" Kind="Interface" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Html">
      <Type Name="ChildActionExtensions" Kind="Class" />
      <Type Name="DisplayExtensions" Kind="Class" />
      <Type Name="DisplayNameExtensions" Kind="Class" />
      <Type Name="DisplayTextExtensions" Kind="Class" />
      <Type Name="EditorExtensions" Kind="Class" />
      <Type Name="EnumHelper" Kind="Class" />
      <Type Name="FormExtensions" Kind="Class" />
      <Type Name="InputExtensions" Kind="Class" />
      <Type Name="LabelExtensions" Kind="Class" />
      <Type Name="LinkExtensions" Kind="Class" />
      <Type Name="MvcForm" Kind="Class" />
      <Type Name="NameExtensions" Kind="Class" />
      <Type Name="PartialExtensions" Kind="Class" />
      <Type Name="RenderPartialExtensions" Kind="Class" />
      <Type Name="SelectExtensions" Kind="Class" />
      <Type Name="TextAreaExtensions" Kind="Class" />
      <Type Name="ValidationExtensions" Kind="Class" />
      <Type Name="ValueExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Razor">
      <Type Name="MvcCSharpRazorCodeParser" Kind="Class" />
      <Type Name="MvcVBRazorCodeParser" Kind="Class" />
      <Type Name="MvcWebPageRazorHost" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Routing">
      <Type Name="DefaultDirectRouteProvider" Kind="Class" />
      <Type Name="DefaultInlineConstraintResolver" Kind="Class" />
      <Type Name="DirectRouteFactoryContext" Kind="Class" />
      <Type Name="IDirectRouteBuilder" Kind="Interface" />
      <Type Name="IDirectRouteFactory" Kind="Interface" />
      <Type Name="IDirectRouteProvider" Kind="Interface" />
      <Type Name="IInlineConstraintResolver" Kind="Interface" />
      <Type Name="IRouteInfoProvider" Kind="Interface" />
      <Type Name="IRoutePrefix" Kind="Interface" />
      <Type Name="RouteBuilder" Kind="Class" />
      <Type Name="RouteEntry" Kind="Class" />
      <Type Name="RouteFactoryAttribute" Kind="Class" />
    </Namespace>
    <Namespace Name="System.Web.Mvc.Routing.Constraints">
      <Type Name="AlphaRouteConstraint" Kind="Class" />
      <Type Name="BoolRouteConstraint" Kind="Class" />
      <Type Name="CompoundRouteConstraint" Kind="Class" />
      <Type Name="DateTimeRouteConstraint" Kind="Class" />
      <Type Name="DecimalRouteConstraint" Kind="Class" />
      <Type Name="DoubleRouteConstraint" Kind="Class" />
      <Type Name="FloatRouteConstraint" Kind="Class" />
      <Type Name="GuidRouteConstraint" Kind="Class" />
      <Type Name="IntRouteConstraint" Kind="Class" />
      <Type Name="LengthRouteConstraint" Kind="Class" />
      <Type Name="LongRouteConstraint" Kind="Class" />
      <Type Name="MaxLengthRouteConstraint" Kind="Class" />
      <Type Name="MaxRouteConstraint" Kind="Class" />
      <Type Name="MinLengthRouteConstraint" Kind="Class" />
      <Type Name="MinRouteConstraint" Kind="Class" />
      <Type Name="OptionalRouteConstraint" Kind="Class" />
      <Type Name="RangeRouteConstraint" Kind="Class" />
      <Type Name="RegexRouteConstraint" Kind="Class" />
    </Namespace>
  </Types>
  <Title>System.Web.Mvc</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * string * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, protocol, hostName, fragment, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * string * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, protocol, hostName, fragment, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, controllerName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string actionName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.ActionLink (ajaxHelper, linkText, actionName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the URL to the specified action method; when the action link is clicked, the action method is invoked asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, controllerName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, controllerName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * string * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, controllerName, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, controllerName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, controllerName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string actionName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, actionName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="actionName">The name of the action method that will handle the request.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element..</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. </summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.AjaxHelper ajaxHelper, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.AjaxHelper ajaxHelper, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.AjaxHelper * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginForm (ajaxHelper, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.AjaxHelper * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm (ajaxHelper, routeName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response using the specified routing information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.AjaxHelper * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm (ajaxHelper, routeName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response using the specified routing information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.AjaxHelper * string * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm (ajaxHelper, routeName, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response using the specified routing information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.AjaxHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm (ajaxHelper, routeName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response using the specified routing information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.AjaxHelper ajaxHelper, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.AjaxHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm (ajaxHelper, routeName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response using the specified routing information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="GlobalizationScript">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString GlobalizationScript (this System.Web.Mvc.AjaxHelper ajaxHelper);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString GlobalizationScript(class System.Web.Mvc.AjaxHelper ajaxHelper) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)" />
        <MemberSignature Language="F#" Value="static member GlobalizationScript : System.Web.Mvc.AjaxHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript ajaxHelper" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper object that this method extends.</param>
          <summary>Returns an HTML script element that contains a reference to a globalization script that defines the culture information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="GlobalizationScript">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString GlobalizationScript (this System.Web.Mvc.AjaxHelper ajaxHelper, System.Globalization.CultureInfo cultureInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString GlobalizationScript(class System.Web.Mvc.AjaxHelper ajaxHelper, class System.Globalization.CultureInfo cultureInfo) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)" />
        <MemberSignature Language="F#" Value="static member GlobalizationScript : System.Web.Mvc.AjaxHelper * System.Globalization.CultureInfo -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript (ajaxHelper, cultureInfo)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper object that this method extends.</param>
          <param name="cultureInfo">Encapsulates information about the target culture, such as date formats.</param>
          <summary>Returns an HTML script element that contains a reference to a globalization script that defines the specified culture information.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, object routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, object routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * obj * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, string protocol, string hostName, string fragment, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, string protocol, string hostName, string fragment, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * string * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, protocol, hostName, fragment, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Mvc.Ajax.AjaxOptions * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeName, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route to use to obtain the form post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeValues, ajaxOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.AjaxHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.AjaxHelper ajaxHelper, string linkText, class System.Web.Routing.RouteValueDictionary routeValues, class System.Web.Mvc.Ajax.AjaxOptions ajaxOptions, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.AjaxHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.Ajax.AjaxOptions * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Ajax.AjaxExtensions.RouteLink (ajaxHelper, linkText, routeValues, ajaxOptions, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ajaxHelper" Type="System.Web.Mvc.AjaxHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="ajaxOptions" Type="System.Web.Mvc.Ajax.AjaxOptions" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="ajaxHelper">The AJAX helper.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="ajaxOptions">An object that provides options for the asynchronous request.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element that contains the virtual path for the specified route values; when the link is clicked, a request is made to the virtual path asynchronously by using JavaScript.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Ajax.AjaxExtensions" Member="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.HttpRequestBase" />
      </Targets>
      <Member MemberName="IsAjaxRequest">
        <MemberSignature Language="C#" Value="public static bool IsAjaxRequest (this System.Web.HttpRequestBase request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAjaxRequest(class System.Web.HttpRequestBase request) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsAjaxRequest (request As HttpRequestBase) As Boolean" />
        <MemberSignature Language="F#" Value="static member IsAjaxRequest : System.Web.HttpRequestBase -&gt; bool" Usage="System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest request" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Web.HttpRequestBase" RefType="this" />
        </Parameters>
        <Docs>
          <param name="request">The HTTP request.</param>
          <summary>Determines whether the specified HTTP request is an AJAX request.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.AjaxRequestExtensions" Member="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.IDependencyResolver" />
      </Targets>
      <Member MemberName="GetService&lt;TService&gt;">
        <MemberSignature Language="C#" Value="public static TService GetService&lt;TService&gt; (this System.Web.Mvc.IDependencyResolver resolver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetService&lt;TService&gt;(class System.Web.Mvc.IDependencyResolver resolver) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetService(Of TService) (resolver As IDependencyResolver) As TService" />
        <MemberSignature Language="F#" Value="static member GetService : System.Web.Mvc.IDependencyResolver -&gt; 'Service" Usage="System.Web.Mvc.DependencyResolverExtensions.GetService resolver" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>TService</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TService" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="resolver" Type="System.Web.Mvc.IDependencyResolver" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="TService">The type of the requested service or object.</typeparam>
          <param name="resolver">The dependency resolver instance that this method extends.</param>
          <summary>Resolves singly registered services that support arbitrary object creation.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.DependencyResolverExtensions" Member="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.IDependencyResolver" />
      </Targets>
      <Member MemberName="GetServices&lt;TService&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TService&gt; GetServices&lt;TService&gt; (this System.Web.Mvc.IDependencyResolver resolver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TService&gt; GetServices&lt;TService&gt;(class System.Web.Mvc.IDependencyResolver resolver) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServices(Of TService) (resolver As IDependencyResolver) As IEnumerable(Of TService)" />
        <MemberSignature Language="F#" Value="static member GetServices : System.Web.Mvc.IDependencyResolver -&gt; seq&lt;'Service&gt;" Usage="System.Web.Mvc.DependencyResolverExtensions.GetServices resolver" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;TService&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TService" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="resolver" Type="System.Web.Mvc.IDependencyResolver" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="TService">The type of the requested services.</typeparam>
          <param name="resolver">The dependency resolver instance that this method extends.</param>
          <summary>Resolves multiply registered services.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.DependencyResolverExtensions" Member="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Action">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Action (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Action(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member Action : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ChildActionExtensions.Action (htmlHelper, actionName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method to invoke.</param>
          <summary>Invokes the specified child action method and returns the result as an HTML string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Action">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Action (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Action(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member Action : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ChildActionExtensions.Action (htmlHelper, actionName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method to invoke.</param>
          <param name="routeValues">An object that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method with the specified parameters and returns the result as an HTML string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Action">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Action (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Action(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member Action : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ChildActionExtensions.Action (htmlHelper, actionName, controllerName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method to invoke.</param>
          <param name="controllerName">The name of the controller that contains the action method.</param>
          <summary>Invokes the specified child action method using the specified controller name and returns the result as an HTML string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Action">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Action (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Action(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member Action : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ChildActionExtensions.Action (htmlHelper, actionName, controllerName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method to invoke.</param>
          <param name="controllerName">The name of the controller that contains the action method.</param>
          <param name="routeValues">An object that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and controller name and returns the result as an HTML string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Action">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Action (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Action(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member Action : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ChildActionExtensions.Action (htmlHelper, actionName, controllerName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method to invoke.</param>
          <param name="controllerName">The name of the controller that contains the action method.</param>
          <param name="routeValues">A dictionary that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and controller name and returns the result as an HTML string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Action">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Action (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Action(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member Action : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ChildActionExtensions.Action (htmlHelper, actionName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method to invoke.</param>
          <param name="routeValues">A dictionary that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and returns the result as an HTML string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderAction">
        <MemberSignature Language="C#" Value="public static void RenderAction (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderAction(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member RenderAction : System.Web.Mvc.HtmlHelper * string -&gt; unit" Usage="System.Web.Mvc.Html.ChildActionExtensions.RenderAction (htmlHelper, actionName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the child action method to invoke.</param>
          <summary>Invokes the specified child action method and renders the result inline in the parent view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderAction">
        <MemberSignature Language="C#" Value="public static void RenderAction (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderAction(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member RenderAction : System.Web.Mvc.HtmlHelper * string * obj -&gt; unit" Usage="System.Web.Mvc.Html.ChildActionExtensions.RenderAction (htmlHelper, actionName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the child action method to invoke.</param>
          <param name="routeValues">An object that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and renders the result inline in the parent view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderAction">
        <MemberSignature Language="C#" Value="public static void RenderAction (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderAction(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member RenderAction : System.Web.Mvc.HtmlHelper * string * string -&gt; unit" Usage="System.Web.Mvc.Html.ChildActionExtensions.RenderAction (htmlHelper, actionName, controllerName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the child action method to invoke.</param>
          <param name="controllerName">The name of the controller that contains the action method.</param>
          <summary>Invokes the specified child action method using the specified controller name and renders the result inline in the parent view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderAction">
        <MemberSignature Language="C#" Value="public static void RenderAction (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderAction(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member RenderAction : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; unit" Usage="System.Web.Mvc.Html.ChildActionExtensions.RenderAction (htmlHelper, actionName, controllerName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the child action method to invoke.</param>
          <param name="controllerName">The name of the controller that contains the action method.</param>
          <param name="routeValues">An object that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and controller name and renders the result inline in the parent view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderAction">
        <MemberSignature Language="C#" Value="public static void RenderAction (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderAction(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member RenderAction : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="System.Web.Mvc.Html.ChildActionExtensions.RenderAction (htmlHelper, actionName, controllerName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the child action method to invoke.</param>
          <param name="controllerName">The name of the controller that contains the action method.</param>
          <param name="routeValues">A dictionary that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and controller name and renders the result inline in the parent view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderAction">
        <MemberSignature Language="C#" Value="public static void RenderAction (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderAction(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member RenderAction : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="System.Web.Mvc.Html.ChildActionExtensions.RenderAction (htmlHelper, actionName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the child action method to invoke.</param>
          <param name="routeValues">A dictionary that contains the parameters for a route. You can use <paramref name="routeValues" /> to provide the parameters that are bound to the action method parameters. The <paramref name="routeValues" /> parameter is merged with the original route values and overrides them.</param>
          <summary>Invokes the specified child action method using the specified parameters and renders the result inline in the parent view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ChildActionExtensions" Member="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Display">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Display (this System.Web.Mvc.HtmlHelper html, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Display(class System.Web.Mvc.HtmlHelper html, string expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Display (html As HtmlHelper, expression As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Display : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.Display (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <summary>Returns HTML markup for each property in the object that is represented by a string expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Display">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Display (this System.Web.Mvc.HtmlHelper html, string expression, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Display(class System.Web.Mvc.HtmlHelper html, string expression, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Display (html As HtmlHelper, expression As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Display : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.Display (html, expression, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the object that is represented by a string expression, using additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Display">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Display (this System.Web.Mvc.HtmlHelper html, string expression, string templateName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Display(class System.Web.Mvc.HtmlHelper html, string expression, string templateName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Display (html As HtmlHelper, expression As String, templateName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Display : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.Display (html, expression, templateName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the expression, using the specified template.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Display">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Display (this System.Web.Mvc.HtmlHelper html, string expression, string templateName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Display(class System.Web.Mvc.HtmlHelper html, string expression, string templateName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Display (html As HtmlHelper, expression As String, templateName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Display : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.Display (html, expression, templateName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the expression, using the specified template and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Display">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Display (this System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Display(class System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Display (html As HtmlHelper, expression As String, templateName As String, htmlFieldName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Display : System.Web.Mvc.HtmlHelper * string * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.Display (html, expression, templateName, htmlFieldName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the expression, using the specified template and an HTML field ID.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Display">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Display (this System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Display(class System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Display (html As HtmlHelper, expression As String, templateName As String, htmlFieldName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Display : System.Web.Mvc.HtmlHelper * string * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.Display (html, expression, templateName, htmlFieldName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the expression, using the specified template, HTML field ID, and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the <see cref="T:System.Linq.Expressions.Expression" /> expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayFor (html, expression, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns a string that contains each property value in the object that is represented by the specified expression, using additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayFor (html, expression, templateName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <summary>Returns a string that contains each property value in the object that is represented by the <see cref="T:System.Linq.Expressions.Expression" />, using the specified template.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayFor (html, expression, templateName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns a string that contains each property value in the object that is represented by the specified expression, using the specified template and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName, string htmlFieldName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName, string htmlFieldName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String, htmlFieldName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayFor (html, expression, templateName, htmlFieldName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the <see cref="T:System.Linq.Expressions.Expression" />, using the specified template and an HTML field ID.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName, string htmlFieldName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String, htmlFieldName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayFor (html, expression, templateName, htmlFieldName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the specified expression, using the template, an HTML field ID, and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Returns HTML markup for each property in the model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayForModel (this System.Web.Mvc.HtmlHelper html, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayForModel(class System.Web.Mvc.HtmlHelper html, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayForModel (html As HtmlHelper, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayForModel : System.Web.Mvc.HtmlHelper * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayForModel (html, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the model, using additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayForModel (this System.Web.Mvc.HtmlHelper html, string templateName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayForModel(class System.Web.Mvc.HtmlHelper html, string templateName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayForModel (html As HtmlHelper, templateName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayForModel : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayForModel (html, templateName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <summary>Returns HTML markup for each property in the model using the specified template.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayForModel (this System.Web.Mvc.HtmlHelper html, string templateName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayForModel(class System.Web.Mvc.HtmlHelper html, string templateName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayForModel (html As HtmlHelper, templateName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayForModel : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayForModel (html, templateName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the model, using the specified template and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayForModel (this System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayForModel(class System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayForModel (html As HtmlHelper, templateName As String, htmlFieldName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayForModel : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayForModel (html, templateName, htmlFieldName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <summary>Returns HTML markup for each property in the model using the specified template and HTML field ID.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayForModel (this System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayForModel(class System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayForModel (html As HtmlHelper, templateName As String, htmlFieldName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayForModel : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayExtensions.DisplayForModel (html, templateName, htmlFieldName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template that is used to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns HTML markup for each property in the model, using the specified template, an HTML field ID, and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayExtensions" Member="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayName">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayName (this System.Web.Mvc.HtmlHelper html, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayName(class System.Web.Mvc.HtmlHelper html, string expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayName (html As HtmlHelper, expression As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayName : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayNameExtensions.DisplayName (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the display name.</param>
          <summary>Gets the display name.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayNameExtensions" Member="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayNameFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayNameFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayNameFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayNameFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayNameFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the display name.</param>
          <summary>Gets the display name for the model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayNameExtensions" Member="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayNameFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayNameFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;System.Collections.Generic.IEnumerable&lt;TModel&gt;&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayNameFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!!TModel&gt;&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayNameFor(Of TModel, TValue) (html As HtmlHelper(Of IEnumerable(Of TModel)), expression As Expression(Of Func(Of TModel, TValue))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayNameFor : System.Web.Mvc.HtmlHelper&lt;seq&lt;'Model&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;System.Collections.Generic.IEnumerable&lt;TModel&gt;&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the display name.</param>
          <summary>Gets the display name for the model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayNameExtensions" Member="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayNameForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayNameForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayNameForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayNameForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayNameForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Gets the display name for the model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayNameExtensions" Member="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DisplayText">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayText (this System.Web.Mvc.HtmlHelper html, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayText(class System.Web.Mvc.HtmlHelper html, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayText (html As HtmlHelper, name As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayText : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayTextExtensions.DisplayText (html, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="name">An expression that identifies the object that contains the properties to display.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayTextExtensions" Member="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DisplayTextFor&lt;TModel,TResult&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DisplayTextFor&lt;TModel,TResult&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TResult&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DisplayTextFor&lt;TModel, TResult&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TResult&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayTextFor(Of TModel, TResult) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DisplayTextFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Result&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TResult" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TResult&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TResult">The type of the result.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <summary>Returns HTML markup for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.DisplayTextExtensions" Member="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Editor">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Editor (this System.Web.Mvc.HtmlHelper html, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Editor(class System.Web.Mvc.HtmlHelper html, string expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Editor (html As HtmlHelper, expression As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Editor : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.Editor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Editor">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Editor (this System.Web.Mvc.HtmlHelper html, string expression, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Editor(class System.Web.Mvc.HtmlHelper html, string expression, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Editor (html As HtmlHelper, expression As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Editor : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.Editor (html, expression, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Editor">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Editor (this System.Web.Mvc.HtmlHelper html, string expression, string templateName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Editor(class System.Web.Mvc.HtmlHelper html, string expression, string templateName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Editor (html As HtmlHelper, expression As String, templateName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Editor : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.Editor (html, expression, templateName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using the specified template.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Editor">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Editor (this System.Web.Mvc.HtmlHelper html, string expression, string templateName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Editor(class System.Web.Mvc.HtmlHelper html, string expression, string templateName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Editor (html As HtmlHelper, expression As String, templateName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Editor : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.Editor (html, expression, templateName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using the specified template and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Editor">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Editor (this System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Editor(class System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Editor (html As HtmlHelper, expression As String, templateName As String, htmlFieldName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Editor : System.Web.Mvc.HtmlHelper * string * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.Editor (html, expression, templateName, htmlFieldName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using the specified template and HTML field name.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Editor">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Editor (this System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Editor(class System.Web.Mvc.HtmlHelper html, string expression, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Editor (html As HtmlHelper, expression As String, templateName As String, htmlFieldName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Editor : System.Web.Mvc.HtmlHelper * string * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.Editor (html, expression, templateName, htmlFieldName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using the specified template, HTML field name, and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EditorFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the <see cref="T:System.Linq.Expressions.Expression" /> expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EditorFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorFor (html, expression, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EditorFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorFor (html, expression, templateName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the <see cref="T:System.Linq.Expressions.Expression" /> expression, using the specified template.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EditorFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorFor (html, expression, templateName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using the specified template and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EditorFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName, string htmlFieldName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName, string htmlFieldName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String, htmlFieldName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorFor (html, expression, templateName, htmlFieldName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the <see cref="T:System.Linq.Expressions.Expression" /> expression, using the specified template and HTML field name.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EditorFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string templateName, string htmlFieldName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), templateName As String, htmlFieldName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorFor (html, expression, templateName, htmlFieldName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the object that is represented by the expression, using the specified template, HTML field name, and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EditorForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Returns an HTML input element for each property in the model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EditorForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorForModel (this System.Web.Mvc.HtmlHelper html, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorForModel(class System.Web.Mvc.HtmlHelper html, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorForModel (html As HtmlHelper, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorForModel : System.Web.Mvc.HtmlHelper * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorForModel (html, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the model, using additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EditorForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorForModel (this System.Web.Mvc.HtmlHelper html, string templateName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorForModel(class System.Web.Mvc.HtmlHelper html, string templateName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorForModel (html As HtmlHelper, templateName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorForModel : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorForModel (html, templateName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <summary>Returns an HTML input element for each property in the model, using the specified template.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EditorForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorForModel (this System.Web.Mvc.HtmlHelper html, string templateName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorForModel(class System.Web.Mvc.HtmlHelper html, string templateName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorForModel (html As HtmlHelper, templateName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorForModel : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorForModel (html, templateName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the model, using the specified template and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EditorForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorForModel (this System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorForModel(class System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorForModel (html As HtmlHelper, templateName As String, htmlFieldName As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorForModel : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorForModel (html, templateName, htmlFieldName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <summary>Returns an HTML input element for each property in the model, using the specified template name and HTML field name.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EditorForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EditorForModel (this System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName, object additionalViewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EditorForModel(class System.Web.Mvc.HtmlHelper html, string templateName, string htmlFieldName, object additionalViewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EditorForModel (html As HtmlHelper, templateName As String, htmlFieldName As String, additionalViewData As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EditorForModel : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.EditorExtensions.EditorForModel (html, templateName, htmlFieldName, additionalViewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="templateName" Type="System.String" />
          <Parameter Name="htmlFieldName" Type="System.String" />
          <Parameter Name="additionalViewData" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="templateName">The name of the template to use to render the object.</param>
          <param name="htmlFieldName">A string that is used to disambiguate the names of HTML input elements that are rendered for properties that have the same name.</param>
          <param name="additionalViewData">An anonymous object that can contain additional view data that will be merged into the <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> instance that is created for the template.</param>
          <summary>Returns an HTML input element for each property in the model, using the template name, HTML field name, and additional view data.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.EditorExtensions" Member="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm htmlHelper" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. The form uses the POST method, and the request is processed by the action method for the view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and includes the route values in the action attribute. The form uses the POST method, and the request is processed by the action method for the view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and sets the action tag to the specified controller and action. The form uses the POST method.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response, and sets the action tag to the specified controller, action, and route values. The form uses the POST method.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues, System.Web.Mvc.FormMethod method);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues, valuetype System.Web.Mvc.FormMethod method) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * obj * System.Web.Mvc.FormMethod -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, routeValues, method)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and sets the action tag to the specified controller, action, and route values. The form uses the specified HTTP method.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues, System.Web.Mvc.FormMethod method, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, object routeValues, valuetype System.Web.Mvc.FormMethod method, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * obj * System.Web.Mvc.FormMethod * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, routeValues, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and sets the action tag to the specified controller, action, and route values. The form uses the specified HTTP method and includes the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Mvc.FormMethod method);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, valuetype System.Web.Mvc.FormMethod method) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * System.Web.Mvc.FormMethod -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, method)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and sets the action tag to the specified controller and action. The form uses the specified HTTP method.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Mvc.FormMethod method, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, valuetype System.Web.Mvc.FormMethod method, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * System.Web.Mvc.FormMethod * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and sets the action tag to the specified controller and action. The form uses the specified HTTP method and includes the HTML attributes from a dictionary.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Mvc.FormMethod method, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, valuetype System.Web.Mvc.FormMethod method, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * System.Web.Mvc.FormMethod * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and sets the action tag to the specified controller and action. The form uses the specified HTTP method and includes the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response, and sets the action tag to the specified controller, action, and route values from the route value dictionary. The form uses the POST method.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.FormMethod method);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, valuetype System.Web.Mvc.FormMethod method) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.FormMethod -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, routeValues, method)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response, and sets the action tag to the specified controller, action, and route values from the route value dictionary. The form uses the specified HTTP method.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.FormMethod method, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, valuetype System.Web.Mvc.FormMethod method, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.FormMethod * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, actionName, controllerName, routeValues, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="actionName">The name of the action method.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response, and sets the action tag to the specified controller, action, and route values from the route value dictionary. The form uses the specified HTTP method, and includes the HTML attributes from the dictionary.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginForm (this System.Web.Mvc.HtmlHelper htmlHelper, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginForm(class System.Web.Mvc.HtmlHelper htmlHelper, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member BeginForm : System.Web.Mvc.HtmlHelper * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginForm (htmlHelper, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response and includes the route values from the route value dictionary in the action attribute. The form uses the POST method, and the request is processed by the action method for the view.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, object routeValues, System.Web.Mvc.FormMethod method);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, object routeValues, valuetype System.Web.Mvc.FormMethod method) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * obj * System.Web.Mvc.FormMethod -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, routeValues, method)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, object routeValues, System.Web.Mvc.FormMethod method, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, object routeValues, valuetype System.Web.Mvc.FormMethod method, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * obj * System.Web.Mvc.FormMethod * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, routeValues, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. This object is typically created by using object initializer syntax.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, System.Web.Mvc.FormMethod method);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, valuetype System.Web.Mvc.FormMethod method) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * System.Web.Mvc.FormMethod -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, method)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, System.Web.Mvc.FormMethod method, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, valuetype System.Web.Mvc.FormMethod method, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * System.Web.Mvc.FormMethod * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, System.Web.Mvc.FormMethod method, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, valuetype System.Web.Mvc.FormMethod method, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * System.Web.Mvc.FormMethod * obj -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.FormMethod method);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, valuetype System.Web.Mvc.FormMethod method) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.FormMethod -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, routeValues, method)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Web.Mvc.FormMethod method, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, valuetype System.Web.Mvc.FormMethod method, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary * System.Web.Mvc.FormMethod * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeName, routeValues, method, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="method" Type="System.Web.Mvc.FormMethod" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeName">The name of the route to use to obtain the form-post URL.</param>
          <param name="routeValues">An object that contains the parameters for a route</param>
          <param name="method">The HTTP method for processing the form, either GET or POST.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="BeginRouteForm">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.Html.MvcForm BeginRouteForm (this System.Web.Mvc.HtmlHelper htmlHelper, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.Html.MvcForm BeginRouteForm(class System.Web.Mvc.HtmlHelper htmlHelper, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member BeginRouteForm : System.Web.Mvc.HtmlHelper * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.Html.MvcForm" Usage="System.Web.Mvc.Html.FormExtensions.BeginRouteForm (htmlHelper, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.Html.MvcForm</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="routeValues">An object that contains the parameters for a route</param>
          <summary>Writes an opening &lt;form&gt; tag to the response. When the user submits the form, the request will be processed by the route target.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="EndForm">
        <MemberSignature Language="C#" Value="public static void EndForm (this System.Web.Mvc.HtmlHelper htmlHelper);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndForm(class System.Web.Mvc.HtmlHelper htmlHelper) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="F#" Value="static member EndForm : System.Web.Mvc.HtmlHelper -&gt; unit" Usage="System.Web.Mvc.Html.FormExtensions.EndForm htmlHelper" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <summary>Renders the closing &lt;/form&gt; tag to the response. </summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.FormExtensions" Member="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="CheckBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <summary>Returns a check box input element by using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="CheckBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)" />
        <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * bool -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, isChecked)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="isChecked" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <param name="isChecked">true to select the check box; otherwise, false. The value of the check box is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a checked attribute in the html attributes.</param>
          <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, and a value to indicate whether the check box is selected.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="CheckBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, isChecked, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="isChecked" Type="System.Boolean" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <param name="isChecked">true to select the check box; otherwise, false. The value of the check box is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a checked attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, a value to indicate whether the check box is selected, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="CheckBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, bool isChecked, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)" />
        <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * bool * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, isChecked, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="isChecked" Type="System.Boolean" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <param name="isChecked">true to select the check box; otherwise, false. The value of the check box is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a checked attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, a value that indicates whether the check box is selected, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="CheckBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="CheckBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member CheckBox : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBox (htmlHelper, name, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a check box input element by using the specified HTML helper, the name of the form field, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="CheckBoxFor&lt;TModel&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,bool&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, bool&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBoxFor(Of TModel) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member CheckBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, bool&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBoxFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Boolean&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Returns a check box input element for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="CheckBoxFor&lt;TModel&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,bool&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, bool&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBoxFor(Of TModel) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member CheckBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, bool&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBoxFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Boolean&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns a check box input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="CheckBoxFor&lt;TModel&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,bool&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString CheckBoxFor&lt;TModel&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, bool&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckBoxFor(Of TModel) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member CheckBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, bool&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.CheckBoxFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Boolean&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a check box input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Hidden">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <summary>Returns a hidden input element by using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Hidden">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the hidden input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <summary>Returns a hidden input element by using the specified HTML helper, the name of the form field, and the value.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Hidden">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the hidden input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a hidden input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Hidden">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Hidden (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Hidden(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member Hidden : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Hidden (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the hidden input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a hidden input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="HiddenFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HiddenFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member HiddenFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.HiddenFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Returns an HTML hidden input element for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="HiddenFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HiddenFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member HiddenFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.HiddenFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML hidden input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="HiddenFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString HiddenFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HiddenFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member HiddenFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.HiddenFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML hidden input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Password">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <summary>Returns a password input element by using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Password">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the password input element. If a value for this parameter is not provided, the value attribute in the html attributes is used to retrieve the value.</param>
          <summary>Returns a password input element by using the specified HTML helper, the name of the form field, and the value.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Password">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the password input element. If a value for this parameter is not provided, the value attribute in the html attributes is used to retrieve the value.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a password input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Password">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Password (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Password(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member Password : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.Password (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the password input element. If a value for this parameter is not provided, the value attribute in the html attributes is used to retrieve the value.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a password input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="PasswordFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PasswordFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member PasswordFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.PasswordFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Returns a password input element for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="PasswordFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PasswordFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member PasswordFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.PasswordFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns a password input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="PasswordFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString PasswordFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PasswordFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member PasswordFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.PasswordFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a password input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RadioButton">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RadioButton">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)" />
        <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * bool -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, isChecked)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="isChecked" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="isChecked">true to select the radio button; otherwise, false.</param>
          <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RadioButton">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * bool * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, isChecked, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="isChecked" Type="System.Boolean" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="isChecked">true to select the radio button; otherwise, false.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RadioButton">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, bool isChecked, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)" />
        <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * bool * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, isChecked, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="isChecked" Type="System.Boolean" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="isChecked">true to select the radio button; otherwise, false.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RadioButton">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RadioButton">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButton (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButton(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member RadioButton : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButton (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a radio button input element that is used to present mutually exclusive options.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="RadioButtonFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object value) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButtonFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), value As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member RadioButtonFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButtonFor (htmlHelper, expression, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <summary>Returns a radio button input element for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="RadioButtonFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButtonFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), value As Object, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member RadioButtonFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButtonFor (htmlHelper, expression, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns a radio button input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="RadioButtonFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object value, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RadioButtonFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object value, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RadioButtonFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), value As Object, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member RadioButtonFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.RadioButtonFor (htmlHelper, expression, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="value">The value of the selected radio button. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a radio button input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <summary>Returns a text input element by using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <summary>Returns a text input element by using the specified HTML helper, the name of the form field, and the value.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element by using the specified HTML helper, the name of the form field, the value, and the HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, format)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="format" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field.</param>
          <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="format">A string that is used to format the input.</param>
          <summary>Returns a text input element.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, format, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="format">A string that is used to format the input.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object value, string format, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member TextBox : System.Web.Mvc.HtmlHelper * string * obj * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBox (htmlHelper, name, value, format, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field and the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> key that is used to look up the value.</param>
          <param name="value">The value of the text input element. The value is retrieved in this order - the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object, the value of this parameter, the <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, and lastly, a value attribute in the html attributes.</param>
          <param name="format">A string that is used to format the input.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Returns a text input element for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element for each property in the object that is represented by the specified expression, using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, format)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="format" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="format">A string that is used to format the input.</param>
          <summary>Returns a text input element.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, format, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="format">A string that is used to format the input.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.InputExtensions.TextBoxFor (htmlHelper, expression, format, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="format">A string that is used to format the input.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a text input element.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.InputExtensions" Member="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Label">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Label (this System.Web.Mvc.HtmlHelper html, string expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Label(class System.Web.Mvc.HtmlHelper html, string expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Label (html As HtmlHelper, expression As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Label : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.Label (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Label">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Label (this System.Web.Mvc.HtmlHelper html, string expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Label(class System.Web.Mvc.HtmlHelper html, string expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Label (html As HtmlHelper, expression As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Label : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.Label (html, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Label">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Label (this System.Web.Mvc.HtmlHelper html, string expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Label(class System.Web.Mvc.HtmlHelper html, string expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Label (html As HtmlHelper, expression As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Label : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.Label (html, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Label">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Label (this System.Web.Mvc.HtmlHelper html, string expression, string labelText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Label(class System.Web.Mvc.HtmlHelper html, string expression, string labelText) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Label (html As HtmlHelper, expression As String, labelText As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Label : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.Label (html, expression, labelText)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="labelText" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="labelText">The label text to display.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression using the label text.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Label">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Label (this System.Web.Mvc.HtmlHelper html, string expression, string labelText, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Label(class System.Web.Mvc.HtmlHelper html, string expression, string labelText, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Label (html As HtmlHelper, expression As String, labelText As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Label : System.Web.Mvc.HtmlHelper * string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.Label (html, expression, labelText, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="labelText" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="labelText">The label text.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Label">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Label (this System.Web.Mvc.HtmlHelper html, string expression, string labelText, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Label(class System.Web.Mvc.HtmlHelper html, string expression, string labelText, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Label (html As HtmlHelper, expression As String, labelText As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Label : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.Label (html, expression, labelText, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="expression" Type="System.String" />
          <Parameter Name="labelText" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="labelText">The label text.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="LabelFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="LabelFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelFor (html, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="LabelFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelFor (html, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="LabelFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string labelText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string labelText) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), labelText As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelFor (html, expression, labelText)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="labelText" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="labelText">The label text to display.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression using the label text.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="LabelFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string labelText, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string labelText, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), labelText As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelFor (html, expression, labelText, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="labelText" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The type of the value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="labelText">The label text to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="LabelFor&lt;TModel,TValue&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel,TValue&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TValue&gt;&gt; expression, string labelText, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelFor&lt;TModel, TValue&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TValue&gt;&gt; expression, string labelText, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelFor(Of TModel, TValue) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TValue)), labelText As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Value&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelFor (html, expression, labelText, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TValue" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TValue&gt;&gt;" />
          <Parameter Name="labelText" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TValue">The Value.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the property to display.</param>
          <param name="labelText">The label text.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="LabelForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="LabelForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelForModel (this System.Web.Mvc.HtmlHelper html, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelForModel(class System.Web.Mvc.HtmlHelper html, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelForModel (html As HtmlHelper, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelForModel : System.Web.Mvc.HtmlHelper * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelForModel (html, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="LabelForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelForModel (this System.Web.Mvc.HtmlHelper html, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelForModel(class System.Web.Mvc.HtmlHelper html, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelForModel (html As HtmlHelper, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelForModel : System.Web.Mvc.HtmlHelper * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelForModel (html, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="LabelForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelForModel (this System.Web.Mvc.HtmlHelper html, string labelText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelForModel(class System.Web.Mvc.HtmlHelper html, string labelText) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelForModel (html As HtmlHelper, labelText As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelForModel : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelForModel (html, labelText)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="labelText" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="labelText">The label text to display.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression using the label text.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="LabelForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelForModel (this System.Web.Mvc.HtmlHelper html, string labelText, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelForModel(class System.Web.Mvc.HtmlHelper html, string labelText, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelForModel (html As HtmlHelper, labelText As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelForModel : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelForModel (html, labelText, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="labelText" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="labelText">The label Text.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="LabelForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString LabelForModel (this System.Web.Mvc.HtmlHelper html, string labelText, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString LabelForModel(class System.Web.Mvc.HtmlHelper html, string labelText, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LabelForModel (html As HtmlHelper, labelText As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member LabelForModel : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LabelExtensions.LabelForModel (html, labelText, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="labelText" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="labelText">The label text.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML label element and the property name of the property that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LabelExtensions" Member="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <summary>Returns an anchor element (a element) for the specified link text and action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, and route values.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, object routeValues, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, object routeValues, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element. The attributes are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, route values, and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, controllerName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="controllerName">The name of the controller.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, and controller.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, object routeValues, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, object routeValues, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, controllerName, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, controller, route values, and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * string * string * string * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, controllerName, protocol, hostName, fragment, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, controller, protocol, host name, URL fragment, route values, and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, System.Web.Routing.RouteValueDictionary routeValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, string protocol, string hostName, string fragment, class System.Web.Routing.RouteValueDictionary routeValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * string * string * string * string * System.Web.Routing.RouteValueDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, controllerName, protocol, hostName, fragment, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, controller, protocol, host name, URL fragment, route values as a route value dictionary, and HTML attributes as a dictionary.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, System.Web.Routing.RouteValueDictionary routeValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, string controllerName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * string * System.Web.Routing.RouteValueDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, controllerName, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="controllerName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="controllerName">The name of the controller.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, controller, route values as a route value dictionary, and HTML attributes as a dictionary.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, and route values as a route value dictionary.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ActionLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ActionLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, System.Web.Routing.RouteValueDictionary routeValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ActionLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string actionName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ActionLink : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.ActionLink (htmlHelper, linkText, actionName, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="actionName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="actionName">The name of the action.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) for the specified link text, action, route values as a route value dictionary, and HTML attributes as a dictionary.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, object routeValues, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, object routeValues, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, object routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, object routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, object routeValues, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, object routeValues, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, string protocol, string hostName, string fragment, object routeValues, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string * string * string * string * obj * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName, protocol, hostName, fragment, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Object" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route. The parameters are retrieved through reflection by examining the properties of the object. The object is typically created by using object initializer syntax.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, string protocol, string hostName, string fragment, System.Web.Routing.RouteValueDictionary routeValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, string protocol, string hostName, string fragment, class System.Web.Routing.RouteValueDictionary routeValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string * string * string * string * System.Web.Routing.RouteValueDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName, protocol, hostName, fragment, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="protocol" Type="System.String" />
          <Parameter Name="hostName" Type="System.String" />
          <Parameter Name="fragment" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
          <param name="hostName">The host name for the URL.</param>
          <param name="fragment">The URL fragment name (the anchor name).</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, System.Web.Routing.RouteValueDictionary routeValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, string routeName, class System.Web.Routing.RouteValueDictionary routeValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * string * System.Web.Routing.RouteValueDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeName, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeName" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeName">The name of the route that is used to return a virtual path.</param>
          <param name="routeValues">An object that contains the parameters for a route. </param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, System.Web.Routing.RouteValueDictionary routeValues);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeValues)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RouteLink">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString RouteLink (this System.Web.Mvc.HtmlHelper htmlHelper, string linkText, System.Web.Routing.RouteValueDictionary routeValues, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString RouteLink(class System.Web.Mvc.HtmlHelper htmlHelper, string linkText, class System.Web.Routing.RouteValueDictionary routeValues, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member RouteLink : System.Web.Mvc.HtmlHelper * string * System.Web.Routing.RouteValueDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.LinkExtensions.RouteLink (htmlHelper, linkText, routeValues, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="linkText" Type="System.String" />
          <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="linkText">The inner text of the anchor element.</param>
          <param name="routeValues">An object that contains the parameters for a route.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an anchor element (a element) that contains the virtual path of the specified action.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.LinkExtensions" Member="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Id">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Id (this System.Web.Mvc.HtmlHelper html, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Id(class System.Web.Mvc.HtmlHelper html, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Id (html As HtmlHelper, name As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Id : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.NameExtensions.Id (html, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="name">An expression that identifies the object that contains the ID.</param>
          <summary>Gets the ID of the <see cref="T:System.Web.Mvc.HtmlHelper" /> string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.NameExtensions" Member="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="IdFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString IdFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString IdFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IdFor(Of TModel, TProperty) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member IdFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.NameExtensions.IdFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the ID.</param>
          <summary> Gets the ID of the <see cref="T:System.Web.Mvc.HtmlHelper`1" /> string</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.NameExtensions" Member="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="IdForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString IdForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString IdForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IdForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member IdForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.NameExtensions.IdForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Gets the ID of the <see cref="T:System.Web.Mvc.HtmlHelper" /> string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.NameExtensions" Member="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Name">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Name (this System.Web.Mvc.HtmlHelper html, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Name(class System.Web.Mvc.HtmlHelper html, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Name (html As HtmlHelper, name As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Name : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.NameExtensions.Name (html, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="name">An expression that identifies the object that contains the name.</param>
          <summary>Gets the full HTML field name for the object that is represented by the expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.NameExtensions" Member="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="NameFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString NameFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString NameFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NameFor(Of TModel, TProperty) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member NameFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.NameExtensions.NameFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the name.</param>
          <summary>Gets the full HTML field name for the object that is represented by the expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.NameExtensions" Member="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="NameForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString NameForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString NameForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NameForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member NameForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.NameExtensions.NameForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Gets the full HTML field name for the object that is represented by the expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.NameExtensions" Member="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Partial">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Partial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Partial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member Partial : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.PartialExtensions.Partial (htmlHelper, partialViewName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="partialViewName">The name of the partial view to render.</param>
          <summary>Renders the specified partial view as an HTML-encoded string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.PartialExtensions" Member="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Partial">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Partial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Partial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member Partial : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.PartialExtensions.Partial (htmlHelper, partialViewName, model)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
          <Parameter Name="model" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="partialViewName">The name of the partial view to render.</param>
          <param name="model">The model for the partial view.</param>
          <summary>Renders the specified partial view as an HTML-encoded string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.PartialExtensions" Member="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Partial">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Partial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model, System.Web.Mvc.ViewDataDictionary viewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Partial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model, class System.Web.Mvc.ViewDataDictionary viewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)" />
        <MemberSignature Language="F#" Value="static member Partial : System.Web.Mvc.HtmlHelper * string * obj * System.Web.Mvc.ViewDataDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.PartialExtensions.Partial (htmlHelper, partialViewName, model, viewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
          <Parameter Name="model" Type="System.Object" />
          <Parameter Name="viewData" Type="System.Web.Mvc.ViewDataDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="partialViewName">The name of the partial view.</param>
          <param name="model">The model for the partial view.</param>
          <param name="viewData">The view data dictionary for the partial view.</param>
          <summary>Renders the specified partial view as an HTML-encoded string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.PartialExtensions" Member="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Partial">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Partial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, System.Web.Mvc.ViewDataDictionary viewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Partial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, class System.Web.Mvc.ViewDataDictionary viewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)" />
        <MemberSignature Language="F#" Value="static member Partial : System.Web.Mvc.HtmlHelper * string * System.Web.Mvc.ViewDataDictionary -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.PartialExtensions.Partial (htmlHelper, partialViewName, viewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
          <Parameter Name="viewData" Type="System.Web.Mvc.ViewDataDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="partialViewName">The name of the partial view to render.</param>
          <param name="viewData">The view data dictionary for the partial view.</param>
          <summary>Renders the specified partial view as an HTML-encoded string.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.PartialExtensions" Member="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderPartial">
        <MemberSignature Language="C#" Value="public static void RenderPartial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderPartial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member RenderPartial : System.Web.Mvc.HtmlHelper * string -&gt; unit" Usage="System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial (htmlHelper, partialViewName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper.</param>
          <param name="partialViewName">The name of the partial view</param>
          <summary>Renders the specified partial view by using the specified HTML helper.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.RenderPartialExtensions" Member="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderPartial">
        <MemberSignature Language="C#" Value="public static void RenderPartial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderPartial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member RenderPartial : System.Web.Mvc.HtmlHelper * string * obj -&gt; unit" Usage="System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial (htmlHelper, partialViewName, model)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
          <Parameter Name="model" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper.</param>
          <param name="partialViewName">The name of the partial view.</param>
          <param name="model">The model.</param>
          <summary>Renders the specified partial view, passing it a copy of the current <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object, but with the Model property set to the specified model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.RenderPartialExtensions" Member="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderPartial">
        <MemberSignature Language="C#" Value="public static void RenderPartial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model, System.Web.Mvc.ViewDataDictionary viewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderPartial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, object model, class System.Web.Mvc.ViewDataDictionary viewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)" />
        <MemberSignature Language="F#" Value="static member RenderPartial : System.Web.Mvc.HtmlHelper * string * obj * System.Web.Mvc.ViewDataDictionary -&gt; unit" Usage="System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial (htmlHelper, partialViewName, model, viewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
          <Parameter Name="model" Type="System.Object" />
          <Parameter Name="viewData" Type="System.Web.Mvc.ViewDataDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper.</param>
          <param name="partialViewName">The name of the partial view.</param>
          <param name="model">The model for the partial view.</param>
          <param name="viewData">The view data for the partial view.</param>
          <summary>Renders the specified partial view, replacing the partial view's ViewData property with the specified <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object and setting the Model property of the view data to the specified model.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.RenderPartialExtensions" Member="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="RenderPartial">
        <MemberSignature Language="C#" Value="public static void RenderPartial (this System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, System.Web.Mvc.ViewDataDictionary viewData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenderPartial(class System.Web.Mvc.HtmlHelper htmlHelper, string partialViewName, class System.Web.Mvc.ViewDataDictionary viewData) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)" />
        <MemberSignature Language="F#" Value="static member RenderPartial : System.Web.Mvc.HtmlHelper * string * System.Web.Mvc.ViewDataDictionary -&gt; unit" Usage="System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial (htmlHelper, partialViewName, viewData)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="partialViewName" Type="System.String" />
          <Parameter Name="viewData" Type="System.Web.Mvc.ViewDataDictionary" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper.</param>
          <param name="partialViewName">The name of the partial view.</param>
          <param name="viewData">The view data.</param>
          <summary>Renders the specified partial view, replacing its ViewData property with the specified <see cref="T:System.Web.Mvc.ViewDataDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.RenderPartialExtensions" Member="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <summary>Returns a single-selection select element using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, selectList)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, and the specified list items.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, the specified list items, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, the specified list items, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, selectList, optionLabel)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, the specified list items, and an option label.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, selectList, optionLabel, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, the specified list items, an option label, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, selectList, optionLabel, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, the specified list items, an option label, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="DropDownList">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownList (this System.Web.Mvc.HtmlHelper htmlHelper, string name, string optionLabel);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownList(class System.Web.Mvc.HtmlHelper htmlHelper, string name, string optionLabel) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member DropDownList : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownList (htmlHelper, name, optionLabel)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="optionLabel" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <summary>Returns a single-selection select element using the specified HTML helper, the name of the form field, and an option label.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DropDownListFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropDownListFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownListFor (htmlHelper, expression, selectList)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DropDownListFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropDownListFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownListFor (htmlHelper, expression, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DropDownListFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropDownListFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownListFor (htmlHelper, expression, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DropDownListFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropDownListFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), optionLabel As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownListFor (htmlHelper, expression, selectList, optionLabel)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items and option label.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DropDownListFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropDownListFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), optionLabel As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownListFor (htmlHelper, expression, selectList, optionLabel, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items, option label, and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="DropDownListFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString DropDownListFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, string optionLabel, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DropDownListFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), optionLabel As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member DropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.DropDownListFor (htmlHelper, expression, selectList, optionLabel, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items, option label, and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EnumDropDownListFor&lt;TModel,TEnum&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel,TEnum&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TEnum&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel, TEnum&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TEnum&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnumDropDownListFor(Of TModel, TEnum) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TEnum))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EnumDropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Enum&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TEnum" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TEnum&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TEnum">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the values to display.</param>
          <summary>Returns an HTML select element for each value in the enumeration that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EnumDropDownListFor&lt;TModel,TEnum&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel,TEnum&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TEnum&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel, TEnum&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TEnum&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnumDropDownListFor(Of TModel, TEnum) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TEnum)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EnumDropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Enum&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TEnum" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TEnum&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TEnum">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the values to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each value in the enumeration that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EnumDropDownListFor&lt;TModel,TEnum&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel,TEnum&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TEnum&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel, TEnum&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TEnum&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnumDropDownListFor(Of TModel, TEnum) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TEnum)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EnumDropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Enum&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TEnum" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TEnum&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TEnum">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the values to display.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each value in the enumeration that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EnumDropDownListFor&lt;TModel,TEnum&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel,TEnum&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TEnum&gt;&gt; expression, string optionLabel);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel, TEnum&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TEnum&gt;&gt; expression, string optionLabel) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnumDropDownListFor(Of TModel, TEnum) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TEnum)), optionLabel As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EnumDropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Enum&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor (htmlHelper, expression, optionLabel)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TEnum" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TEnum&gt;&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TEnum">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the values to display.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <summary>Returns an HTML select element for each value in the enumeration that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EnumDropDownListFor&lt;TModel,TEnum&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel,TEnum&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TEnum&gt;&gt; expression, string optionLabel, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel, TEnum&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TEnum&gt;&gt; expression, string optionLabel, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnumDropDownListFor(Of TModel, TEnum) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TEnum)), optionLabel As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EnumDropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Enum&gt;&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor (htmlHelper, expression, optionLabel, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TEnum" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TEnum&gt;&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TEnum">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the values to display.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each value in the enumeration that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="EnumDropDownListFor&lt;TModel,TEnum&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel,TEnum&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TEnum&gt;&gt; expression, string optionLabel, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString EnumDropDownListFor&lt;TModel, TEnum&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TEnum&gt;&gt; expression, string optionLabel, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnumDropDownListFor(Of TModel, TEnum) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TEnum)), optionLabel As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member EnumDropDownListFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Enum&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor (htmlHelper, expression, optionLabel, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TEnum" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TEnum&gt;&gt;" />
          <Parameter Name="optionLabel" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TEnum">The type of the value.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the values to display.</param>
          <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each value in the enumeration that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ListBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member ListBox : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBox (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <summary>Returns a multi-select select element using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ListBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
        <MemberSignature Language="F#" Value="static member ListBox : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBox (htmlHelper, name, selectList)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <summary>Returns a multi-select select element using the specified HTML helper, the name of the form field, and the specified list items.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ListBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ListBox : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBox (htmlHelper, name, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a multi-select select element using the specified HTML helper, the name of the form field, the specified list items, and the specified HMTL attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ListBox">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBox (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBox(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
        <MemberSignature Language="F#" Value="static member ListBox : System.Web.Mvc.HtmlHelper * string * seq&lt;System.Web.Mvc.SelectListItem&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBox (htmlHelper, name, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns a multi-select select element using the specified HTML helper, the name of the form field, and the specified list items.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ListBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ListBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBoxFor (htmlHelper, expression, selectList)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression and using the specified list items.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ListBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ListBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBoxFor (htmlHelper, expression, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ListBoxFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ListBoxFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ListBoxFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Mvc.SelectListItem&gt; selectList, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListBoxFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ListBoxFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * seq&lt;System.Web.Mvc.SelectListItem&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.SelectExtensions.ListBoxFor (htmlHelper, expression, selectList, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="selectList" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Mvc.SelectListItem&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to display.</param>
          <param name="selectList">A collection of <see cref="T:System.Web.Mvc.SelectListItem" /> objects that are used to populate the drop-down list.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML select element for each property in the object that is represented by the specified expression using the specified list items and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.SelectExtensions" Member="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper and the name of the form field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper, the name of the form field, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, string value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, string value) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, value)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="value">The text content.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper, the name of the form field, and the text content.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="value">The text content.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper, the name of the form field, the text content, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, int rows, int columns, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, int32 rows, int32 columns, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * string * int * int * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, value, rows, columns, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="rows" Type="System.Int32" />
          <Parameter Name="columns" Type="System.Int32" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="value">The text content.</param>
          <param name="rows">The number of rows.</param>
          <param name="columns">The number of columns.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper, the name of the form field, the text content, the number of rows and columns, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, int rows, int columns, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, int32 rows, int32 columns, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * string * int * int * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, value, rows, columns, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="rows" Type="System.Int32" />
          <Parameter Name="columns" Type="System.Int32" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="value">The text content.</param>
          <param name="rows">The number of rows.</param>
          <param name="columns">The number of columns.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper, the name of the form field, the text content, the number of rows and columns, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="TextArea">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextArea (this System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextArea(class System.Web.Mvc.HtmlHelper htmlHelper, string name, string value, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member TextArea : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextArea (htmlHelper, name, value, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the form field to return.</param>
          <param name="value">The text content.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
          <summary>Returns the specified textarea element by using the specified HTML helper, the name of the form field, the text content, and the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextAreaFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextAreaFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextAreaFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextAreaFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextAreaFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextAreaFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextAreaFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, int rows, int columns, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, int32 rows, int32 columns, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextAreaFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), rows As Integer, columns As Integer, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextAreaFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * int * int * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor (htmlHelper, expression, rows, columns, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="rows" Type="System.Int32" />
          <Parameter Name="columns" Type="System.Int32" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="rows">The number of rows.</param>
          <param name="columns">The number of columns.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes and the number of rows and columns.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextAreaFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, int rows, int columns, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, int32 rows, int32 columns, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextAreaFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), rows As Integer, columns As Integer, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextAreaFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * int * int * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor (htmlHelper, expression, rows, columns, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="rows" Type="System.Int32" />
          <Parameter Name="columns" Type="System.Int32" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="rows">The number of rows.</param>
          <param name="columns">The number of columns.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes and the number of rows and columns.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="TextAreaFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString TextAreaFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextAreaFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member TextAreaFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor (htmlHelper, expression, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes to set for the element.</param>
          <summary>Returns an HTML textarea element for each property in the object that is represented by the specified expression using the specified HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.TextAreaExtensions" Member="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Validate">
        <MemberSignature Language="C#" Value="public static void Validate (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member Validate : System.Web.Mvc.HtmlHelper * string -&gt; unit" Usage="System.Web.Mvc.Html.ValidationExtensions.Validate (htmlHelper, modelName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <summary>Retrieves the validation metadata for the specified model and applies each rule to the data field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidateFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static void ValidateFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ValidateFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)))" />
        <MemberSignature Language="F#" Value="static member ValidateFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; unit" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidateFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Retrieves the validation metadata for the specified model and applies each rule to the data field.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <summary>Displays a validation message if an error exists for the specified field in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <summary>Displays a validation message if an error exists for the specified field in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, htmlAttributes, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="modelName">The name of the entry being validated.</param>
          <param name="htmlAttributes">An <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the HTML attributes for the element.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Displays a validation message if an error exists for the specified entry in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element. </param>
          <summary>Displays a validation message if an error exists for the specified field in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, object htmlAttributes, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, object htmlAttributes, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, htmlAttributes, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="modelName">The name of the entry being validated.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Displays a validation message if an error exists for the specified entry in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, validationMessage)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="validationMessage" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <param name="validationMessage">The message to display if the specified field contains an error.</param>
          <summary>Displays a validation message if an error exists for the specified field in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, validationMessage, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <param name="validationMessage">The message to display if the specified field contains an error.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <summary>Displays a validation message if an error exists for the specified field in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, validationMessage, htmlAttributes, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="modelName">The name of the model object being validated.</param>
          <param name="validationMessage">The message to display if the specified entry contains an error.</param>
          <param name="htmlAttributes">An <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the HTML attributes for the element.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Displays a validation message if an error exists for the specified entry in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, validationMessage, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="modelName">The name of the property or model object that is being validated.</param>
          <param name="validationMessage">The message to display if the specified field contains an error.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element. </param>
          <summary>Displays a validation message if an error exists for the specified field in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, object htmlAttributes, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, object htmlAttributes, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, validationMessage, htmlAttributes, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="modelName">The name of the entry being validated.</param>
          <param name="validationMessage">The message to display if the specified entry contains an error.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Displays a validation message if an error exists for the specified entry in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationMessage">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessage (this System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessage(class System.Web.Mvc.HtmlHelper htmlHelper, string modelName, string validationMessage, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationMessage : System.Web.Mvc.HtmlHelper * string * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessage (htmlHelper, modelName, validationMessage, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="modelName" Type="System.String" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="modelName">The name of the entry being validated.</param>
          <param name="validationMessage">The message to display if the specified entry contains an error.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Displays a validation message if an error exists for the specified entry in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <summary>Returns the HTML markup for a validation-error message for each data field that is represented by the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string validationMessage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string validationMessage) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), validationMessage As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression, validationMessage)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="validationMessage" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="validationMessage">The message to display if the specified field contains an error.</param>
          <summary>Returns the HTML markup for a validation-error message for each data field that is represented by the specified expression, using the specified message.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string validationMessage, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string validationMessage, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), validationMessage As String, htmlAttributes As IDictionary(Of String, Object)) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression, validationMessage, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="validationMessage">The message to display if the specified field contains an error.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <summary>Returns the HTML markup for a validation-error message for each data field that is represented by the specified expression, using the specified message and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string validationMessage, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string validationMessage, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), validationMessage As String, htmlAttributes As IDictionary(Of String, Object), tag As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression, validationMessage, htmlAttributes, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="validationMessage">The message to display if a validation error occurs.</param>
          <param name="htmlAttributes">An <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the HTML attributes for the element.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Returns the HTML markup for a validation-error message for the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string validationMessage, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string validationMessage, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), validationMessage As String, htmlAttributes As Object) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression, validationMessage, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="validationMessage">The message to display if the specified field contains an error.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <summary>Returns the HTML markup for a validation-error message for each data field that is represented by the specified expression, using the specified message and HTML attributes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string validationMessage, object htmlAttributes, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string validationMessage, object htmlAttributes, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), validationMessage As String, htmlAttributes As Object, tag As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression, validationMessage, htmlAttributes, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="validationMessage">The message to display if a validation error occurs.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Returns the HTML markup for a validation-error message for the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValidationMessageFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; htmlHelper, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string validationMessage, string tag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationMessageFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; htmlHelper, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string validationMessage, string tag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidationMessageFor(Of TModel, TProperty) (htmlHelper As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), validationMessage As String, tag As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValidationMessageFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor (htmlHelper, expression, validationMessage, tag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="validationMessage" Type="System.String" />
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The type of the model.</typeparam>
          <typeparam name="TProperty">The type of the property.</typeparam>
          <param name="htmlHelper">The HTML helper instance that this method operates on.</param>
          <param name="expression">An expression that identifies the object that contains the properties to render.</param>
          <param name="validationMessage">The message to display if a validation error occurs.</param>
          <param name="tag">The tag to be set for the wrapping HTML element of the validation message.</param>
          <summary>Returns the HTML markup for a validation-error message for the specified expression.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary htmlHelper" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="excludePropertyErrors">true to have the summary display model-level errors only, or false to have the summary display all errors.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object and optionally displays only model-level errors.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors, message)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="excludePropertyErrors">true to have the summary display model-level errors only, or false to have the summary display all errors.</param>
          <param name="message">The message to display with the validation summary.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object and optionally displays only model-level errors.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors, message, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="excludePropertyErrors">true to have the summary display model-level errors only, or false to have the summary display all errors.</param>
          <param name="message">The message to display with the validation summary.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes for the element.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object and optionally displays only model-level errors.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes, string headingTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes, string headingTag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors, message, htmlAttributes, headingTag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
          <Parameter Name="headingTag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">To be added.</param>
          <param name="excludePropertyErrors">To be added.</param>
          <param name="message">To be added.</param>
          <param name="htmlAttributes">To be added.</param>
          <param name="headingTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors, message, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="excludePropertyErrors">true to have the summary display model-level errors only, or false to have the summary display all errors.</param>
          <param name="message">The message to display with the validation summary.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object and optionally displays only model-level errors.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, object htmlAttributes, string headingTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, object htmlAttributes, string headingTag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors, message, htmlAttributes, headingTag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
          <Parameter Name="headingTag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">To be added.</param>
          <param name="excludePropertyErrors">To be added.</param>
          <param name="message">To be added.</param>
          <param name="htmlAttributes">To be added.</param>
          <param name="headingTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, string headingTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, bool excludePropertyErrors, string message, string headingTag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * bool * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, excludePropertyErrors, message, headingTag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="excludePropertyErrors" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="headingTag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">To be added.</param>
          <param name="excludePropertyErrors">To be added.</param>
          <param name="message">To be added.</param>
          <param name="headingTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, string message);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, string message) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, message)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="message" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HMTL helper instance that this method extends.</param>
          <param name="message">The message to display if the specified field contains an error.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, string message, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, string message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, message, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="message">The message to display if the specified field contains an error.</param>
          <param name="htmlAttributes">A dictionary that contains the HTML attributes for the element.</param>
          <summary>Returns an unordered list (ul element) of validation messages that are in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, string message, System.Collections.Generic.IDictionary&lt;string,object&gt; htmlAttributes, string headingTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, string message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; htmlAttributes, string headingTag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, message, htmlAttributes, headingTag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
          <Parameter Name="headingTag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">To be added.</param>
          <param name="message">To be added.</param>
          <param name="htmlAttributes">To be added.</param>
          <param name="headingTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, string message, object htmlAttributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, string message, object htmlAttributes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * string * obj -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, message, htmlAttributes)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">The HTML helper instance that this method extends.</param>
          <param name="message">The message to display if the specified field contains an error.</param>
          <param name="htmlAttributes">An object that contains the HTML attributes for the element. </param>
          <summary>Returns an unordered list (ul element) of validation messages in the <see cref="T:System.Web.Mvc.ModelStateDictionary" /> object.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, string message, object htmlAttributes, string headingTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, string message, object htmlAttributes, string headingTag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * string * obj * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, message, htmlAttributes, headingTag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="htmlAttributes" Type="System.Object" />
          <Parameter Name="headingTag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">To be added.</param>
          <param name="message">To be added.</param>
          <param name="htmlAttributes">To be added.</param>
          <param name="headingTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValidationSummary">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValidationSummary (this System.Web.Mvc.HtmlHelper htmlHelper, string message, string headingTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValidationSummary(class System.Web.Mvc.HtmlHelper htmlHelper, string message, string headingTag) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="F#" Value="static member ValidationSummary : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValidationExtensions.ValidationSummary (htmlHelper, message, headingTag)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="htmlHelper" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="headingTag" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="htmlHelper">To be added.</param>
          <param name="message">To be added.</param>
          <param name="headingTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValidationExtensions" Member="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Value">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Value (this System.Web.Mvc.HtmlHelper html, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Value(class System.Web.Mvc.HtmlHelper html, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Value (html As HtmlHelper, name As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Value : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValueExtensions.Value (html, name)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the model.</param>
          <summary>Provides a mechanism to create custom HTML markup compatible with the ASP.NET MVC model binders and templates.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValueExtensions" Member="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="Value">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString Value (this System.Web.Mvc.HtmlHelper html, string name, string format);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString Value(class System.Web.Mvc.HtmlHelper html, string name, string format) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Value (html As HtmlHelper, name As String, format As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member Value : System.Web.Mvc.HtmlHelper * string * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValueExtensions.Value (html, name, format)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="format" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="name">The name of the model.</param>
          <param name="format">The format string.</param>
          <summary>Provides a mechanism to create custom HTML markup compatible with the ASP.NET MVC model binders and templates.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValueExtensions" Member="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValueFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValueFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValueFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValueFor(Of TModel, TProperty) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty))) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValueFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValueExtensions.ValueFor (html, expression)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The model.</typeparam>
          <typeparam name="TProperty">The property.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to expose.</param>
          <summary>Provides a mechanism to create custom HTML markup compatible with the ASP.NET MVC model binders and templates.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValueExtensions" Member="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper`1" />
      </Targets>
      <Member MemberName="ValueFor&lt;TModel,TProperty&gt;">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValueFor&lt;TModel,TProperty&gt; (this System.Web.Mvc.HtmlHelper&lt;TModel&gt; html, System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProperty&gt;&gt; expression, string format);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValueFor&lt;TModel, TProperty&gt;(class System.Web.Mvc.HtmlHelper`1&lt;!!TModel&gt; html, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, !!TProperty&gt;&gt; expression, string format) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValueFor(Of TModel, TProperty) (html As HtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TProperty)), format As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValueFor : System.Web.Mvc.HtmlHelper&lt;'Model&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Property&gt;&gt; * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValueExtensions.ValueFor (html, expression, format)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="TModel" />
          <TypeParameter Name="TProperty" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper&lt;TModel&gt;" RefType="this" />
          <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProperty&gt;&gt;" />
          <Parameter Name="format" Type="System.String" />
        </Parameters>
        <Docs>
          <typeparam name="TModel">The model.</typeparam>
          <typeparam name="TProperty">The property.</typeparam>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="expression">An expression that identifies the object that contains the properties to expose.</param>
          <param name="format">The format string.</param>
          <summary>Provides a mechanism to create custom HTML markup compatible with the ASP.NET MVC model binders and templates.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValueExtensions" Member="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValueForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValueForModel (this System.Web.Mvc.HtmlHelper html);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValueForModel(class System.Web.Mvc.HtmlHelper html) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValueForModel (html As HtmlHelper) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValueForModel : System.Web.Mvc.HtmlHelper -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValueExtensions.ValueForModel html" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <summary>Provides a mechanism to create custom HTML markup compatible with the ASP.NET MVC model binders and templates.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValueExtensions" Member="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Mvc.HtmlHelper" />
      </Targets>
      <Member MemberName="ValueForModel">
        <MemberSignature Language="C#" Value="public static System.Web.Mvc.MvcHtmlString ValueForModel (this System.Web.Mvc.HtmlHelper html, string format);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Mvc.MvcHtmlString ValueForModel(class System.Web.Mvc.HtmlHelper html, string format) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValueForModel (html As HtmlHelper, format As String) As MvcHtmlString" />
        <MemberSignature Language="F#" Value="static member ValueForModel : System.Web.Mvc.HtmlHelper * string -&gt; System.Web.Mvc.MvcHtmlString" Usage="System.Web.Mvc.Html.ValueExtensions.ValueForModel (html, format)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Mvc.MvcHtmlString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="html" Type="System.Web.Mvc.HtmlHelper" RefType="this" />
          <Parameter Name="format" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="html">The HTML helper instance that this method extends.</param>
          <param name="format">The format string.</param>
          <summary>Provides a mechanism to create custom HTML markup compatible with the ASP.NET MVC model binders and templates.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.Html.ValueExtensions" Member="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.HttpRequestBase" />
      </Targets>
      <Member MemberName="GetHttpMethodOverride">
        <MemberSignature Language="C#" Value="public static string GetHttpMethodOverride (this System.Web.HttpRequestBase request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHttpMethodOverride(class System.Web.HttpRequestBase request) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHttpMethodOverride (request As HttpRequestBase) As String" />
        <MemberSignature Language="F#" Value="static member GetHttpMethodOverride : System.Web.HttpRequestBase -&gt; string" Usage="System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride request" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="request" Type="System.Web.HttpRequestBase" RefType="this" />
        </Parameters>
        <Docs>
          <param name="request">An object that contains the HTTP values that were sent by a client during a Web request.</param>
          <summary>Retrieves the HTTP data-transfer method override that was used by the client.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.HttpRequestExtensions" Member="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Specialized.NameValueCollection" />
      </Targets>
      <Member MemberName="CopyTo">
        <MemberSignature Language="C#" Value="public static void CopyTo (this System.Collections.Specialized.NameValueCollection collection, System.Collections.Generic.IDictionary&lt;string,object&gt; destination);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo(class System.Collections.Specialized.NameValueCollection collection, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; destination) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo (collection As NameValueCollection, destination As IDictionary(Of String, Object))" />
        <MemberSignature Language="F#" Value="static member CopyTo : System.Collections.Specialized.NameValueCollection * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; unit" Usage="System.Web.Mvc.NameValueCollectionExtensions.CopyTo (collection, destination)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" RefType="this" />
          <Parameter Name="destination" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        </Parameters>
        <Docs>
          <param name="collection">The collection.</param>
          <param name="destination">The destination.</param>
          <summary>Copies the specified collection to the specified destination.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.NameValueCollectionExtensions" Member="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Collections.Specialized.NameValueCollection" />
      </Targets>
      <Member MemberName="CopyTo">
        <MemberSignature Language="C#" Value="public static void CopyTo (this System.Collections.Specialized.NameValueCollection collection, System.Collections.Generic.IDictionary&lt;string,object&gt; destination, bool replaceEntries);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo(class System.Collections.Specialized.NameValueCollection collection, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; destination, bool replaceEntries) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo (collection As NameValueCollection, destination As IDictionary(Of String, Object), replaceEntries As Boolean)" />
        <MemberSignature Language="F#" Value="static member CopyTo : System.Collections.Specialized.NameValueCollection * System.Collections.Generic.IDictionary&lt;string, obj&gt; * bool -&gt; unit" Usage="System.Web.Mvc.NameValueCollectionExtensions.CopyTo (collection, destination, replaceEntries)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" RefType="this" />
          <Parameter Name="destination" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
          <Parameter Name="replaceEntries" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="collection">The collection.</param>
          <param name="destination">The destination.</param>
          <param name="replaceEntries">true to replace previous entries; otherwise, false.</param>
          <summary>Copies the specified collection to the specified destination, and optionally replaces previous entries.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.NameValueCollectionExtensions" Member="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapMvcAttributeRoutes">
        <MemberSignature Language="C#" Value="public static void MapMvcAttributeRoutes (this System.Web.Routing.RouteCollection routes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapMvcAttributeRoutes(class System.Web.Routing.RouteCollection routes) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapMvcAttributeRoutes (routes As RouteCollection)" />
        <MemberSignature Language="F#" Value="static member MapMvcAttributeRoutes : System.Web.Routing.RouteCollection -&gt; unit" Usage="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes routes" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes.</param>
          <summary>Maps the attribute-defined routes for the application.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions" Member="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapMvcAttributeRoutes">
        <MemberSignature Language="C#" Value="public static void MapMvcAttributeRoutes (this System.Web.Routing.RouteCollection routes, System.Web.Mvc.Routing.IDirectRouteProvider directRouteProvider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapMvcAttributeRoutes(class System.Web.Routing.RouteCollection routes, class System.Web.Mvc.Routing.IDirectRouteProvider directRouteProvider) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapMvcAttributeRoutes (routes As RouteCollection, directRouteProvider As IDirectRouteProvider)" />
        <MemberSignature Language="F#" Value="static member MapMvcAttributeRoutes : System.Web.Routing.RouteCollection * System.Web.Mvc.Routing.IDirectRouteProvider -&gt; unit" Usage="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes (routes, directRouteProvider)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="directRouteProvider" Type="System.Web.Mvc.Routing.IDirectRouteProvider" />
        </Parameters>
        <Docs>
          <param name="routes">To be added.</param>
          <param name="directRouteProvider">The <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" /> to use for mapping routes.</param>
          <summary>Maps the attribute-defined routes for the application.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions" Member="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapMvcAttributeRoutes">
        <MemberSignature Language="C#" Value="public static void MapMvcAttributeRoutes (this System.Web.Routing.RouteCollection routes, System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapMvcAttributeRoutes(class System.Web.Routing.RouteCollection routes, class System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapMvcAttributeRoutes (routes As RouteCollection, constraintResolver As IInlineConstraintResolver)" />
        <MemberSignature Language="F#" Value="static member MapMvcAttributeRoutes : System.Web.Routing.RouteCollection * System.Web.Mvc.Routing.IInlineConstraintResolver -&gt; unit" Usage="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes (routes, constraintResolver)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="constraintResolver" Type="System.Web.Mvc.Routing.IInlineConstraintResolver" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes.</param>
          <param name="constraintResolver">The <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> to use for resolving inline constraints in route templates.</param>
          <summary>Maps the attribute-defined routes for the application.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions" Member="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapMvcAttributeRoutes">
        <MemberSignature Language="C#" Value="public static void MapMvcAttributeRoutes (this System.Web.Routing.RouteCollection routes, System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver, System.Web.Mvc.Routing.IDirectRouteProvider directRouteProvider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapMvcAttributeRoutes(class System.Web.Routing.RouteCollection routes, class System.Web.Mvc.Routing.IInlineConstraintResolver constraintResolver, class System.Web.Mvc.Routing.IDirectRouteProvider directRouteProvider) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MapMvcAttributeRoutes (routes As RouteCollection, constraintResolver As IInlineConstraintResolver, directRouteProvider As IDirectRouteProvider)" />
        <MemberSignature Language="F#" Value="static member MapMvcAttributeRoutes : System.Web.Routing.RouteCollection * System.Web.Mvc.Routing.IInlineConstraintResolver * System.Web.Mvc.Routing.IDirectRouteProvider -&gt; unit" Usage="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes (routes, constraintResolver, directRouteProvider)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="constraintResolver" Type="System.Web.Mvc.Routing.IInlineConstraintResolver" />
          <Parameter Name="directRouteProvider" Type="System.Web.Mvc.Routing.IDirectRouteProvider" />
        </Parameters>
        <Docs>
          <param name="routes">To be added.</param>
          <param name="constraintResolver">The <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> to use for resolving inline constraints in route templates.</param>
          <param name="directRouteProvider">The <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" /> to use for mapping routes.</param>
          <summary>Maps the attribute-defined routes for the application.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionAttributeRoutingExtensions" Member="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="GetVirtualPathForArea">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.VirtualPathData GetVirtualPathForArea (this System.Web.Routing.RouteCollection routes, System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.VirtualPathData GetVirtualPathForArea(class System.Web.Routing.RouteCollection routes, class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member GetVirtualPathForArea : System.Web.Routing.RouteCollection * System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea (routes, requestContext, name, values)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="routes">An object that contains the routes for the applications.</param>
          <param name="requestContext">An object that encapsulates information about the requested route.</param>
          <param name="name">The name of the route to use when information about the URL path is retrieved.</param>
          <param name="values">An object that contains the parameters for a route.</param>
          <summary>Returns an object that contains information about the route and virtual path that are the result of generating a URL in the current area.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="GetVirtualPathForArea">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.VirtualPathData GetVirtualPathForArea (this System.Web.Routing.RouteCollection routes, System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.VirtualPathData GetVirtualPathForArea(class System.Web.Routing.RouteCollection routes, class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
        <MemberSignature Language="F#" Value="static member GetVirtualPathForArea : System.Web.Routing.RouteCollection * System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea (routes, requestContext, values)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
          <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        </Parameters>
        <Docs>
          <param name="routes">An object that contains the routes for the applications.</param>
          <param name="requestContext">An object that encapsulates information about the requested route.</param>
          <param name="values">An object that contains the parameters for a route.</param>
          <summary>Returns an object that contains information about the route and virtual path that are the result of generating a URL in the current area.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="IgnoreRoute">
        <MemberSignature Language="C#" Value="public static void IgnoreRoute (this System.Web.Routing.RouteCollection routes, string url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IgnoreRoute(class System.Web.Routing.RouteCollection routes, string url) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IgnoreRoute (routes As RouteCollection, url As String)" />
        <MemberSignature Language="F#" Value="static member IgnoreRoute : System.Web.Routing.RouteCollection * string -&gt; unit" Usage="System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute (routes, url)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="url" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="url">The URL pattern for the route to ignore.</param>
          <summary>Ignores the specified URL route for the given list of available routes.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="IgnoreRoute">
        <MemberSignature Language="C#" Value="public static void IgnoreRoute (this System.Web.Routing.RouteCollection routes, string url, object constraints);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IgnoreRoute(class System.Web.Routing.RouteCollection routes, string url, object constraints) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IgnoreRoute (routes As RouteCollection, url As String, constraints As Object)" />
        <MemberSignature Language="F#" Value="static member IgnoreRoute : System.Web.Routing.RouteCollection * string * obj -&gt; unit" Usage="System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute (routes, url, constraints)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="constraints" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="url">The URL pattern for the route to ignore.</param>
          <param name="constraints">A set of expressions that specify values for the <paramref name="url" /> parameter.</param>
          <summary>Ignores the specified URL route for the given list of the available routes and a list of constraints.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapRoute">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.Route MapRoute (this System.Web.Routing.RouteCollection routes, string name, string url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.Route MapRoute(class System.Web.Routing.RouteCollection routes, string name, string url) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRoute (routes As RouteCollection, name As String, url As String) As Route" />
        <MemberSignature Language="F#" Value="static member MapRoute : System.Web.Routing.RouteCollection * string * string -&gt; System.Web.Routing.Route" Usage="System.Web.Mvc.RouteCollectionExtensions.MapRoute (routes, name, url)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.Route</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="url" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="name">The name of the route to map.</param>
          <param name="url">The URL pattern for the route.</param>
          <summary>Maps the specified URL route.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapRoute">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.Route MapRoute (this System.Web.Routing.RouteCollection routes, string name, string url, object defaults);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.Route MapRoute(class System.Web.Routing.RouteCollection routes, string name, string url, object defaults) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRoute (routes As RouteCollection, name As String, url As String, defaults As Object) As Route" />
        <MemberSignature Language="F#" Value="static member MapRoute : System.Web.Routing.RouteCollection * string * string * obj -&gt; System.Web.Routing.Route" Usage="System.Web.Mvc.RouteCollectionExtensions.MapRoute (routes, name, url, defaults)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.Route</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="defaults" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="name">The name of the route to map.</param>
          <param name="url">The URL pattern for the route.</param>
          <param name="defaults">An object that contains default route values.</param>
          <summary>Maps the specified URL route and sets default route values.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapRoute">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.Route MapRoute (this System.Web.Routing.RouteCollection routes, string name, string url, object defaults, object constraints);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.Route MapRoute(class System.Web.Routing.RouteCollection routes, string name, string url, object defaults, object constraints) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRoute (routes As RouteCollection, name As String, url As String, defaults As Object, constraints As Object) As Route" />
        <MemberSignature Language="F#" Value="static member MapRoute : System.Web.Routing.RouteCollection * string * string * obj * obj -&gt; System.Web.Routing.Route" Usage="System.Web.Mvc.RouteCollectionExtensions.MapRoute (routes, name, url, defaults, constraints)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.Route</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="defaults" Type="System.Object" />
          <Parameter Name="constraints" Type="System.Object" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="name">The name of the route to map.</param>
          <param name="url">The URL pattern for the route.</param>
          <param name="defaults">An object that contains default route values.</param>
          <param name="constraints">A set of expressions that specify values for the <paramref name="url" /> parameter.</param>
          <summary>Maps the specified URL route and sets default route values and constraints.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapRoute">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.Route MapRoute (this System.Web.Routing.RouteCollection routes, string name, string url, object defaults, object constraints, string[] namespaces);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.Route MapRoute(class System.Web.Routing.RouteCollection routes, string name, string url, object defaults, object constraints, string[] namespaces) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRoute (routes As RouteCollection, name As String, url As String, defaults As Object, constraints As Object, namespaces As String()) As Route" />
        <MemberSignature Language="F#" Value="static member MapRoute : System.Web.Routing.RouteCollection * string * string * obj * obj * string[] -&gt; System.Web.Routing.Route" Usage="System.Web.Mvc.RouteCollectionExtensions.MapRoute (routes, name, url, defaults, constraints, namespaces)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.Route</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="defaults" Type="System.Object" />
          <Parameter Name="constraints" Type="System.Object" />
          <Parameter Name="namespaces" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="name">The name of the route to map.</param>
          <param name="url">The URL pattern for the route.</param>
          <param name="defaults">An object that contains default route values.</param>
          <param name="constraints">A set of expressions that specify values for the <paramref name="url" /> parameter.</param>
          <param name="namespaces">A set of namespaces for the application.</param>
          <summary>Maps the specified URL route and sets default route values, constraints, and namespaces.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapRoute">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.Route MapRoute (this System.Web.Routing.RouteCollection routes, string name, string url, object defaults, string[] namespaces);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.Route MapRoute(class System.Web.Routing.RouteCollection routes, string name, string url, object defaults, string[] namespaces) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRoute (routes As RouteCollection, name As String, url As String, defaults As Object, namespaces As String()) As Route" />
        <MemberSignature Language="F#" Value="static member MapRoute : System.Web.Routing.RouteCollection * string * string * obj * string[] -&gt; System.Web.Routing.Route" Usage="System.Web.Mvc.RouteCollectionExtensions.MapRoute (routes, name, url, defaults, namespaces)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.Route</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="defaults" Type="System.Object" />
          <Parameter Name="namespaces" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="name">The name of the route to map.</param>
          <param name="url">The URL pattern for the route.</param>
          <param name="defaults">An object that contains default route values.</param>
          <param name="namespaces">A set of namespaces for the application.</param>
          <summary>Maps the specified URL route and sets default route values and namespaces.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Web.Routing.RouteCollection" />
      </Targets>
      <Member MemberName="MapRoute">
        <MemberSignature Language="C#" Value="public static System.Web.Routing.Route MapRoute (this System.Web.Routing.RouteCollection routes, string name, string url, string[] namespaces);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.Route MapRoute(class System.Web.Routing.RouteCollection routes, string name, string url, string[] namespaces) cil managed" />
        <MemberSignature Language="DocId" Value="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])" />
        <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function MapRoute (routes As RouteCollection, name As String, url As String, namespaces As String()) As Route" />
        <MemberSignature Language="F#" Value="static member MapRoute : System.Web.Routing.RouteCollection * string * string * string[] -&gt; System.Web.Routing.Route" Usage="System.Web.Mvc.RouteCollectionExtensions.MapRoute (routes, name, url, namespaces)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Web.Routing.Route</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="routes" Type="System.Web.Routing.RouteCollection" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="namespaces" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="routes">A collection of routes for the application.</param>
          <param name="name">The name of the route to map.</param>
          <param name="url">The URL pattern for the route.</param>
          <param name="namespaces">A set of namespaces for the application.</param>
          <summary>Maps the specified URL route and sets the namespaces.</summary>
        </Docs>
        <Link Type="System.Web.Mvc.RouteCollectionExtensions" Member="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
