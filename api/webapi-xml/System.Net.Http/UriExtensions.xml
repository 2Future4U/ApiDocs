<Type Name="UriExtensions" FullName="System.Net.Http.UriExtensions">
  <TypeSignature Language="C#" Value="public static class UriExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UriExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.UriExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module UriExtensions" />
  <TypeSignature Language="F#" Value="type UriExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains extension methods to allow strongly typed objects to be read from the query component of <see cref="T:System.Uri" /> instances. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (this Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.UriExtensions.ParseQueryString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ParseQueryString (address As Uri) As NameValueCollection" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : Uri -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Net.Http.UriExtensions.ParseQueryString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" RefType="this" />
      </Parameters>
      <Docs>
        <param name="address">The URI to parse.</param>
        <summary>Parses the query portion of the specified URI.</summary>
        <returns>A  <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the query parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadQueryAs">
      <MemberSignature Language="C#" Value="public static bool TryReadQueryAs (this Uri address, Type type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadQueryAs(class System.Uri address, class System.Type type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.UriExtensions.TryReadQueryAs(System.Uri,System.Type,System.Object@)" />
      <MemberSignature Language="F#" Value="static member TryReadQueryAs : Uri * Type *  -&gt; bool" Usage="System.Net.Http.UriExtensions.TryReadQueryAs (address, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="address">The URI to read.</param>
        <param name="type">The type of object to read.</param>
        <param name="value">When this method returns, contains an object that is initialized from the query component of the URI. This parameter is treated as uninitialized.</param>
        <summary>Reads HTML form URL encoded data provided in the URI query string as an object of a specified type.</summary>
        <returns>true if the query component of the URI can be read as the specified type; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadQueryAs&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryReadQueryAs&lt;T&gt; (this Uri address, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadQueryAs&lt;T&gt;(class System.Uri address, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.UriExtensions.TryReadQueryAs``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadQueryAs(Of T) (address As Uri, ByRef value As T) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryReadQueryAs : Uri *  -&gt; bool" Usage="System.Net.Http.UriExtensions.TryReadQueryAs (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" RefType="this" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object to read.</typeparam>
        <param name="address">The URI to read.</param>
        <param name="value">When this method returns, contains an object that is initialized from the query component of the URI. This parameter is treated as uninitialized.</param>
        <summary>Reads HTML form URL encoded data provided in the URI query string as an object of a specified type.</summary>
        <returns>true if the query component of the URI can be read as the specified type; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadQueryAsJson">
      <MemberSignature Language="C#" Value="public static bool TryReadQueryAsJson (this Uri address, out Newtonsoft.Json.Linq.JObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadQueryAsJson(class System.Uri address, [out] class Newtonsoft.Json.Linq.JObject&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.UriExtensions.TryReadQueryAsJson(System.Uri,Newtonsoft.Json.Linq.JObject@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadQueryAsJson (address As Uri, ByRef value As JObject) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryReadQueryAsJson : Uri *  -&gt; bool" Usage="System.Net.Http.UriExtensions.TryReadQueryAsJson (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" RefType="this" />
        <Parameter Name="value" Type="Newtonsoft.Json.Linq.JObject" RefType="out" />
      </Parameters>
      <Docs>
        <param name="address">The <see cref="T:System.Uri" /> instance from which to read.</param>
        <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
        <summary>Reads HTML form URL encoded data provided in the <see cref="T:System.Uri" /> query component as a <see cref="T:Newtonsoft.Json.Linq.JObject" /> object.</summary>
        <returns>true if the query component can be read as <see cref="T:Newtonsoft.Json.Linq.JObject" />; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>