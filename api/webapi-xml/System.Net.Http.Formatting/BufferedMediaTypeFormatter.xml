<Type Name="BufferedMediaTypeFormatter" FullName="System.Net.Http.Formatting.BufferedMediaTypeFormatter">
  <TypeSignature Language="C#" Value="public abstract class BufferedMediaTypeFormatter : System.Net.Http.Formatting.MediaTypeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BufferedMediaTypeFormatter extends System.Net.Http.Formatting.MediaTypeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BufferedMediaTypeFormatter&#xA;Inherits MediaTypeFormatter" />
  <TypeSignature Language="F#" Value="type BufferedMediaTypeFormatter = class&#xA;    inherit MediaTypeFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.Formatting.MediaTypeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a helper class to allow a synchronous formatter on top of the asynchronous formatter infrastructure.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BufferedMediaTypeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BufferedMediaTypeFormatter (System.Net.Http.Formatting.BufferedMediaTypeFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.Formatting.BufferedMediaTypeFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BufferedMediaTypeFormatter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatter As BufferedMediaTypeFormatter)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.Formatting.BufferedMediaTypeFormatter : System.Net.Http.Formatting.BufferedMediaTypeFormatter -&gt; System.Net.Http.Formatting.BufferedMediaTypeFormatter" Usage="new System.Net.Http.Formatting.BufferedMediaTypeFormatter formatter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.BufferedMediaTypeFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">The <see cref="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter" /> instance to copy settings from.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.BufferedMediaTypeFormatter.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferSize As Integer" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int with get, set" Usage="System.Net.Http.Formatting.BufferedMediaTypeFormatter.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the suggested size of buffer to use with streams in bytes.</summary>
        <value>The suggested size of buffer to use with streams in bytes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStream">
      <MemberSignature Language="C#" Value="public virtual object ReadFromStream (Type type, System.IO.Stream readStream, System.Net.Http.HttpContent content, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadFromStream(class System.Type type, class System.IO.Stream readStream, class System.Net.Http.HttpContent content, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="F#" Value="abstract member ReadFromStream : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger -&gt; obj&#xA;override this.ReadFromStream : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger -&gt; obj" Usage="bufferedMediaTypeFormatter.ReadFromStream (type, readStream, content, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to deserialize.</param>
        <param name="readStream">The stream from which to read.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary>Reads synchronously from the buffered stream.</summary>
        <returns>An object of the given <paramref name="type" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStream">
      <MemberSignature Language="C#" Value="public virtual object ReadFromStream (Type type, System.IO.Stream readStream, System.Net.Http.HttpContent content, System.Net.Http.Formatting.IFormatterLogger formatterLogger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadFromStream(class System.Type type, class System.IO.Stream readStream, class System.Net.Http.HttpContent content, class System.Net.Http.Formatting.IFormatterLogger formatterLogger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadFromStream : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger * System.Threading.CancellationToken -&gt; obj&#xA;override this.ReadFromStream : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger * System.Threading.CancellationToken -&gt; obj" Usage="bufferedMediaTypeFormatter.ReadFromStream (type, readStream, content, formatterLogger, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to deserialize.</param>
        <param name="readStream">The stream from which to read.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <param name="cancellationToken">The token to cancel the operation.</param>
        <summary>Reads synchronously from the buffered stream.</summary>
        <returns>An object of the given <paramref name="type" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStreamAsync">
      <MemberSignature Language="C#" Value="public override sealed System.Threading.Tasks.Task&lt;object&gt; ReadFromStreamAsync (Type type, System.IO.Stream readStream, System.Net.Http.HttpContent content, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadFromStreamAsync(class System.Type type, class System.IO.Stream readStream, class System.Net.Http.HttpContent content, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="F#" Value="override this.ReadFromStreamAsync : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="bufferedMediaTypeFormatter.ReadFromStreamAsync (type, readStream, content, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to deserialize.</param>
        <param name="readStream">The stream from which to read.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary>Reads asynchronously from the buffered stream.</summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStreamAsync">
      <MemberSignature Language="C#" Value="public override sealed System.Threading.Tasks.Task&lt;object&gt; ReadFromStreamAsync (Type type, System.IO.Stream readStream, System.Net.Http.HttpContent content, System.Net.Http.Formatting.IFormatterLogger formatterLogger, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadFromStreamAsync(class System.Type type, class System.IO.Stream readStream, class System.Net.Http.HttpContent content, class System.Net.Http.Formatting.IFormatterLogger formatterLogger, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadFromStreamAsync : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="bufferedMediaTypeFormatter.ReadFromStreamAsync (type, readStream, content, formatterLogger, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to deserialize.</param>
        <param name="readStream">The stream from which to read.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <param name="cancellationToken">The token to cancel the operation.</param>
        <summary>Reads asynchronously from the buffered stream.</summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStream">
      <MemberSignature Language="C#" Value="public virtual void WriteToStream (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToStream(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent)" />
      <MemberSignature Language="F#" Value="abstract member WriteToStream : Type * obj * System.IO.Stream * System.Net.Http.HttpContent -&gt; unit&#xA;override this.WriteToStream : Type * obj * System.IO.Stream * System.Net.Http.HttpContent -&gt; unit" Usage="bufferedMediaTypeFormatter.WriteToStream (type, value, writeStream, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to serialize.</param>
        <param name="value">The object value to write. Can be null.</param>
        <param name="writeStream">The stream to which to write.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <summary>Writes synchronously to the buffered stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStream">
      <MemberSignature Language="C#" Value="public virtual void WriteToStream (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToStream(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteToStream : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; unit&#xA;override this.WriteToStream : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; unit" Usage="bufferedMediaTypeFormatter.WriteToStream (type, value, writeStream, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to serialize.</param>
        <param name="value">The object value to write. Can be null.</param>
        <param name="writeStream">The stream to which to write.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="cancellationToken">The token to cancel the operation.</param>
        <summary>Writes synchronously to the buffered stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStreamAsync">
      <MemberSignature Language="C#" Value="public override sealed System.Threading.Tasks.Task WriteToStreamAsync (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content, System.Net.TransportContext transportContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToStreamAsync(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content, class System.Net.TransportContext transportContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)" />
      <MemberSignature Language="F#" Value="override this.WriteToStreamAsync : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="bufferedMediaTypeFormatter.WriteToStreamAsync (type, value, writeStream, content, transportContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to serialize.</param>
        <param name="value">The object value to write.  It may be null.</param>
        <param name="writeStream">The stream to which to write.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="transportContext">The transport context.</param>
        <summary>Writes asynchronously to the buffered stream.</summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStreamAsync">
      <MemberSignature Language="C#" Value="public override sealed System.Threading.Tasks.Task WriteToStreamAsync (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content, System.Net.TransportContext transportContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToStreamAsync(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content, class System.Net.TransportContext transportContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteToStreamAsync : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Net.TransportContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="bufferedMediaTypeFormatter.WriteToStreamAsync (type, value, writeStream, content, transportContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">The type of the object to serialize.</param>
        <param name="value">The object value to write.  It may be null.</param>
        <param name="writeStream">The stream to which to write.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" />, if available. Can be null.</param>
        <param name="transportContext">The transport context.</param>
        <param name="cancellationToken">The token to cancel the operation.</param>
        <summary>Writes asynchronously to the buffered stream.</summary>
        <returns>A task object representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>