<Type Name="XmlMediaTypeFormatter" FullName="System.Net.Http.Formatting.XmlMediaTypeFormatter">
  <TypeSignature Language="C#" Value="public class XmlMediaTypeFormatter : System.Net.Http.Formatting.MediaTypeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMediaTypeFormatter extends System.Net.Http.Formatting.MediaTypeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMediaTypeFormatter&#xA;Inherits MediaTypeFormatter" />
  <TypeSignature Language="F#" Value="type XmlMediaTypeFormatter = class&#xA;    inherit MediaTypeFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.Formatting</AssemblyName>
    <AssemblyVersion>5.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.Formatting.MediaTypeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to handle Xml. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMediaTypeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlMediaTypeFormatter (System.Net.Http.Formatting.XmlMediaTypeFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.Formatting.XmlMediaTypeFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.#ctor(System.Net.Http.Formatting.XmlMediaTypeFormatter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatter As XmlMediaTypeFormatter)" />
      <MemberSignature Language="F#" Value="new System.Net.Http.Formatting.XmlMediaTypeFormatter : System.Net.Http.Formatting.XmlMediaTypeFormatter -&gt; System.Net.Http.Formatting.XmlMediaTypeFormatter" Usage="new System.Net.Http.Formatting.XmlMediaTypeFormatter formatter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatter" Type="System.Net.Http.Formatting.XmlMediaTypeFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">The <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> instance to copy settings from.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadType">
      <MemberSignature Language="C#" Value="public override bool CanReadType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CanReadType(System.Type)" />
      <MemberSignature Language="F#" Value="override this.CanReadType : Type -&gt; bool" Usage="xmlMediaTypeFormatter.CanReadType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to deserialize.</param>
        <summary>Queries whether the <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> can deserializean object of the specified type.</summary>
        <returns>true if the <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> can deserialize the type; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteType">
      <MemberSignature Language="C#" Value="public override bool CanWriteType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CanWriteType(System.Type)" />
      <MemberSignature Language="F#" Value="override this.CanWriteType : Type -&gt; bool" Usage="xmlMediaTypeFormatter.CanWriteType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to serialize.</param>
        <summary>Queries whether the  <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> can serializean object of the specified type.</summary>
        <returns>true if the <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> can serialize the type; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataContractSerializer">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Serialization.DataContractSerializer CreateDataContractSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Serialization.DataContractSerializer CreateDataContractSerializer(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CreateDataContractSerializer(System.Type)" />
      <MemberSignature Language="F#" Value="abstract member CreateDataContractSerializer : Type -&gt; System.Runtime.Serialization.DataContractSerializer&#xA;override this.CreateDataContractSerializer : Type -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="xmlMediaTypeFormatter.CreateDataContractSerializer type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type of object that will be serialized or deserialized.</param>
        <summary>Called during deserialization to get the DataContractSerializer serializer.</summary>
        <returns>The object used for serialization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlReader">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlReader CreateXmlReader (System.IO.Stream readStream, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlReader CreateXmlReader(class System.IO.Stream readStream, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CreateXmlReader(System.IO.Stream,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateXmlReader (readStream As Stream, content As HttpContent) As XmlReader" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlReader : System.IO.Stream * System.Net.Http.HttpContent -&gt; System.Xml.XmlReader&#xA;override this.CreateXmlReader : System.IO.Stream * System.Net.Http.HttpContent -&gt; System.Xml.XmlReader" Usage="xmlMediaTypeFormatter.CreateXmlReader (readStream, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="readStream">The <see cref="T:System.IO.Stream" /> to read from.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being read.</param>
        <summary>Called during deserialization to get the XML reader to use for reading objects from the stream.</summary>
        <returns>The <see cref="T:System.Xml.XmlReader" /> to use for reading objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlSerializer">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Serialization.XmlSerializer CreateXmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializer CreateXmlSerializer(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CreateXmlSerializer(System.Type)" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer&#xA;override this.CreateXmlSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="xmlMediaTypeFormatter.CreateXmlSerializer type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type of object that will be serialized or deserialized.</param>
        <summary>Called during deserialization to get the XML serializer.</summary>
        <returns>The object used for serialization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlWriter">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlWriter CreateXmlWriter (System.IO.Stream writeStream, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlWriter CreateXmlWriter(class System.IO.Stream writeStream, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CreateXmlWriter(System.IO.Stream,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateXmlWriter (writeStream As Stream, content As HttpContent) As XmlWriter" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlWriter : System.IO.Stream * System.Net.Http.HttpContent -&gt; System.Xml.XmlWriter&#xA;override this.CreateXmlWriter : System.IO.Stream * System.Net.Http.HttpContent -&gt; System.Xml.XmlWriter" Usage="xmlMediaTypeFormatter.CreateXmlWriter (writeStream, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="writeStream">The <see cref="T:System.IO.Stream" /> to write to.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being written.</param>
        <summary>Called during serialization to get the XML writer to use for writing objects to the stream.</summary>
        <returns>The <see cref="T:System.Xml.XmlWriter" /> to use for writing objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMediaType">
      <MemberSignature Language="C#" Value="public static System.Net.Http.Headers.MediaTypeHeaderValue DefaultMediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Http.Headers.MediaTypeHeaderValue DefaultMediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.DefaultMediaType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMediaType As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="member this.DefaultMediaType : System.Net.Http.Headers.MediaTypeHeaderValue" Usage="System.Net.Http.Formatting.XmlMediaTypeFormatter.DefaultMediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default media type for the XML formatter.</summary>
        <value>The default media type, which is “application/xml”.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeserializer">
      <MemberSignature Language="C#" Value="protected internal virtual object GetDeserializer (Type type, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetDeserializer(class System.Type type, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.GetDeserializer(System.Type,System.Net.Http.HttpContent)" />
      <MemberSignature Language="F#" Value="abstract member GetDeserializer : Type * System.Net.Http.HttpContent -&gt; obj&#xA;override this.GetDeserializer : Type * System.Net.Http.HttpContent -&gt; obj" Usage="xmlMediaTypeFormatter.GetDeserializer (type, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="type">The type of object to deserialize.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being read.</param>
        <summary>Called during deserialization to get the XML serializer to use for deserializing objects.</summary>
        <returns>An instance of <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> or <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use for deserializing the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected internal virtual object GetSerializer (Type type, object value, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetSerializer(class System.Type type, object value, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.GetSerializer(System.Type,System.Object,System.Net.Http.HttpContent)" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * obj * System.Net.Http.HttpContent -&gt; obj&#xA;override this.GetSerializer : Type * obj * System.Net.Http.HttpContent -&gt; obj" Usage="xmlMediaTypeFormatter.GetSerializer (type, value, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="type">The type of object to serialize.</param>
        <param name="value">The object to serialize.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being written.</param>
        <summary>Called during serialization to get the XML serializer to use for serializing objects.</summary>
        <returns>An instance of <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> or <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use for serializing the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Net.Http.Formatting.XmlMediaTypeFormatter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to indent elements when writing data.</summary>
        <value>true to indent elements; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeCreateXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader InvokeCreateXmlReader (System.IO.Stream readStream, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader InvokeCreateXmlReader(class System.IO.Stream readStream, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.InvokeCreateXmlReader(System.IO.Stream,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeCreateXmlReader (readStream As Stream, content As HttpContent) As XmlReader" />
      <MemberSignature Language="F#" Value="member this.InvokeCreateXmlReader : System.IO.Stream * System.Net.Http.HttpContent -&gt; System.Xml.XmlReader" Usage="xmlMediaTypeFormatter.InvokeCreateXmlReader (readStream, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="readStream">To be added.</param>
        <param name="content">To be added.</param>
        <summary>This method is to support infrastructure and is not intended to be used directly from your code.</summary>
        <returns>Returns <see cref="T:System.Xml.XmlReader" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeCreateXmlWriter">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriter InvokeCreateXmlWriter (System.IO.Stream writeStream, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriter InvokeCreateXmlWriter(class System.IO.Stream writeStream, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.InvokeCreateXmlWriter(System.IO.Stream,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeCreateXmlWriter (writeStream As Stream, content As HttpContent) As XmlWriter" />
      <MemberSignature Language="F#" Value="member this.InvokeCreateXmlWriter : System.IO.Stream * System.Net.Http.HttpContent -&gt; System.Xml.XmlWriter" Usage="xmlMediaTypeFormatter.InvokeCreateXmlWriter (writeStream, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="writeStream">To be added.</param>
        <param name="content">To be added.</param>
        <summary>This method is to support infrastructure and is not intended to be used directly from your code.</summary>
        <returns>Returns <see cref="T:System.Xml.XmlWriter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetDeserializer">
      <MemberSignature Language="C#" Value="public object InvokeGetDeserializer (Type type, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeGetDeserializer(class System.Type type, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.InvokeGetDeserializer(System.Type,System.Net.Http.HttpContent)" />
      <MemberSignature Language="F#" Value="member this.InvokeGetDeserializer : Type * System.Net.Http.HttpContent -&gt; obj" Usage="xmlMediaTypeFormatter.InvokeGetDeserializer (type, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="content">To be added.</param>
        <summary>This method is to support infrastructure and is not intended to be used directly from your code.</summary>
        <returns>Returns <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetSerializer">
      <MemberSignature Language="C#" Value="public object InvokeGetSerializer (Type type, object value, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeGetSerializer(class System.Type type, object value, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.InvokeGetSerializer(System.Type,System.Object,System.Net.Http.HttpContent)" />
      <MemberSignature Language="F#" Value="member this.InvokeGetSerializer : Type * obj * System.Net.Http.HttpContent -&gt; obj" Usage="xmlMediaTypeFormatter.InvokeGetSerializer (type, value, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="value">To be added.</param>
        <param name="content">To be added.</param>
        <summary>This method is to support infrastructure and is not intended to be used directly from your code.</summary>
        <returns>Returns <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Net.Http.Formatting.XmlMediaTypeFormatter.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets and sets the maximum nested node depth.</summary>
        <value>The maximum nested node depth.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFromStreamAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ReadFromStreamAsync (Type type, System.IO.Stream readStream, System.Net.Http.HttpContent content, System.Net.Http.Formatting.IFormatterLogger formatterLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadFromStreamAsync(class System.Type type, class System.IO.Stream readStream, class System.Net.Http.HttpContent content, class System.Net.Http.Formatting.IFormatterLogger formatterLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)" />
      <MemberSignature Language="F#" Value="override this.ReadFromStreamAsync : Type * System.IO.Stream * System.Net.Http.HttpContent * System.Net.Http.Formatting.IFormatterLogger -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlMediaTypeFormatter.ReadFromStreamAsync (type, readStream, content, formatterLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="formatterLogger" Type="System.Net.Http.Formatting.IFormatterLogger" />
      </Parameters>
      <Docs>
        <param name="type">The type of object to read.</param>
        <param name="readStream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being read.</param>
        <param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> to log events to.</param>
        <summary> Called during deserialization to read an object of the specified type from the specified readStream. </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> whose result will be the object instance that has been read.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializer">
      <MemberSignature Language="C#" Value="public bool RemoveSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveSerializer(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.RemoveSerializer(System.Type)" />
      <MemberSignature Language="F#" Value="member this.RemoveSerializer : Type -&gt; bool" Usage="xmlMediaTypeFormatter.RemoveSerializer type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type of object whose serializer should be removed.</param>
        <summary>Unregisters the serializer currently associated with the given type.</summary>
        <returns>true if a serializer was previously registered for the type; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSerializer">
      <MemberSignature Language="C#" Value="public void SetSerializer (Type type, System.Runtime.Serialization.XmlObjectSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSerializer(class System.Type type, class System.Runtime.Serialization.XmlObjectSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.XmlObjectSerializer)" />
      <MemberSignature Language="F#" Value="member this.SetSerializer : Type * System.Runtime.Serialization.XmlObjectSerializer -&gt; unit" Usage="xmlMediaTypeFormatter.SetSerializer (type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Runtime.Serialization.XmlObjectSerializer" />
      </Parameters>
      <Docs>
        <param name="type">The type of object that will be serialized or deserialized with<paramref name="serializer" />.</param>
        <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> instance.</param>
        <summary>Registers an <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to read or write objects of a specified type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSerializer">
      <MemberSignature Language="C#" Value="public void SetSerializer (Type type, System.Xml.Serialization.XmlSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSerializer(class System.Type type, class System.Xml.Serialization.XmlSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Xml.Serialization.XmlSerializer)" />
      <MemberSignature Language="F#" Value="member this.SetSerializer : Type * System.Xml.Serialization.XmlSerializer -&gt; unit" Usage="xmlMediaTypeFormatter.SetSerializer (type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Xml.Serialization.XmlSerializer" />
      </Parameters>
      <Docs>
        <param name="type">The type of object that will be serialized or deserialized with<paramref name="serializer" />.</param>
        <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> instance.</param>
        <summary>Registers an <see cref="T:System.Xml.Serialization.XmlSerializer" /> to read or write objects of a specified type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSerializer&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetSerializer&lt;T&gt; (System.Runtime.Serialization.XmlObjectSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSerializer&lt;T&gt;(class System.Runtime.Serialization.XmlObjectSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.XmlObjectSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSerializer(Of T) (serializer As XmlObjectSerializer)" />
      <MemberSignature Language="F#" Value="member this.SetSerializer : System.Runtime.Serialization.XmlObjectSerializer -&gt; unit" Usage="xmlMediaTypeFormatter.SetSerializer serializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="serializer" Type="System.Runtime.Serialization.XmlObjectSerializer" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object that will be serialized or deserialized with<paramref name="serializer" />.</typeparam>
        <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> instance.</param>
        <summary>Registers an <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to read or write objects of a specified type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSerializer&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetSerializer&lt;T&gt; (System.Xml.Serialization.XmlSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSerializer&lt;T&gt;(class System.Xml.Serialization.XmlSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Xml.Serialization.XmlSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSerializer(Of T) (serializer As XmlSerializer)" />
      <MemberSignature Language="F#" Value="member this.SetSerializer : System.Xml.Serialization.XmlSerializer -&gt; unit" Usage="xmlMediaTypeFormatter.SetSerializer serializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="serializer" Type="System.Xml.Serialization.XmlSerializer" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of object that will be serialized or deserialized with<paramref name="serializer" />.</typeparam>
        <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> instance.</param>
        <summary>Registers an <see cref="T:System.Xml.Serialization.XmlSerializer" /> to read or write objects of a specified type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseXmlSerializer">
      <MemberSignature Language="C#" Value="public bool UseXmlSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseXmlSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.UseXmlSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property UseXmlSerializer As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseXmlSerializer : bool with get, set" Usage="System.Net.Http.Formatting.XmlMediaTypeFormatter.UseXmlSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the XML formatter uses the <see cref="T:System.Xml.Serialization.XmlSerializer" /> as the default serializer, instead of  using the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
        <value>If true, the formatter uses the <see cref="T:System.Xml.Serialization.XmlSerializer" /> by default; otherwise, it uses the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> by default.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriterSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings WriterSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings WriterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.WriterSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriterSettings As XmlWriterSettings" />
      <MemberSignature Language="F#" Value="member this.WriterSettings : System.Xml.XmlWriterSettings" Usage="System.Net.Http.Formatting.XmlMediaTypeFormatter.WriterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the settings to be used while writing.</summary>
        <value>The settings to be used while writing.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToStreamAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToStreamAsync (Type type, object value, System.IO.Stream writeStream, System.Net.Http.HttpContent content, System.Net.TransportContext transportContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToStreamAsync(class System.Type type, object value, class System.IO.Stream writeStream, class System.Net.Http.HttpContent content, class System.Net.TransportContext transportContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteToStreamAsync : Type * obj * System.IO.Stream * System.Net.Http.HttpContent * System.Net.TransportContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xmlMediaTypeFormatter.WriteToStreamAsync (type, value, writeStream, content, transportContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.Formatting</AssemblyName>
        <AssemblyVersion>5.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="writeStream" Type="System.IO.Stream" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type">The type of object to write.</param>
        <param name="value">The object to write.</param>
        <param name="writeStream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
        <param name="content">The <see cref="T:System.Net.Http.HttpContent" /> for the content being written.</param>
        <param name="transportContext">The <see cref="T:System.Net.TransportContext" />.</param>
        <param name="cancellationToken">The token to monitor cancellation.</param>
        <summary>Called during serialization to write an object of the specified type to the specified writeStream.</summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will write the value to the stream.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>