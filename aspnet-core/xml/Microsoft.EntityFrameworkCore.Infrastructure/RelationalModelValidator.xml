<Type Name="RelationalModelValidator" FullName="Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator">
  <TypeSignature Language="C#" Value="public class RelationalModelValidator : Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalModelValidator extends Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalModelValidator&#xA;Inherits ModelValidator" />
  <TypeSignature Language="F#" Value="type RelationalModelValidator = class&#xA;    inherit ModelValidator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    The validator that enforces rules common for all relational providers.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalModelValidator (Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies dependencies, Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies dependencies, class Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies,Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ModelValidatorDependencies, relationalDependencies As RelationalModelValidatorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator : Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies * Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies -&gt; Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" Usage="new Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        <param name="relationalDependencies"> Parameter object containing relational dependencies for this service. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalDependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies RelationalDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies RelationalDependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.RelationalDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RelationalDependencies As RelationalModelValidatorDependencies" />
      <MemberSignature Language="F#" Value="member this.RelationalDependencies : Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies" Usage="Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.RelationalDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="override this.Validate : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.Validate (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model"> The model to validate. </param>
        <param name="loggers"> Loggers to use. </param>
        <summary>
                Validates a model, throwing an exception if any errors are found.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateBoolsWithDefaults">
      <MemberSignature Language="C#" Value="protected virtual void ValidateBoolsWithDefaults (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateBoolsWithDefaults(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateBoolsWithDefaults(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateBoolsWithDefaults (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateBoolsWithDefaults : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateBoolsWithDefaults : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateBoolsWithDefaults (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDbFunctions">
      <MemberSignature Language="C#" Value="protected virtual void ValidateDbFunctions (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateDbFunctions(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateDbFunctions(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateDbFunctions (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDbFunctions : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateDbFunctions : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateDbFunctions (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDefaultValuesOnKeys">
      <MemberSignature Language="C#" Value="protected virtual void ValidateDefaultValuesOnKeys (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateDefaultValuesOnKeys(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateDefaultValuesOnKeys(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateDefaultValuesOnKeys (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDefaultValuesOnKeys : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateDefaultValuesOnKeys : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateDefaultValuesOnKeys (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInheritanceMapping">
      <MemberSignature Language="C#" Value="protected virtual void ValidateInheritanceMapping (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateInheritanceMapping(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateInheritanceMapping(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateInheritanceMapping (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateInheritanceMapping : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateInheritanceMapping : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateInheritanceMapping (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSharedColumnsCompatibility">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSharedColumnsCompatibility (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSharedColumnsCompatibility(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedColumnsCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSharedColumnsCompatibility (mappedTypes As IReadOnlyList(Of IEntityType), tableName As String, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSharedColumnsCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateSharedColumnsCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateSharedColumnsCompatibility (mappedTypes, tableName, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappedTypes" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="mappedTypes">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSharedForeignKeysCompatibility">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSharedForeignKeysCompatibility (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSharedForeignKeysCompatibility(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedForeignKeysCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSharedForeignKeysCompatibility (mappedTypes As IReadOnlyList(Of IEntityType), tableName As String, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSharedForeignKeysCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateSharedForeignKeysCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateSharedForeignKeysCompatibility (mappedTypes, tableName, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappedTypes" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="mappedTypes">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSharedIndexesCompatibility">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSharedIndexesCompatibility (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSharedIndexesCompatibility(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedIndexesCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSharedIndexesCompatibility (mappedTypes As IReadOnlyList(Of IEntityType), tableName As String, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSharedIndexesCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateSharedIndexesCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateSharedIndexesCompatibility (mappedTypes, tableName, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappedTypes" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="mappedTypes">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSharedKeysCompatibility">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSharedKeysCompatibility (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSharedKeysCompatibility(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedKeysCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSharedKeysCompatibility (mappedTypes As IReadOnlyList(Of IEntityType), tableName As String, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSharedKeysCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateSharedKeysCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateSharedKeysCompatibility (mappedTypes, tableName, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappedTypes" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="mappedTypes">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSharedTableCompatibility">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSharedTableCompatibility (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSharedTableCompatibility(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedTableCompatibility(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSharedTableCompatibility (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSharedTableCompatibility : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateSharedTableCompatibility : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateSharedTableCompatibility (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSharedTableCompatibility">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSharedTableCompatibility (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSharedTableCompatibility(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; mappedTypes, string tableName, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.ValidateSharedTableCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSharedTableCompatibility (mappedTypes As IReadOnlyList(Of IEntityType), tableName As String, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSharedTableCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit&#xA;override this.ValidateSharedTableCompatibility : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * string * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="relationalModelValidator.ValidateSharedTableCompatibility (mappedTypes, tableName, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappedTypes" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="mappedTypes">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>