<Type Name="IModelValidator" FullName="Microsoft.EntityFrameworkCore.Infrastructure.IModelValidator">
  <TypeSignature Language="C#" Value="public interface IModelValidator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModelValidator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelValidator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModelValidator" />
  <TypeSignature Language="F#" Value="type IModelValidator = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Validates a model after it is built.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (model As IModel, loggers As DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="abstract member Validate : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; unit" Usage="iModelValidator.Validate (model, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="model"> The model to validate. </param>
        <param name="loggers"> Loggers to use. </param>
        <summary>
                Validates a model, throwing an exception if any errors are found.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>