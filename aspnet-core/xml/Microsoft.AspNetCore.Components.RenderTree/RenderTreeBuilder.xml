<Type Name="RenderTreeBuilder" FullName="Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder">
  <TypeSignature Language="C#" Value="public class RenderTreeBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RenderTreeBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderTreeBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderTreeBuilder" />
  <TypeSignature Language="F#" Value="type RenderTreeBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides methods for building a collection of <see cref="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame" /> entries.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RenderTreeBuilder (Microsoft.AspNetCore.Components.Rendering.Renderer renderer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Components.Rendering.Renderer renderer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.#ctor(Microsoft.AspNetCore.Components.Rendering.Renderer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RenderTreeBuilder(Microsoft::AspNetCore::Components::Rendering::Renderer ^ renderer);" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder : Microsoft.AspNetCore.Components.Rendering.Renderer -&gt; Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder" Usage="new Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder renderer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="renderer" Type="Microsoft.AspNetCore.Components.Rendering.Renderer" />
      </Parameters>
      <Docs>
        <param name="renderer">The associated <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" />.</param>
        <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, ref Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, [in]valuetype Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame&amp; frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, ByRef frame As RenderTreeFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, Microsoft::AspNetCore::Components::RenderTree::RenderTreeFrame % frame);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int *  -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, frame)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="frame" Type="Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="frame">A <see cref="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame" /> holding the name and value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing an attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, Microsoft.AspNetCore.Components.EventCallback value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, valuetype Microsoft.AspNetCore.Components.EventCallback value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,Microsoft.AspNetCore.Components.EventCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As EventCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, Microsoft::AspNetCore::Components::EventCallback value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * Microsoft.AspNetCore.Components.EventCallback -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Components.EventCallback" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing an <see cref="T:Microsoft.AspNetCore.Components.EventCallback" /> attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>
            This method is provided for infrastructure purposes, and is used to support generated code
            that uses <see cref="T:Microsoft.AspNetCore.Components.EventCallbackFactory" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, Action value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, class System.Action value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, Action ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * Action -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing an <see cref="T:System.Action" />-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.Action{Microsoft.AspNetCore.Components.UIEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As Action(Of UIEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing an <see cref="T:System.Action`1" />-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, bool value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * bool -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing a bool-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>false</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, Func&lt;Microsoft.AspNetCore.Components.UIEventArgs,System.Threading.Tasks.Task&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, class System.Func`2&lt;class Microsoft.AspNetCore.Components.UIEventArgs, class System.Threading.Tasks.Task&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.Func{Microsoft.AspNetCore.Components.UIEventArgs,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As Func(Of UIEventArgs, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, Func&lt;Microsoft::AspNetCore::Components::UIEventArgs ^, System::Threading::Tasks::Task ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * Func&lt;Microsoft.AspNetCore.Components.UIEventArgs, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Func&lt;Microsoft.AspNetCore.Components.UIEventArgs,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing a <see cref="T:System.Func`2" />-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, Func&lt;System.Threading.Tasks.Task&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, class System.Func`1&lt;class System.Threading.Tasks.Task&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, Func&lt;System::Threading::Tasks::Task ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * Func&lt;System.Threading.Tasks.Task&gt; -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing a <see cref="T:System.Func`1" />-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, MulticastDelegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, class System.MulticastDelegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.MulticastDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As MulticastDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, MulticastDelegate ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * MulticastDelegate -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.MulticastDelegate" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing a delegate-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>
            This method is provided for infrastructure purposes, and is used to be
            <see cref="T:Microsoft.AspNetCore.Components.UIEventArgsRenderTreeBuilderExtensions" /> to provide support for delegates of specific
            types. For a good programming experience when using a custom delegate type, define an
            extension method similar to
            <see cref="M:Microsoft.AspNetCore.Components.UIEventArgsRenderTreeBuilderExtensions.AddAttribute(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder,System.Int32,System.String,System.Action{Microsoft.AspNetCore.Components.UIChangeEventArgs})" />
            that calls this method.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * obj -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
            Appends a frame representing a string-valued attribute.
            The attribute is associated with the most recently added element. If the value is <c>null</c>, or
            the <see cref="T:System.Boolean" /> value <c>false</c> and the current element is not a component, the
            frame will be omitted.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (int sequence, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(int32 sequence, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (sequence As Integer, name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(int sequence, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * string -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing a string-valued attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddAttribute&lt;T&gt; (int sequence, string name, Microsoft.AspNetCore.Components.EventCallback&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute&lt;T&gt;(int32 sequence, string name, valuetype Microsoft.AspNetCore.Components.EventCallback`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddAttribute``1(System.Int32,System.String,Microsoft.AspNetCore.Components.EventCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute(Of T) (sequence As Integer, name As String, value As EventCallback(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AddAttribute(int sequence, System::String ^ name, Microsoft::AspNetCore::Components::EventCallback&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : int * string * Microsoft.AspNetCore.Components.EventCallback&lt;'T&gt; -&gt; unit" Usage="renderTreeBuilder.AddAttribute (sequence, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Components.EventCallback&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>
          <para>
            Appends a frame representing an <see cref="T:Microsoft.AspNetCore.Components.EventCallback" /> attribute.
            </para>
          <para>
            The attribute is associated with the most recently added element. If the value is <c>null</c> and the
            current element is not a component, the frame will be omitted.
            </para>
        </summary>
        <remarks>
            This method is provided for infrastructure purposes, and is used to support generated code
            that uses <see cref="T:Microsoft.AspNetCore.Components.EventCallbackFactory" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComponentReferenceCapture">
      <MemberSignature Language="C#" Value="public void AddComponentReferenceCapture (int sequence, Action&lt;object&gt; componentReferenceCaptureAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponentReferenceCapture(int32 sequence, class System.Action`1&lt;object&gt; componentReferenceCaptureAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddComponentReferenceCapture(System.Int32,System.Action{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddComponentReferenceCapture (sequence As Integer, componentReferenceCaptureAction As Action(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddComponentReferenceCapture(int sequence, Action&lt;System::Object ^&gt; ^ componentReferenceCaptureAction);" />
      <MemberSignature Language="F#" Value="member this.AddComponentReferenceCapture : int * Action&lt;obj&gt; -&gt; unit" Usage="renderTreeBuilder.AddComponentReferenceCapture (sequence, componentReferenceCaptureAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="componentReferenceCaptureAction" Type="System.Action&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="componentReferenceCaptureAction">An action to be invoked whenever the reference value changes.</param>
        <summary>
            Appends a frame representing an instruction to capture a reference to the parent component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContent">
      <MemberSignature Language="C#" Value="public void AddContent (int sequence, Microsoft.AspNetCore.Components.MarkupString markupContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContent(int32 sequence, valuetype Microsoft.AspNetCore.Components.MarkupString markupContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddContent(System.Int32,Microsoft.AspNetCore.Components.MarkupString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContent (sequence As Integer, markupContent As MarkupString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContent(int sequence, Microsoft::AspNetCore::Components::MarkupString markupContent);" />
      <MemberSignature Language="F#" Value="member this.AddContent : int * Microsoft.AspNetCore.Components.MarkupString -&gt; unit" Usage="renderTreeBuilder.AddContent (sequence, markupContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="markupContent" Type="Microsoft.AspNetCore.Components.MarkupString" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="markupContent">Content for the new markup frame.</param>
        <summary>
            Appends a frame representing markup content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContent">
      <MemberSignature Language="C#" Value="public void AddContent (int sequence, Microsoft.AspNetCore.Components.RenderFragment fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContent(int32 sequence, class Microsoft.AspNetCore.Components.RenderFragment fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddContent(System.Int32,Microsoft.AspNetCore.Components.RenderFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContent (sequence As Integer, fragment As RenderFragment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContent(int sequence, Microsoft::AspNetCore::Components::RenderFragment ^ fragment);" />
      <MemberSignature Language="F#" Value="member this.AddContent : int * Microsoft.AspNetCore.Components.RenderFragment -&gt; unit" Usage="renderTreeBuilder.AddContent (sequence, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="fragment" Type="Microsoft.AspNetCore.Components.RenderFragment" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="fragment">Content to append.</param>
        <summary>
            Appends frames representing an arbitrary fragment of content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContent">
      <MemberSignature Language="C#" Value="public void AddContent (int sequence, object textContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContent(int32 sequence, object textContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddContent(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContent (sequence As Integer, textContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContent(int sequence, System::Object ^ textContent);" />
      <MemberSignature Language="F#" Value="member this.AddContent : int * obj -&gt; unit" Usage="renderTreeBuilder.AddContent (sequence, textContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="textContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="textContent">Content for the new text frame.</param>
        <summary>
            Appends a frame representing text content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContent">
      <MemberSignature Language="C#" Value="public void AddContent (int sequence, string textContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContent(int32 sequence, string textContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddContent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContent (sequence As Integer, textContent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContent(int sequence, System::String ^ textContent);" />
      <MemberSignature Language="F#" Value="member this.AddContent : int * string -&gt; unit" Usage="renderTreeBuilder.AddContent (sequence, textContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="textContent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="textContent">Content for the new text frame.</param>
        <summary>
            Appends a frame representing text content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContent&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddContent&lt;T&gt; (int sequence, Microsoft.AspNetCore.Components.RenderFragment&lt;T&gt; fragment, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContent&lt;T&gt;(int32 sequence, class Microsoft.AspNetCore.Components.RenderFragment`1&lt;!!T&gt; fragment, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddContent``1(System.Int32,Microsoft.AspNetCore.Components.RenderFragment{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContent(Of T) (sequence As Integer, fragment As RenderFragment(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AddContent(int sequence, Microsoft::AspNetCore::Components::RenderFragment&lt;T&gt; ^ fragment, T value);" />
      <MemberSignature Language="F#" Value="member this.AddContent : int * Microsoft.AspNetCore.Components.RenderFragment&lt;'T&gt; * 'T -&gt; unit" Usage="renderTreeBuilder.AddContent (sequence, fragment, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="fragment" Type="Microsoft.AspNetCore.Components.RenderFragment&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="fragment">Content to append.</param>
        <param name="value">The value used by <paramref name="fragment" />.</param>
        <summary>
            Appends frames representing an arbitrary fragment of content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddElementReferenceCapture">
      <MemberSignature Language="C#" Value="public void AddElementReferenceCapture (int sequence, Action&lt;Microsoft.AspNetCore.Components.ElementRef&gt; elementReferenceCaptureAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddElementReferenceCapture(int32 sequence, class System.Action`1&lt;valuetype Microsoft.AspNetCore.Components.ElementRef&gt; elementReferenceCaptureAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddElementReferenceCapture(System.Int32,System.Action{Microsoft.AspNetCore.Components.ElementRef})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElementReferenceCapture (sequence As Integer, elementReferenceCaptureAction As Action(Of ElementRef))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElementReferenceCapture(int sequence, Action&lt;Microsoft::AspNetCore::Components::ElementRef&gt; ^ elementReferenceCaptureAction);" />
      <MemberSignature Language="F#" Value="member this.AddElementReferenceCapture : int * Action&lt;Microsoft.AspNetCore.Components.ElementRef&gt; -&gt; unit" Usage="renderTreeBuilder.AddElementReferenceCapture (sequence, elementReferenceCaptureAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="elementReferenceCaptureAction" Type="System.Action&lt;Microsoft.AspNetCore.Components.ElementRef&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="elementReferenceCaptureAction">An action to be invoked whenever the reference value changes.</param>
        <summary>
            Appends a frame representing an instruction to capture a reference to the parent element.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMarkupContent">
      <MemberSignature Language="C#" Value="public void AddMarkupContent (int sequence, string markupContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMarkupContent(int32 sequence, string markupContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddMarkupContent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMarkupContent (sequence As Integer, markupContent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMarkupContent(int sequence, System::String ^ markupContent);" />
      <MemberSignature Language="F#" Value="member this.AddMarkupContent : int * string -&gt; unit" Usage="renderTreeBuilder.AddMarkupContent (sequence, markupContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="markupContent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="markupContent">Content for the new markup frame.</param>
        <summary>
            Appends a frame representing markup content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMultipleAttributes">
      <MemberSignature Language="C#" Value="public void AddMultipleAttributes (int sequence, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMultipleAttributes(int32 sequence, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.AddMultipleAttributes(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMultipleAttributes (sequence As Integer, attributes As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMultipleAttributes(int sequence, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddMultipleAttributes : int * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; unit" Usage="renderTreeBuilder.AddMultipleAttributes (sequence, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="attributes">A collection of key-value pairs representing attributes.</param>
        <summary>
            Adds frames representing multiple attributes with the same sequence number.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildContent">
      <MemberSignature Language="C#" Value="public const string ChildContent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ChildContent" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.ChildContent" />
      <MemberSignature Language="VB.NET" Value="Public Const ChildContent As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ChildContent;" />
      <MemberSignature Language="F#" Value="val mutable ChildContent : string" Usage="Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.ChildContent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The reserved parameter name used for supplying child content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="renderTreeBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears the builder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseComponent">
      <MemberSignature Language="C#" Value="public void CloseComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.CloseComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseComponent();" />
      <MemberSignature Language="F#" Value="member this.CloseComponent : unit -&gt; unit" Usage="renderTreeBuilder.CloseComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Marks a previously appended component frame as closed. Calls to this method
            must be balanced with calls to <see cref="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.OpenComponent``1(System.Int32)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseElement">
      <MemberSignature Language="C#" Value="public void CloseElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.CloseElement" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseElement();" />
      <MemberSignature Language="F#" Value="member this.CloseElement : unit -&gt; unit" Usage="renderTreeBuilder.CloseElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Marks a previously appended element frame as closed. Calls to this method
            must be balanced with calls to <see cref="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.OpenElement(System.Int32,System.String)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderTree.ArrayRange&lt;Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame&gt; GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.AspNetCore.Components.RenderTree.ArrayRange`1&lt;valuetype Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame&gt; GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.GetFrames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFrames () As ArrayRange(Of RenderTreeFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Components::RenderTree::ArrayRange&lt;Microsoft::AspNetCore::Components::RenderTree::RenderTreeFrame&gt; GetFrames();" />
      <MemberSignature Language="F#" Value="member this.GetFrames : unit -&gt; Microsoft.AspNetCore.Components.RenderTree.ArrayRange&lt;Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame&gt;" Usage="renderTreeBuilder.GetFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderTree.ArrayRange&lt;Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the <see cref="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame" /> values that have been appended.
            </summary>
        <returns>An array range of <see cref="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeFrame" /> values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenComponent">
      <MemberSignature Language="C#" Value="public void OpenComponent (int sequence, Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenComponent(int32 sequence, class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.OpenComponent(System.Int32,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenComponent (sequence As Integer, componentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenComponent(int sequence, Type ^ componentType);" />
      <MemberSignature Language="F#" Value="member this.OpenComponent : int * Type -&gt; unit" Usage="renderTreeBuilder.OpenComponent (sequence, componentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="componentType">The type of the child component.</param>
        <summary>
            Appends a frame representing a child component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenComponent&lt;TComponent&gt;">
      <MemberSignature Language="C#" Value="public void OpenComponent&lt;TComponent&gt; (int sequence) where TComponent : Microsoft.AspNetCore.Components.IComponent;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenComponent&lt;(class Microsoft.AspNetCore.Components.IComponent) TComponent&gt;(int32 sequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.OpenComponent``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenComponent(Of TComponent As IComponent) (sequence As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TComponent&gt;&#xA; where TComponent : Microsoft::AspNetCore::Components::IComponent void OpenComponent(int sequence);" />
      <MemberSignature Language="F#" Value="member this.OpenComponent : int -&gt; unit (requires 'Component :&gt; Microsoft.AspNetCore.Components.IComponent)" Usage="renderTreeBuilder.OpenComponent sequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TComponent">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TComponent">The type of the child component.</typeparam>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <summary>
            Appends a frame representing a child component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenElement">
      <MemberSignature Language="C#" Value="public void OpenElement (int sequence, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenElement(int32 sequence, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.OpenElement(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenElement (sequence As Integer, elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenElement(int sequence, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="member this.OpenElement : int * string -&gt; unit" Usage="renderTreeBuilder.OpenElement (sequence, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
        <param name="elementName">A value representing the type of the element.</param>
        <summary>
            Appends a frame representing an element, i.e., a container for other frames.
            In order for the <see cref="T:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder" /> state to be valid, you must
            also call <see cref="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.CloseElement" /> immediately after appending the
            new element's child frames.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public void SetKey (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetKey(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.SetKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetKey (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetKey(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetKey : obj -&gt; unit" Usage="renderTreeBuilder.SetKey value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The value for the key.</param>
        <summary>
            Assigns the specified key value to the current element or component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUpdatesAttributeName">
      <MemberSignature Language="C#" Value="public void SetUpdatesAttributeName (string updatesAttributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUpdatesAttributeName(string updatesAttributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.SetUpdatesAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUpdatesAttributeName (updatesAttributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUpdatesAttributeName(System::String ^ updatesAttributeName);" />
      <MemberSignature Language="F#" Value="member this.SetUpdatesAttributeName : string -&gt; unit" Usage="renderTreeBuilder.SetUpdatesAttributeName updatesAttributeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatesAttributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="updatesAttributeName">The name of another attribute whose value can be updated when the event handler is executed.</param>
        <summary>
          <para>
            Indicates that the preceding attribute represents an event handler
            whose execution updates the attribute with name <paramref name="updatesAttributeName" />.
            </para>
          <para>
            This information is used by the rendering system to determine whether
            to accept a value update for the other attribute when receiving a
            call to the event handler.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
