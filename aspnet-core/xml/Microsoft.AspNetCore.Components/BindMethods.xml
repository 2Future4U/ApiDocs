<Type Name="BindMethods" FullName="Microsoft.AspNetCore.Components.BindMethods">
  <TypeSignature Language="C#" Value="public static class BindMethods" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindMethods extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.BindMethods" />
  <TypeSignature Language="VB.NET" Value="Public Class BindMethods" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindMethods abstract sealed" />
  <TypeSignature Language="F#" Value="type BindMethods = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Methods used internally by @bind syntax. Not intended to be used directly.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Components.EventCallback GetEventHandlerValue&lt;T&gt; (Microsoft.AspNetCore.Components.EventCallback value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Components.EventCallback GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(valuetype Microsoft.AspNetCore.Components.EventCallback value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(Microsoft.AspNetCore.Components.EventCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As EventCallback) As EventCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static Microsoft::AspNetCore::Components::EventCallback GetEventHandlerValue(Microsoft::AspNetCore::Components::EventCallback value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : Microsoft.AspNetCore.Components.EventCallback -&gt; Microsoft.AspNetCore.Components.EventCallback (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.EventCallback</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.AspNetCore.Components.EventCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Components.EventCallback&lt;T&gt; GetEventHandlerValue&lt;T&gt; (Microsoft.AspNetCore.Components.EventCallback&lt;T&gt; value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Components.EventCallback`1&lt;!!T&gt; GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(valuetype Microsoft.AspNetCore.Components.EventCallback`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(Microsoft.AspNetCore.Components.EventCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As EventCallback(Of T)) As EventCallback(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static Microsoft::AspNetCore::Components::EventCallback&lt;T&gt; GetEventHandlerValue(Microsoft::AspNetCore::Components::EventCallback&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : Microsoft.AspNetCore.Components.EventCallback&lt;'T (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)&gt; -&gt; Microsoft.AspNetCore.Components.EventCallback&lt;'T (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)&gt; (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.EventCallback&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.AspNetCore.Components.EventCallback&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static MulticastDelegate GetEventHandlerValue&lt;T&gt; (Action value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.MulticastDelegate GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(class System.Action value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As Action) As MulticastDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static MulticastDelegate ^ GetEventHandlerValue(Action ^ value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : Action -&gt; MulticastDelegate (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MulticastDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Action" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static MulticastDelegate GetEventHandlerValue&lt;T&gt; (Action&lt;T&gt; value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.MulticastDelegate GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(class System.Action`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As Action(Of T)) As MulticastDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static MulticastDelegate ^ GetEventHandlerValue(Action&lt;T&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : Action&lt;'T (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)&gt; -&gt; MulticastDelegate (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MulticastDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static MulticastDelegate GetEventHandlerValue&lt;T&gt; (Func&lt;System.Threading.Tasks.Task&gt; value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.MulticastDelegate GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As Func(Of Task)) As MulticastDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static MulticastDelegate ^ GetEventHandlerValue(Func&lt;System::Threading::Tasks::Task ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : Func&lt;System.Threading.Tasks.Task&gt; -&gt; MulticastDelegate (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MulticastDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static MulticastDelegate GetEventHandlerValue&lt;T&gt; (Func&lt;T,System.Threading.Tasks.Task&gt; value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.MulticastDelegate GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(class System.Func`2&lt;!!T, class System.Threading.Tasks.Task&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(System.Func{``0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As Func(Of T, Task)) As MulticastDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static MulticastDelegate ^ GetEventHandlerValue(Func&lt;T, System::Threading::Tasks::Task ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : Func&lt;'T, System.Threading.Tasks.Task (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)&gt; -&gt; MulticastDelegate (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MulticastDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Func&lt;T,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string GetEventHandlerValue&lt;T&gt; (string value) where T : Microsoft.AspNetCore.Components.UIEventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEventHandlerValue&lt;(class Microsoft.AspNetCore.Components.UIEventArgs) T&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventHandlerValue(Of T As UIEventArgs) (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::AspNetCore::Components::UIEventArgs static System::String ^ GetEventHandlerValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member GetEventHandlerValue : string -&gt; string (requires 'T :&gt; Microsoft.AspNetCore.Components.UIEventArgs)" Usage="Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Components.UIEventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static string GetValue (DateTime value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetValue(valuetype System.DateTime value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetValue(System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (value As DateTime, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetValue(DateTime value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetValue : DateTime * string -&gt; string" Usage="Microsoft.AspNetCore.Components.BindMethods.GetValue (value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="format">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetValue&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetValue&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.GetValue``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue(Of T) (value As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetValue(T value);" />
      <MemberSignature Language="F#" Value="static member GetValue : 'T -&gt; 'T" Usage="Microsoft.AspNetCore.Components.BindMethods.GetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;bool&gt; setter, bool existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;bool&gt; setter, bool existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Boolean), existingValue As Boolean) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;bool&gt; ^ setter, bool existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;bool&gt; * bool -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Boolean&gt;" />
        <Parameter Name="existingValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;DateTime&gt; setter, DateTime existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.DateTime&gt; setter, valuetype System.DateTime existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.DateTime},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of DateTime), existingValue As DateTime) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;DateTime&gt; ^ setter, DateTime existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;DateTime&gt; * DateTime -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.DateTime&gt;" />
        <Parameter Name="existingValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;decimal&gt; setter, decimal existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Decimal&gt; setter, valuetype System.Decimal existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Decimal},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Decimal), existingValue As Decimal) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;System::Decimal&gt; ^ setter, System::Decimal existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;decimal&gt; * decimal -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Decimal&gt;" />
        <Parameter Name="existingValue" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;double&gt; setter, double existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;float64&gt; setter, float64 existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Double},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Double), existingValue As Double) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;double&gt; ^ setter, double existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;double&gt; * double -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Double&gt;" />
        <Parameter Name="existingValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;int&gt; setter, int existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;int32&gt; setter, int32 existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Int32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Integer), existingValue As Integer) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;int&gt; ^ setter, int existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;int&gt; * int -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Int32&gt;" />
        <Parameter Name="existingValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;long&gt; setter, long existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;int64&gt; setter, int64 existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Int64},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Long), existingValue As Long) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;long&gt; ^ setter, long existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;int64&gt; * int64 -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Int64&gt;" />
        <Parameter Name="existingValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;Nullable&lt;bool&gt;&gt; setter, Nullable&lt;bool&gt; existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Nullable`1&lt;bool&gt;&gt; setter, valuetype System.Nullable`1&lt;bool&gt; existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Nullable{System.Boolean}},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Nullable(Of Boolean)), existingValue As Nullable(Of Boolean)) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;Nullable&lt;bool&gt;&gt; ^ setter, Nullable&lt;bool&gt; existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;Nullable&lt;bool&gt;&gt; * Nullable&lt;bool&gt; -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Nullable&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="existingValue" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;Nullable&lt;decimal&gt;&gt; setter, Nullable&lt;decimal&gt; existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; setter, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Nullable{System.Decimal}},System.Nullable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Nullable(Of Decimal)), existingValue As Nullable(Of Decimal)) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;Nullable&lt;System::Decimal&gt;&gt; ^ setter, Nullable&lt;System::Decimal&gt; existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;Nullable&lt;decimal&gt;&gt; * Nullable&lt;decimal&gt; -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Nullable&lt;System.Decimal&gt;&gt;" />
        <Parameter Name="existingValue" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;Nullable&lt;double&gt;&gt; setter, Nullable&lt;double&gt; existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; setter, valuetype System.Nullable`1&lt;float64&gt; existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Nullable{System.Double}},System.Nullable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Nullable(Of Double)), existingValue As Nullable(Of Double)) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;Nullable&lt;double&gt;&gt; ^ setter, Nullable&lt;double&gt; existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;Nullable&lt;double&gt;&gt; * Nullable&lt;double&gt; -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Nullable&lt;System.Double&gt;&gt;" />
        <Parameter Name="existingValue" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;Nullable&lt;int&gt;&gt; setter, Nullable&lt;int&gt; existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; setter, valuetype System.Nullable`1&lt;int32&gt; existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Nullable{System.Int32}},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Nullable(Of Integer)), existingValue As Nullable(Of Integer)) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;Nullable&lt;int&gt;&gt; ^ setter, Nullable&lt;int&gt; existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;Nullable&lt;int&gt;&gt; * Nullable&lt;int&gt; -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Nullable&lt;System.Int32&gt;&gt;" />
        <Parameter Name="existingValue" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;Nullable&lt;long&gt;&gt; setter, Nullable&lt;long&gt; existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; setter, valuetype System.Nullable`1&lt;int64&gt; existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Nullable{System.Int64}},System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Nullable(Of Long)), existingValue As Nullable(Of Long)) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;Nullable&lt;long&gt;&gt; ^ setter, Nullable&lt;long&gt; existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;Nullable&lt;int64&gt;&gt; * Nullable&lt;int64&gt; -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Nullable&lt;System.Int64&gt;&gt;" />
        <Parameter Name="existingValue" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;Nullable&lt;float&gt;&gt; setter, Nullable&lt;float&gt; existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; setter, valuetype System.Nullable`1&lt;float32&gt; existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Nullable{System.Single}},System.Nullable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Nullable(Of Single)), existingValue As Nullable(Of Single)) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;Nullable&lt;float&gt;&gt; ^ setter, Nullable&lt;float&gt; existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;Nullable&lt;single&gt;&gt; * Nullable&lt;single&gt; -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Nullable&lt;System.Single&gt;&gt;" />
        <Parameter Name="existingValue" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;float&gt; setter, float existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;float32&gt; setter, float32 existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.Single},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of Single), existingValue As Single) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;float&gt; ^ setter, float existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;single&gt; * single -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.Single&gt;" />
        <Parameter Name="existingValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;string&gt; setter, string existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;string&gt; setter, string existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of String), existingValue As String) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;System::String ^&gt; ^ setter, System::String ^ existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;string&gt; * string -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.String&gt;" />
        <Parameter Name="existingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler (Action&lt;DateTime&gt; setter, DateTime existingValue, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler(class System.Action`1&lt;valuetype System.DateTime&gt; setter, valuetype System.DateTime existingValue, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(System.Action{System.DateTime},System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler (setter As Action(Of DateTime), existingValue As DateTime, format As String) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;DateTime&gt; ^ setter, DateTime existingValue, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;DateTime&gt; * DateTime * string -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;System.DateTime&gt;" />
        <Parameter Name="existingValue" Type="System.DateTime" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <param name="format">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueHandler&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler&lt;T&gt; (Action&lt;T&gt; setter, T existingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Action`1&lt;class Microsoft.AspNetCore.Components.UIEventArgs&gt; SetValueHandler&lt;T&gt;(class System.Action`1&lt;!!T&gt; setter, !!T existingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.BindMethods.SetValueHandler``1(System.Action{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetValueHandler(Of T) (setter As Action(Of T), existingValue As T) As Action(Of UIEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Action&lt;Microsoft::AspNetCore::Components::UIEventArgs ^&gt; ^ SetValueHandler(Action&lt;T&gt; ^ setter, T existingValue);" />
      <MemberSignature Language="F#" Value="static member SetValueHandler : Action&lt;'T&gt; * 'T -&gt; Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;" Usage="Microsoft.AspNetCore.Components.BindMethods.SetValueHandler (setter, existingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Components.UIEventArgs&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;T&gt;" />
        <Parameter Name="existingValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="setter">To be added.</param>
        <param name="existingValue">To be added.</param>
        <summary>
            Not intended to be used directly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
