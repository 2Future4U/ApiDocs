<Type Name="UriHelperBase" FullName="Microsoft.AspNetCore.Components.UriHelperBase">
  <TypeSignature Language="C#" Value="public abstract class UriHelperBase : Microsoft.AspNetCore.Components.IUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UriHelperBase extends System.Object implements class Microsoft.AspNetCore.Components.IUriHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.UriHelperBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UriHelperBase&#xA;Implements IUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriHelperBase abstract : Microsoft::AspNetCore::Components::IUriHelper" />
  <TypeSignature Language="F#" Value="type UriHelperBase = class&#xA;    interface IUriHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IUriHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A base class for <see cref="T:Microsoft.AspNetCore.Components.IUriHelper" /> implementations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UriHelperBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UriHelperBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureInitialized">
      <MemberSignature Language="C#" Value="protected virtual void EnsureInitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.EnsureInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureInitialized ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureInitialized();" />
      <MemberSignature Language="F#" Value="abstract member EnsureInitialized : unit -&gt; unit&#xA;override this.EnsureInitialized : unit -&gt; unit" Usage="uriHelperBase.EnsureInitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Allows derived classes to lazyly self initialize. It does nothing unless overriden.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbsoluteUri">
      <MemberSignature Language="C#" Value="public string GetAbsoluteUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAbsoluteUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.GetAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbsoluteUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAbsoluteUri();" />
      <MemberSignature Language="F#" Value="abstract member GetAbsoluteUri : unit -&gt; string&#xA;override this.GetAbsoluteUri : unit -&gt; string" Usage="uriHelperBase.GetAbsoluteUri " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IUriHelper.GetAbsoluteUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the current absolute URI.
            </summary>
        <returns>The current absolute URI.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseUri">
      <MemberSignature Language="C#" Value="public virtual string GetBaseUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetBaseUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.GetBaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetBaseUri();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseUri : unit -&gt; string&#xA;override this.GetBaseUri : unit -&gt; string" Usage="uriHelperBase.GetBaseUri " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IUriHelper.GetBaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the base URI (with trailing slash) that can be prepended before relative URI paths to
            produce an absolute URI. Typically this corresponds to the 'href' attribute on the
            document's &lt;base&gt; element.
            </summary>
        <returns>The URI prefix, which has a trailing slash.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeState">
      <MemberSignature Language="C#" Value="public virtual void InitializeState (string uriAbsolute, string baseUriAbsolute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeState(string uriAbsolute, string baseUriAbsolute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.InitializeState(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeState (uriAbsolute As String, baseUriAbsolute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeState(System::String ^ uriAbsolute, System::String ^ baseUriAbsolute);" />
      <MemberSignature Language="F#" Value="abstract member InitializeState : string * string -&gt; unit&#xA;override this.InitializeState : string * string -&gt; unit" Usage="uriHelperBase.InitializeState (uriAbsolute, baseUriAbsolute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriAbsolute" Type="System.String" />
        <Parameter Name="baseUriAbsolute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriAbsolute">To be added.</param>
        <param name="baseUriAbsolute">To be added.</param>
        <summary>
            Called to initialize BaseURI and current URI before these values are used for the first time.
            Override this method to dynamically calculate these values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigateTo(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.NavigateTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NavigateTo(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member NavigateTo : string -&gt; unit&#xA;override this.NavigateTo : string -&gt; unit" Usage="uriHelperBase.NavigateTo uri" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IUriHelper.NavigateTo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.GetBaseUri" />).</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri, bool forceLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigateTo(string uri, bool forceLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.NavigateTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String, forceLoad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NavigateTo(System::String ^ uri, bool forceLoad);" />
      <MemberSignature Language="F#" Value="abstract member NavigateTo : string * bool -&gt; unit&#xA;override this.NavigateTo : string * bool -&gt; unit" Usage="uriHelperBase.NavigateTo (uri, forceLoad)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IUriHelper.NavigateTo(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="forceLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.GetBaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToCore">
      <MemberSignature Language="C#" Value="protected abstract void NavigateToCore (string uri, bool forceLoad);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NavigateToCore(string uri, bool forceLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.NavigateToCore(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub NavigateToCore (uri As String, forceLoad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void NavigateToCore(System::String ^ uri, bool forceLoad);" />
      <MemberSignature Language="F#" Value="abstract member NavigateToCore : string * bool -&gt; unit" Usage="uriHelperBase.NavigateToCore (uri, forceLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="forceLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.GetBaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; OnLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;valuetype Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; OnLocationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.Components.UriHelperBase.OnLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnLocationChanged As EventHandler(Of LocationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;Microsoft::AspNetCore::Components::Routing::LocationChangedEventArgs&gt; ^ OnLocationChanged;" />
      <MemberSignature Language="F#" Value="member this.OnLocationChanged : EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; " Usage="member this.OnLocationChanged : System.EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.AspNetCore.Components.IUriHelper.OnLocationChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that fires when the navigation location has changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAbsoluteBaseUri">
      <MemberSignature Language="C#" Value="protected void SetAbsoluteBaseUri (string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAbsoluteBaseUri(string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.SetAbsoluteBaseUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAbsoluteBaseUri (baseUri As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAbsoluteBaseUri(System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="member this.SetAbsoluteBaseUri : string -&gt; unit" Usage="uriHelperBase.SetAbsoluteBaseUri baseUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">The base URI. Must be an absolute URI.</param>
        <summary>
            Sets the base URI to the provided value (after normalization).
            </summary>
        <remarks>
            Calling <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.SetAbsoluteBaseUri(System.String)" /> does not trigger <see cref="E:Microsoft.AspNetCore.Components.UriHelperBase.OnLocationChanged" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAbsoluteUri">
      <MemberSignature Language="C#" Value="protected void SetAbsoluteUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAbsoluteUri(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.SetAbsoluteUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAbsoluteUri (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAbsoluteUri(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="member this.SetAbsoluteUri : string -&gt; unit" Usage="uriHelperBase.SetAbsoluteUri uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI. Must be an absolute URI.</param>
        <summary>
            Set the URI to the provided value.
            </summary>
        <remarks>
            Calling <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.SetAbsoluteUri(System.String)" /> does not trigger <see cref="E:Microsoft.AspNetCore.Components.UriHelperBase.OnLocationChanged" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri ToAbsoluteUri (string href);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ToAbsoluteUri(string href) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.ToAbsoluteUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToAbsoluteUri (href As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ToAbsoluteUri(System::String ^ href);" />
      <MemberSignature Language="F#" Value="abstract member ToAbsoluteUri : string -&gt; Uri&#xA;override this.ToAbsoluteUri : string -&gt; Uri" Usage="uriHelperBase.ToAbsoluteUri href" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IUriHelper.ToAbsoluteUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="href" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="href">The relative URI.</param>
        <summary>
            Converts a relative URI into an absolute one (by resolving it
            relative to the current absolute URI).
            </summary>
        <returns>The absolute URI.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBaseRelativePath">
      <MemberSignature Language="C#" Value="public string ToBaseRelativePath (string baseUri, string locationAbsolute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToBaseRelativePath(string baseUri, string locationAbsolute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.ToBaseRelativePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBaseRelativePath (baseUri As String, locationAbsolute As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToBaseRelativePath(System::String ^ baseUri, System::String ^ locationAbsolute);" />
      <MemberSignature Language="F#" Value="abstract member ToBaseRelativePath : string * string -&gt; string&#xA;override this.ToBaseRelativePath : string * string -&gt; string" Usage="uriHelperBase.ToBaseRelativePath (baseUri, locationAbsolute)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IUriHelper.ToBaseRelativePath(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="locationAbsolute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">
            The base URI prefix (e.g., previously returned by <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.GetBaseUri" />).
            </param>
        <param name="locationAbsolute">An absolute URI that is within the space of the base URI.</param>
        <summary>
            Given a base URI (e.g., one previously returned by <see cref="M:Microsoft.AspNetCore.Components.UriHelperBase.GetBaseUri" />),
            converts an absolute URI into one relative to the base URI prefix.
            </summary>
        <returns>A relative URI path.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerOnLocationChanged">
      <MemberSignature Language="C#" Value="protected void TriggerOnLocationChanged (bool isinterceptedLink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TriggerOnLocationChanged(bool isinterceptedLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.UriHelperBase.TriggerOnLocationChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TriggerOnLocationChanged (isinterceptedLink As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TriggerOnLocationChanged(bool isinterceptedLink);" />
      <MemberSignature Language="F#" Value="member this.TriggerOnLocationChanged : bool -&gt; unit" Usage="uriHelperBase.TriggerOnLocationChanged isinterceptedLink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isinterceptedLink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isinterceptedLink">To be added.</param>
        <summary>
            Triggers the <see cref="E:Microsoft.AspNetCore.Components.UriHelperBase.OnLocationChanged" /> event with the current URI value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
