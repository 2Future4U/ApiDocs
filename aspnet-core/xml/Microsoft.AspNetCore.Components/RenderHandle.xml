<Type Name="RenderHandle" FullName="Microsoft.AspNetCore.Components.RenderHandle">
  <TypeSignature Language="C#" Value="public struct RenderHandle" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit RenderHandle extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.RenderHandle" />
  <TypeSignature Language="VB.NET" Value="Public Structure RenderHandle" />
  <TypeSignature Language="C++ CLI" Value="public value class RenderHandle" />
  <TypeSignature Language="F#" Value="type RenderHandle = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Allows a component to notify the renderer that it should be rendered.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Invoke (Action workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task Invoke(class System.Action workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderHandle.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (workItem As Action) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ Invoke(Action ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action -&gt; System.Threading.Tasks.Task" Usage="renderHandle.Invoke workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="workItem">The work item to execute.</param>
        <summary>
            Executes the supplied work item on the renderer's
            synchronization context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeAsync (Func&lt;System.Threading.Tasks.Task&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeAsync(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderHandle.InvokeAsync(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (workItem As Func(Of Task)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ InvokeAsync(Func&lt;System::Threading::Tasks::Task ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="renderHandle.InvokeAsync workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="workItem">The work item to execute.</param>
        <summary>
            Executes the supplied work item on the renderer's
            synchronization context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.RenderHandle.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="Microsoft.AspNetCore.Components.RenderHandle.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the <see cref="T:Microsoft.AspNetCore.Components.RenderHandle" /> has been
            initialised and is ready to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (Microsoft.AspNetCore.Components.RenderFragment renderFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class Microsoft.AspNetCore.Components.RenderFragment renderFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderHandle.Render(Microsoft.AspNetCore.Components.RenderFragment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(Microsoft::AspNetCore::Components::RenderFragment ^ renderFragment);" />
      <MemberSignature Language="F#" Value="member this.Render : Microsoft.AspNetCore.Components.RenderFragment -&gt; unit" Usage="renderHandle.Render renderFragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderFragment" Type="Microsoft.AspNetCore.Components.RenderFragment" />
      </Parameters>
      <Docs>
        <param name="renderFragment">The content that should be rendered.</param>
        <summary>
            Notifies the renderer that the component should be rendered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
