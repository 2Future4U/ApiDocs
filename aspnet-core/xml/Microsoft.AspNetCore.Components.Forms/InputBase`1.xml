<Type Name="InputBase&lt;T&gt;" FullName="Microsoft.AspNetCore.Components.Forms.InputBase&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class InputBase&lt;T&gt; : Microsoft.AspNetCore.Components.ComponentBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InputBase`1&lt;T&gt; extends Microsoft.AspNetCore.Components.ComponentBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Forms.InputBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InputBase(Of T)&#xA;Inherits ComponentBase" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class InputBase abstract : Microsoft::AspNetCore::Components::ComponentBase" />
  <TypeSignature Language="F#" Value="type InputBase&lt;'T&gt; = class&#xA;    inherit ComponentBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Components.ComponentBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            A base class for form input components. This base class automatically
            integrates with an <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext" />, which must be supplied
            as a cascading parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; AdditionalAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; AdditionalAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalAttributes As IReadOnlyDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ AdditionalAttributes { System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdditionalAttributes : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt;" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.AdditionalAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter(CaptureUnmatchedValues=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public string Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Class { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Class : string" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value for the component's 'class' attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="protected string CssClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CssClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CssClass { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a CSS class string that combines the <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Class" /> and <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.FieldClass" />
            properties. Derived components should typically use this value for the primary HTML element's
            'class' attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="protected T CurrentValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T CurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property CurrentValue As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property T CurrentValue { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : 'T with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current value of the input.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValueAsString">
      <MemberSignature Language="C#" Value="protected string CurrentValueAsString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentValueAsString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValueAsString" />
      <MemberSignature Language="VB.NET" Value="Protected Property CurrentValueAsString As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CurrentValueAsString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValueAsString : string with get, set" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.CurrentValueAsString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current value of the input, represented as a string.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditContext">
      <MemberSignature Language="C#" Value="protected Microsoft.AspNetCore.Components.Forms.EditContext EditContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.Forms.EditContext EditContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.EditContext" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EditContext As EditContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::AspNetCore::Components::Forms::EditContext ^ EditContext { Microsoft::AspNetCore::Components::Forms::EditContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditContext : Microsoft.AspNetCore.Components.Forms.EditContext" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.EditContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Forms.EditContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the associated <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldClass">
      <MemberSignature Language="C#" Value="protected string FieldClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FieldClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.FieldClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FieldClass As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ FieldClass { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldClass : string" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.FieldClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a string that indicates the status of the field being edited. This will include
            some combination of "modified", "valid", or "invalid", depending on the status of the field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldIdentifier">
      <MemberSignature Language="C#" Value="protected Microsoft.AspNetCore.Components.Forms.FieldIdentifier FieldIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Components.Forms.FieldIdentifier FieldIdentifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.FieldIdentifier" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FieldIdentifier As FieldIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::AspNetCore::Components::Forms::FieldIdentifier FieldIdentifier { Microsoft::AspNetCore::Components::Forms::FieldIdentifier get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldIdentifier : Microsoft.AspNetCore.Components.Forms.FieldIdentifier" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.FieldIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Forms.FieldIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.FieldIdentifier" /> for the bound value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatValueAsString">
      <MemberSignature Language="C#" Value="protected virtual string FormatValueAsString (T value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatValueAsString(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.FormatValueAsString(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatValueAsString (value As T) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatValueAsString(T value);" />
      <MemberSignature Language="F#" Value="abstract member FormatValueAsString : 'T -&gt; string&#xA;override this.FormatValueAsString : 'T -&gt; string" Usage="inputBase.FormatValueAsString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">The value to format.</param>
        <summary>
            Formats the value as a string. Derived classes can override this to determine the formating used for <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValueAsString" />.
            </summary>
        <returns>A string representation of the value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value for the component's 'id' attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetParametersAsync (parameters As ParameterCollection) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterCollection parameters);" />
      <MemberSignature Language="F#" Value="override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task" Usage="inputBase.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryParseValueFromString">
      <MemberSignature Language="C#" Value="protected abstract bool TryParseValueFromString (string value, out T result, out string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryParseValueFromString(string value, [out] !T&amp; result, [out] string&amp; validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Forms.InputBase`1.TryParseValueFromString(System.String,`0@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryParseValueFromString (value As String, ByRef result As T, ByRef validationErrorMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryParseValueFromString(System::String ^ value, [Runtime::InteropServices::Out] T % result, [Runtime::InteropServices::Out] System::String ^ % validationErrorMessage);" />
      <MemberSignature Language="F#" Value="abstract member TryParseValueFromString : string *  *  -&gt; bool" Usage="inputBase.TryParseValueFromString (value, result, validationErrorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="T" RefType="out" />
        <Parameter Name="validationErrorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">The string value to be parsed.</param>
        <param name="result">An instance of <typeparamref name="T" />.</param>
        <param name="validationErrorMessage">If the value could not be parsed, provides a validation error message.</param>
        <summary>
            Parses a string to create an instance of <typeparamref name="T" />. Derived classes can override this to change how
            <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValueAsString" /> interprets incoming values.
            </summary>
        <returns>True if the value could be parsed; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            @bind-Value="model.PropertyName"
            </example>
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.EventCallback&lt;T&gt; ValueChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Components.EventCallback`1&lt;!T&gt; ValueChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueChanged As EventCallback(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::EventCallback&lt;T&gt; ValueChanged { Microsoft::AspNetCore::Components::EventCallback&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueChanged : Microsoft.AspNetCore.Components.EventCallback&lt;'T&gt;" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.ValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.EventCallback&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression&lt;Func&lt;T&gt;&gt; ValueExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;!T&gt;&gt; ValueExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueExpression As Expression(Of Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression&lt;Func&lt;T&gt; ^&gt; ^ ValueExpression { System::Linq::Expressions::Expression&lt;Func&lt;T&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueExpression : System.Linq.Expressions.Expression&lt;Func&lt;'T&gt;&gt;" Usage="Microsoft.AspNetCore.Components.Forms.InputBase&lt;'T&gt;.ValueExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an expression that identifies the bound value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
