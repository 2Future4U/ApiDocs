<Type Name="CommandBatchPreparer" FullName="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer">
  <TypeSignature Language="C#" Value="public class CommandBatchPreparer : Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandBatchPreparer extends System.Object implements class Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandBatchPreparer&#xA;Implements ICommandBatchPreparer" />
  <TypeSignature Language="F#" Value="type CommandBatchPreparer = class&#xA;    interface ICommandBatchPreparer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparer (Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As CommandBatchPreparerDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer : Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommands">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function BatchCommands (entries As IReadOnlyList(Of IUpdateEntry)) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member BatchCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;&#xA;override this.BatchCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="commandBatchPreparer.BatchCommands entries" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-3.0">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer/&lt;BatchCommands&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModificationCommands">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; CreateModificationCommands (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Func&lt;string&gt; generateParameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; CreateModificationCommands(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class System.Func`1&lt;string&gt; generateParameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateModificationCommands (entries As IReadOnlyList(Of IUpdateEntry), generateParameterName As Func(Of String)) As IEnumerable(Of ModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member CreateModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&#xA;override this.CreateModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="commandBatchPreparer.CreateModificationCommands (entries, generateParameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="generateParameterName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopologicalSort">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt; TopologicalSort (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; commands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt; TopologicalSort(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; commands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TopologicalSort (commands As IEnumerable(Of ModificationCommand)) As IReadOnlyList(Of List(Of ModificationCommand))" />
      <MemberSignature Language="F#" Value="abstract member TopologicalSort : seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt;&#xA;override this.TopologicalSort : seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt;" Usage="commandBatchPreparer.TopologicalSort commands" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commands" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" />
      </Parameters>
      <Docs>
        <param name="commands">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
