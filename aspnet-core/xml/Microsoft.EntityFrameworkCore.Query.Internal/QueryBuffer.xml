<Type Name="QueryBuffer" FullName="Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer">
  <TypeSignature Language="C#" Value="public class QueryBuffer : IDisposable, Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryBuffer extends System.Object implements class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryBuffer&#xA;Implements IDisposable, IQueryBuffer" />
  <TypeSignature Language="F#" Value="type QueryBuffer = class&#xA;    interface IQueryBuffer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryBuffer (Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.#ctor(Microsoft.EntityFrameworkCore.Query.QueryContextDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryContextDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer : Microsoft.EntityFrameworkCore.Query.QueryContextDependencies -&gt; Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelateSubquery&lt;TInner,TOut,TCollection&gt;">
      <MemberSignature Language="C#" Value="public virtual TCollection CorrelateSubquery&lt;TInner,TOut,TCollection&gt; (int correlatedCollectionId, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,TCollection&gt; resultCollectionFactory, Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject outerKey, bool tracking, Func&lt;System.Collections.Generic.IEnumerable&lt;Tuple&lt;TInner,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt;&gt; correlatedCollectionFactory, Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,bool&gt; correlationPredicate) where TInner : TOut where TCollection : System.Collections.Generic.ICollection&lt;TOut&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TCollection CorrelateSubquery&lt;(!!TOut) TInner, TOut, (class System.Collections.Generic.ICollection`1&lt;!!TOut&gt;) TCollection&gt;(int32 correlatedCollectionId, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation, !!TCollection&gt; resultCollectionFactory, [in]class Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject outerKey, bool tracking, class System.Func`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`3&lt;!!TInner, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt;&gt; correlatedCollectionFactory, class System.Func`3&lt;valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, bool&gt; correlationPredicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.CorrelateSubquery``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Func{Microsoft.EntityFrameworkCore.Metadata.INavigation,``2},Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject@|System.Runtime.InteropServices.InAttribute,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{System.Tuple{``0,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject}}},System.Func{Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CorrelateSubquery(Of TInner As TOut, TOut As TOut, TCollection As TOut) (correlatedCollectionId As Integer, navigation As INavigation, resultCollectionFactory As Func(Of INavigation, TCollection), outerKey As MaterializedAnonymousObject, tracking As Boolean, correlatedCollectionFactory As Func(Of IEnumerable(Of Tuple(Of TInner, MaterializedAnonymousObject, MaterializedAnonymousObject))), correlationPredicate As Func(Of MaterializedAnonymousObject, MaterializedAnonymousObject, Boolean)) As TCollection" />
      <MemberSignature Language="F#" Value="abstract member CorrelateSubquery : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation, 'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&gt; * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * bool * Func&lt;seq&lt;#'Out * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt; * Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, bool&gt; -&gt; 'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&#xA;override this.CorrelateSubquery : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation, 'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&gt; * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * bool * Func&lt;seq&lt;#'Out * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt; * Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, bool&gt; -&gt; 'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)" Usage="queryBuffer.CorrelateSubquery (correlatedCollectionId, navigation, resultCollectionFactory, outerKey, tracking, correlatedCollectionFactory, correlationPredicate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.CorrelateSubquery``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Func{Microsoft.EntityFrameworkCore.Metadata.INavigation,``2},Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{System.Tuple{``0,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject}}},System.Func{Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInner">
          <Constraints>
            <BaseTypeName>TOut</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TOut" />
        <TypeParameter Name="TCollection">
          <Constraints>
            <InterfaceName>System.Collections.Generic.ICollection&lt;TOut&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="correlatedCollectionId" Type="System.Int32" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="resultCollectionFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,TCollection&gt;" />
        <Parameter Name="outerKey" Type="Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject" />
        <Parameter Name="tracking" Type="System.Boolean" />
        <Parameter Name="correlatedCollectionFactory" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;TInner,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt;&gt;" />
        <Parameter Name="correlationPredicate" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInner">To be added.</typeparam>
        <typeparam name="TOut">To be added.</typeparam>
        <typeparam name="TCollection">To be added.</typeparam>
        <param name="correlatedCollectionId">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="resultCollectionFactory">To be added.</param>
        <param name="outerKey">To be added.</param>
        <param name="tracking">To be added.</param>
        <param name="correlatedCollectionFactory">To be added.</param>
        <param name="correlationPredicate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelateSubqueryAsync&lt;TInner,TOut,TCollection&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TCollection&gt; CorrelateSubqueryAsync&lt;TInner,TOut,TCollection&gt; (int correlatedCollectionId, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,TCollection&gt; resultCollectionFactory, Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject outerKey, bool tracking, Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;Tuple&lt;TInner,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt;&gt; correlatedCollectionFactory, Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,bool&gt; correlationPredicate, System.Threading.CancellationToken cancellationToken) where TInner : TOut where TCollection : System.Collections.Generic.ICollection&lt;TOut&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TCollection&gt; CorrelateSubqueryAsync&lt;(!!TOut) TInner, TOut, (class System.Collections.Generic.ICollection`1&lt;!!TOut&gt;) TCollection&gt;(int32 correlatedCollectionId, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation, !!TCollection&gt; resultCollectionFactory, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject outerKey, bool tracking, class System.Func`1&lt;class System.Collections.Generic.IAsyncEnumerable`1&lt;class System.Tuple`3&lt;!!TInner, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt;&gt; correlatedCollectionFactory, class System.Func`3&lt;valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, valuetype Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, bool&gt; correlationPredicate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.CorrelateSubqueryAsync``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Func{Microsoft.EntityFrameworkCore.Metadata.INavigation,``2},Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean,System.Func{System.Collections.Generic.IAsyncEnumerable{System.Tuple{``0,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject}}},System.Func{Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CorrelateSubqueryAsync : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation, 'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&gt; * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * bool * Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;#'Out * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt; * Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&gt; (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&#xA;override this.CorrelateSubqueryAsync : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation, 'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&gt; * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * bool * Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;#'Out * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject * Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt; * Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject, bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Collection (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)&gt; (requires 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Out&gt;)" Usage="queryBuffer.CorrelateSubqueryAsync (correlatedCollectionId, navigation, resultCollectionFactory, outerKey, tracking, correlatedCollectionFactory, correlationPredicate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.CorrelateSubqueryAsync``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Func{Microsoft.EntityFrameworkCore.Metadata.INavigation,``2},Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean,System.Func{System.Collections.Generic.IAsyncEnumerable{System.Tuple{``0,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject}}},System.Func{Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TCollection&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInner">
          <Constraints>
            <BaseTypeName>TOut</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TOut" />
        <TypeParameter Name="TCollection">
          <Constraints>
            <InterfaceName>System.Collections.Generic.ICollection&lt;TOut&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="correlatedCollectionId" Type="System.Int32" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="resultCollectionFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,TCollection&gt;" />
        <Parameter Name="outerKey" Type="Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject" />
        <Parameter Name="tracking" Type="System.Boolean" />
        <Parameter Name="correlatedCollectionFactory" Type="System.Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;System.Tuple&lt;TInner,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject&gt;&gt;&gt;" />
        <Parameter Name="correlationPredicate" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,Microsoft.EntityFrameworkCore.Query.Internal.MaterializedAnonymousObject,System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TInner">To be added.</typeparam>
        <typeparam name="TOut">To be added.</typeparam>
        <typeparam name="TCollection">To be added.</typeparam>
        <param name="correlatedCollectionId">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="resultCollectionFactory">To be added.</param>
        <param name="outerKey">To be added.</param>
        <param name="tracking">To be added.</param>
        <param name="correlatedCollectionFactory">To be added.</param>
        <param name="correlationPredicate">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public virtual object GetEntity (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Query.EntityLoadInfo entityLoadInfo, bool queryStateManager, bool throwOnNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class Microsoft.EntityFrameworkCore.Metadata.IKey key, valuetype Microsoft.EntityFrameworkCore.Query.EntityLoadInfo entityLoadInfo, bool queryStateManager, bool throwOnNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetEntity : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Query.EntityLoadInfo * bool * bool -&gt; obj&#xA;override this.GetEntity : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Query.EntityLoadInfo * bool * bool -&gt; obj" Usage="queryBuffer.GetEntity (key, entityLoadInfo, queryStateManager, throwOnNullKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="entityLoadInfo" Type="Microsoft.EntityFrameworkCore.Query.EntityLoadInfo" />
        <Parameter Name="queryStateManager" Type="System.Boolean" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityLoadInfo">To be added.</param>
        <param name="queryStateManager">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public virtual object GetPropertyValue (object entity, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(object entity, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertyValue (entity As Object, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : obj * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj&#xA;override this.GetPropertyValue : obj * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="queryBuffer.GetPropertyValue (entity, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeCollection&lt;TEntity,TRelated,TElement&gt;">
      <MemberSignature Language="C#" Value="public virtual void IncludeCollection&lt;TEntity,TRelated,TElement&gt; (int includeId, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, TEntity entity, Func&lt;System.Collections.Generic.IEnumerable&lt;TRelated&gt;&gt; relatedEntitiesFactory, Func&lt;TEntity,TRelated,bool&gt; joinPredicate) where TRelated : TElement;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncludeCollection&lt;TEntity, (!!TElement) TRelated, TElement&gt;(int32 includeId, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, !!TEntity entity, class System.Func`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!!TRelated&gt;&gt; relatedEntitiesFactory, class System.Func`3&lt;!!TEntity, !!TRelated, bool&gt; joinPredicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeCollection``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter,System.Boolean,``0,System.Func{System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IncludeCollection(Of TEntity, TRelated, TElement) (includeId As Integer, navigation As INavigation, inverseNavigation As INavigation, targetEntityType As IEntityType, clrCollectionAccessor As IClrCollectionAccessor, inverseClrPropertySetter As IClrPropertySetter, tracking As Boolean, entity As TEntity, relatedEntitiesFactory As Func(Of IEnumerable(Of TRelated)), joinPredicate As Func(Of TEntity, TRelated, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member IncludeCollection : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter * bool * 'Entity * Func&lt;seq&lt;#'Element&gt;&gt; * Func&lt;'Entity, #'Element, bool&gt; -&gt; unit&#xA;override this.IncludeCollection : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter * bool * 'Entity * Func&lt;seq&lt;#'Element&gt;&gt; * Func&lt;'Entity, #'Element, bool&gt; -&gt; unit" Usage="queryBuffer.IncludeCollection (includeId, navigation, inverseNavigation, targetEntityType, clrCollectionAccessor, inverseClrPropertySetter, tracking, entity, relatedEntitiesFactory, joinPredicate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeCollection``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter,System.Boolean,``0,System.Func{System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
        <TypeParameter Name="TRelated">
          <Constraints>
            <BaseTypeName>TElement</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="includeId" Type="System.Int32" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="inverseNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="clrCollectionAccessor" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" />
        <Parameter Name="inverseClrPropertySetter" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter" />
        <Parameter Name="tracking" Type="System.Boolean" />
        <Parameter Name="entity" Type="TEntity" />
        <Parameter Name="relatedEntitiesFactory" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;TRelated&gt;&gt;" />
        <Parameter Name="joinPredicate" Type="System.Func&lt;TEntity,TRelated,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TRelated">To be added.</typeparam>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="includeId">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <param name="clrCollectionAccessor">To be added.</param>
        <param name="inverseClrPropertySetter">To be added.</param>
        <param name="tracking">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="relatedEntitiesFactory">To be added.</param>
        <param name="joinPredicate">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeCollectionAsync&lt;TEntity,TRelated,TElement&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task IncludeCollectionAsync&lt;TEntity,TRelated,TElement&gt; (int includeId, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, TEntity entity, Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;TRelated&gt;&gt; relatedEntitiesFactory, Func&lt;TEntity,TRelated,bool&gt; joinPredicate, System.Threading.CancellationToken cancellationToken) where TRelated : TElement;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task IncludeCollectionAsync&lt;TEntity, (!!TElement) TRelated, TElement&gt;(int32 includeId, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation inverseNavigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor clrCollectionAccessor, class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter inverseClrPropertySetter, bool tracking, !!TEntity entity, class System.Func`1&lt;class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TRelated&gt;&gt; relatedEntitiesFactory, class System.Func`3&lt;!!TEntity, !!TRelated, bool&gt; joinPredicate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeCollectionAsync``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter,System.Boolean,``0,System.Func{System.Collections.Generic.IAsyncEnumerable{``1}},System.Func{``0,``1,System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member IncludeCollectionAsync : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter * bool * 'Entity * Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;#'Element&gt;&gt; * Func&lt;'Entity, #'Element, bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.IncludeCollectionAsync : int * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor * Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter * bool * 'Entity * Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;#'Element&gt;&gt; * Func&lt;'Entity, #'Element, bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="queryBuffer.IncludeCollectionAsync (includeId, navigation, inverseNavigation, targetEntityType, clrCollectionAccessor, inverseClrPropertySetter, tracking, entity, relatedEntitiesFactory, joinPredicate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeCollectionAsync``3(System.Int32,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter,System.Boolean,``0,System.Func{System.Collections.Generic.IAsyncEnumerable{``1}},System.Func{``0,``1,System.Boolean},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
        <TypeParameter Name="TRelated">
          <Constraints>
            <BaseTypeName>TElement</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="includeId" Type="System.Int32" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="inverseNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="clrCollectionAccessor" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" />
        <Parameter Name="inverseClrPropertySetter" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter" />
        <Parameter Name="tracking" Type="System.Boolean" />
        <Parameter Name="entity" Type="TEntity" />
        <Parameter Name="relatedEntitiesFactory" Type="System.Func&lt;System.Collections.Generic.IAsyncEnumerable&lt;TRelated&gt;&gt;" />
        <Parameter Name="joinPredicate" Type="System.Func&lt;TEntity,TRelated,System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TRelated">To be added.</typeparam>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="includeId">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <param name="clrCollectionAccessor">To be added.</param>
        <param name="inverseClrPropertySetter">To be added.</param>
        <param name="tracking">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="relatedEntitiesFactory">To be added.</param>
        <param name="joinPredicate">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public virtual void StartTracking (object entity, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(object entity, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartTracking (entity As Object, entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : obj * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.StartTracking : obj * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="queryBuffer.StartTracking (entity, entityType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public virtual void StartTracking (object entity, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo entityTrackingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(object entity, class Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo entityTrackingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : obj * Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo -&gt; unit&#xA;override this.StartTracking : obj * Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo -&gt; unit" Usage="queryBuffer.StartTracking (entity, entityTrackingInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityTrackingInfo" Type="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="entityTrackingInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>