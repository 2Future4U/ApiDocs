<Type Name="CompiledQueryCache" FullName="Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache">
  <TypeSignature Language="C#" Value="public class CompiledQueryCache : Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompiledQueryCache extends System.Object implements class Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CompiledQueryCache&#xA;Implements ICompiledQueryCache" />
  <TypeSignature Language="F#" Value="type CompiledQueryCache = class&#xA;    interface ICompiledQueryCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompiledQueryCache (Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memoryCache As IMemoryCache)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache : Microsoft.Extensions.Caching.Memory.IMemoryCache -&gt; Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache memoryCache" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryCache" Type="Microsoft.Extensions.Caching.Memory.IMemoryCache" />
      </Parameters>
      <Docs>
        <param name="memoryCache">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompiledQueryParameterPrefix">
      <MemberSignature Language="C#" Value="public const string CompiledQueryParameterPrefix;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CompiledQueryParameterPrefix" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.CompiledQueryParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Const CompiledQueryParameterPrefix As String " />
      <MemberSignature Language="F#" Value="val mutable CompiledQueryParameterPrefix : string" Usage="Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.CompiledQueryParameterPrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddAsyncQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt; GetOrAddAsyncQuery&lt;TResult&gt; (object cacheKey, Func&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;&gt; compiler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, !!TResult&gt; GetOrAddAsyncQuery&lt;TResult&gt;(object cacheKey, class System.Func`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, !!TResult&gt;&gt; compiler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddAsyncQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrAddAsyncQuery(Of TResult) (cacheKey As Object, compiler As Func(Of Func(Of QueryContext, TResult))) As Func(Of QueryContext, TResult)" />
      <MemberSignature Language="F#" Value="abstract member GetOrAddAsyncQuery : obj * Func&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&gt; -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&#xA;override this.GetOrAddAsyncQuery : obj * Func&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&gt; -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;" Usage="compiledQueryCache.GetOrAddAsyncQuery (cacheKey, compiler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache.GetOrAddAsyncQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,``0}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.Object" />
        <Parameter Name="compiler" Type="System.Func&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="cacheKey">To be added.</param>
        <param name="compiler">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt; GetOrAddQuery&lt;TResult&gt; (object cacheKey, Func&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;&gt; compiler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, !!TResult&gt; GetOrAddQuery&lt;TResult&gt;(object cacheKey, class System.Func`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, !!TResult&gt;&gt; compiler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrAddQuery(Of TResult) (cacheKey As Object, compiler As Func(Of Func(Of QueryContext, TResult))) As Func(Of QueryContext, TResult)" />
      <MemberSignature Language="F#" Value="abstract member GetOrAddQuery : obj * Func&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&gt; -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&#xA;override this.GetOrAddQuery : obj * Func&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&gt; -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;" Usage="compiledQueryCache.GetOrAddQuery (cacheKey, compiler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache.GetOrAddQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,``0}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.Object" />
        <Parameter Name="compiler" Type="System.Func&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="cacheKey">To be added.</param>
        <param name="compiler">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
