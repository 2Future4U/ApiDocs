<Type Name="ExpressionEqualityComparer" FullName="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer">
  <TypeSignature Language="C#" Value="public class ExpressionEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;System.Linq.Expressions.Expression&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;class System.Linq.Expressions.Expression&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionEqualityComparer&#xA;Implements IEqualityComparer(Of Expression)" />
  <TypeSignature Language="F#" Value="type ExpressionEqualityComparer = class&#xA;    interface IEqualityComparer&lt;Expression&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Linq.Expressions.Expression&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public virtual bool Equals (System.Linq.Expressions.Expression x, System.Linq.Expressions.Expression y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Linq.Expressions.Expression x, class System.Linq.Expressions.Expression y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.Equals(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Equals (x As Expression, y As Expression) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; bool" Usage="expressionEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="y" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (System.Linq.Expressions.Expression obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Linq.Expressions.Expression obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.GetHashCode(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (obj As Expression) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : System.Linq.Expressions.Expression -&gt; int" Usage="expressionEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As ExpressionEqualityComparer" />
      <MemberSignature Language="F#" Value="member this.Instance : Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEquals">
      <MemberSignature Language="C#" Value="public virtual bool SequenceEquals (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; x, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SequenceEquals(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; x, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.SequenceEquals(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SequenceEquals (x As IEnumerable(Of Expression), y As IEnumerable(Of Expression)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member SequenceEquals : seq&lt;System.Linq.Expressions.Expression&gt; * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; bool&#xA;override this.SequenceEquals : seq&lt;System.Linq.Expressions.Expression&gt; * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; bool" Usage="expressionEqualityComparer.SequenceEquals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="y" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>