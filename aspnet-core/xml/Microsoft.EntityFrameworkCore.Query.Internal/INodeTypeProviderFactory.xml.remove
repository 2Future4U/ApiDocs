<Type Name="INodeTypeProviderFactory" FullName="Microsoft.EntityFrameworkCore.Query.Internal.INodeTypeProviderFactory">
  <TypeSignature Language="C#" Value="public interface INodeTypeProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INodeTypeProviderFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.INodeTypeProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface INodeTypeProviderFactory" />
  <TypeSignature Language="F#" Value="type INodeTypeProviderFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Creates <see cref="T:Remotion.Linq.Parsing.Structure.INodeTypeProvider" /> instances for use by the query compiler.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Remotion.Linq.Parsing.Structure.INodeTypeProvider Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Remotion.Linq.Parsing.Structure.INodeTypeProvider Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.INodeTypeProviderFactory.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As INodeTypeProvider" />
      <MemberSignature Language="F#" Value="abstract member Create : unit -&gt; Remotion.Linq.Parsing.Structure.INodeTypeProvider" Usage="iNodeTypeProviderFactory.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Parsing.Structure.INodeTypeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Creates a <see cref="T:Remotion.Linq.Parsing.Structure.INodeTypeProvider" />.
            </summary>
        <returns>The <see cref="T:Remotion.Linq.Parsing.Structure.INodeTypeProvider" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterMethods">
      <MemberSignature Language="C#" Value="public void RegisterMethods (System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt; methods, Type nodeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMethods(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MethodInfo&gt; methods, class System.Type nodeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.INodeTypeProviderFactory.RegisterMethods(System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo},System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterMethods (methods As IEnumerable(Of MethodInfo), nodeType As Type)" />
      <MemberSignature Language="F#" Value="abstract member RegisterMethods : seq&lt;System.Reflection.MethodInfo&gt; * Type -&gt; unit" Usage="iNodeTypeProviderFactory.RegisterMethods (methods, nodeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methods" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;" />
        <Parameter Name="nodeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="methods">The methods to register.</param>
        <param name="nodeType">The node type for these methods.</param>
        <summary>
                Registers methods to be used with the <see cref="T:Remotion.Linq.Parsing.Structure.INodeTypeProvider" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
