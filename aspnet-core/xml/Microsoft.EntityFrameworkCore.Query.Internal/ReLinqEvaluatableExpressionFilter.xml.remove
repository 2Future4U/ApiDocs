<Type Name="ReLinqEvaluatableExpressionFilter" FullName="Microsoft.EntityFrameworkCore.Query.Internal.ReLinqEvaluatableExpressionFilter">
  <TypeSignature Language="C#" Value="public class ReLinqEvaluatableExpressionFilter : Remotion.Linq.Parsing.ExpressionVisitors.TreeEvaluation.EvaluatableExpressionFilterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReLinqEvaluatableExpressionFilter extends Remotion.Linq.Parsing.ExpressionVisitors.TreeEvaluation.EvaluatableExpressionFilterBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.ReLinqEvaluatableExpressionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class ReLinqEvaluatableExpressionFilter&#xA;Inherits EvaluatableExpressionFilterBase" />
  <TypeSignature Language="F#" Value="type ReLinqEvaluatableExpressionFilter = class&#xA;    inherit EvaluatableExpressionFilterBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Remotion.Linq.Parsing.ExpressionVisitors.TreeEvaluation.EvaluatableExpressionFilterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReLinqEvaluatableExpressionFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ReLinqEvaluatableExpressionFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvaluatableMember">
      <MemberSignature Language="C#" Value="public override bool IsEvaluatableMember (System.Linq.Expressions.MemberExpression memberExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEvaluatableMember(class System.Linq.Expressions.MemberExpression memberExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ReLinqEvaluatableExpressionFilter.IsEvaluatableMember(System.Linq.Expressions.MemberExpression)" />
      <MemberSignature Language="F#" Value="override this.IsEvaluatableMember : System.Linq.Expressions.MemberExpression -&gt; bool" Usage="reLinqEvaluatableExpressionFilter.IsEvaluatableMember memberExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberExpression" Type="System.Linq.Expressions.MemberExpression" />
      </Parameters>
      <Docs>
        <param name="memberExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvaluatableMethodCall">
      <MemberSignature Language="C#" Value="public override bool IsEvaluatableMethodCall (System.Linq.Expressions.MethodCallExpression methodCallExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEvaluatableMethodCall(class System.Linq.Expressions.MethodCallExpression methodCallExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ReLinqEvaluatableExpressionFilter.IsEvaluatableMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="F#" Value="override this.IsEvaluatableMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; bool" Usage="reLinqEvaluatableExpressionFilter.IsEvaluatableMethodCall methodCallExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" />
      </Parameters>
      <Docs>
        <param name="methodCallExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
