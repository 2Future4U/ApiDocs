<Type Name="DbQuery&lt;TQuery&gt;" FullName="Microsoft.EntityFrameworkCore.DbQuery&lt;TQuery&gt;">
  <TypeSignature Language="C#" Value="public abstract class DbQuery&lt;TQuery&gt; : Microsoft.EntityFrameworkCore.DbSet&lt;TQuery&gt; where TQuery : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbQuery`1&lt;class TQuery&gt; extends Microsoft.EntityFrameworkCore.DbSet`1&lt;!TQuery&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.DbQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbQuery(Of TQuery)&#xA;Inherits DbSet(Of TQuery)" />
  <TypeSignature Language="F#" Value="type DbQuery&lt;'Query (requires 'Query : null)&gt; = class&#xA;    inherit DbSet&lt;'Query (requires 'Query : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TQuery">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.DbSet&lt;TQuery&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TEntity">TQuery</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-3.0">
      <AttributeName>System.Obsolete("Use DbSet&lt;T&gt; instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TQuery"> The type of view being operated on by this view. </typeparam>
    <summary>
      <para>
                    A <see cref="T:Microsoft.EntityFrameworkCore.DbQuery`1" /> can be used to query instances of <typeparamref name="TQuery" />.
                    LINQ queries against a <see cref="T:Microsoft.EntityFrameworkCore.DbQuery`1" /> will be translated into queries against the database.
                </para>
      <para>
                    The results of a LINQ query against a <see cref="T:Microsoft.EntityFrameworkCore.DbQuery`1" /> will contain the results
                    returned from the database and may not reflect changes made in the context that have not
                    been persisted to the database. For example, the results will not contain newly added views
                    and may still contain views that are marked for deletion.
                </para>
      <para>
                    Depending on the database being used, some parts of a LINQ query against a <see cref="T:Microsoft.EntityFrameworkCore.DbQuery`1" />
                    may be evaluated in memory rather than being translated into a database query.
                </para>
      <para>
        <see cref="T:Microsoft.EntityFrameworkCore.DbQuery`1" /> objects are usually obtained from a <see cref="T:Microsoft.EntityFrameworkCore.DbQuery`1" />
                    property on a derived <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> or from the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Query``1" />
                    method.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbQuery`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>