<Type Name="SqlServerIndexBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerIndexBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerIndexBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerIndexBuilderExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerIndexBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                SQL Server specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ForSqlServerInclude">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqlServerInclude (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, params string[] propertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqlServerInclude(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string[] propertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerInclude(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String[])" />
      <MemberSignature Language="F#" Value="static member ForSqlServerInclude : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerInclude (indexBuilder, propertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" />
        <Parameter Name="propertyNames" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indexBuilder"> The builder for the index being configured. </param>
        <param name="propertyNames"> An array of property names to be used in 'include' clause. </param>
        <summary>
                Configures index include properties when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerInclude&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; ForSqlServerInclude&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; includeExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; ForSqlServerInclude&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; includeExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerInclude``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerInclude(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), includeExpression As Expression(Of Func(Of TEntity, Object))) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member ForSqlServerInclude : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerInclude (indexBuilder, includeExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="includeExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="indexBuilder"> The builder for the index being configured. </param>
        <param name="includeExpression">
          <para>
                    A lambda expression representing the property(s) to be included in the 'include' clause
                    (<c>blog =&gt; blog.Url</c>).
                </para>
          <para>
                    If multiple properties are to be included then specify an anonymous type including the
                    properties (<c>post =&gt; new { post.Title, post.BlogId }</c>).
                </para>
        </param>
        <summary>
                Configures index include properties when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerIsClustered">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqlServerIsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, bool clustered = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqlServerIsClustered(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, bool clustered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member ForSqlServerIsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered (indexBuilder, clustered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" />
        <Parameter Name="clustered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="indexBuilder"> The builder for the index being configured. </param>
        <param name="clustered"> A value indicating whether the index is clustered. </param>
        <summary>
                Configures whether the index is clustered when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerIsClustered&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; ForSqlServerIsClustered&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, bool clustered = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; ForSqlServerIsClustered&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, bool clustered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerIsClustered(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), Optional clustered As Boolean = true) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member ForSqlServerIsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsClustered (indexBuilder, clustered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="clustered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="indexBuilder"> The builder for the index being configured. </param>
        <param name="clustered"> A value indicating whether the index is clustered. </param>
        <summary>
                Configures whether the index is clustered when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerIsOnline">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqlServerIsOnline (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, bool online = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqlServerIsOnline(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, bool online) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsOnline(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member ForSqlServerIsOnline : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsOnline (indexBuilder, online)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" />
        <Parameter Name="online" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="indexBuilder"> The builder for the index being configured. </param>
        <param name="online"> A value indicating whether the index is created with online option. </param>
        <summary>
                Configures index include properties when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerIsOnline&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; ForSqlServerIsOnline&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, bool online = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; ForSqlServerIsOnline&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, bool online) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsOnline``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerIsOnline(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), Optional online As Boolean = true) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member ForSqlServerIsOnline : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexBuilderExtensions.ForSqlServerIsOnline (indexBuilder, online)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="online" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="indexBuilder"> The builder for the index being configured. </param>
        <param name="online"> A value indicating whether the index is created with online option. </param>
        <summary>
                Configures whether the index is created with online option when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
