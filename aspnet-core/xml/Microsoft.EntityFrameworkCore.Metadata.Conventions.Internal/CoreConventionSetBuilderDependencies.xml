<Type Name="CoreConventionSetBuilderDependencies" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies">
  <TypeSignature Language="C#" Value="public sealed class CoreConventionSetBuilderDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CoreConventionSetBuilderDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CoreConventionSetBuilderDependencies" />
  <TypeSignature Language="F#" Value="type CoreConventionSetBuilderDependencies = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.
                    This means a single instance of each service is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances.
                    The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoreConventionSetBuilderDependencies (Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource, Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory constructorBindingFactory, Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories parameterBindingFactories, Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource, class Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory constructorBindingFactory, class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories parameterBindingFactories, class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource,Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory,Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories,Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMappingSource As ITypeMappingSource, constructorBindingFactory As IConstructorBindingFactory, parameterBindingFactories As IParameterBindingFactories, memberClassifier As IMemberClassifier)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource * Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory * Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories * Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies (typeMappingSource, constructorBindingFactory, parameterBindingFactories, memberClassifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" />
        <Parameter Name="constructorBindingFactory" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory" />
        <Parameter Name="parameterBindingFactories" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories" />
        <Parameter Name="memberClassifier" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource">To be added.</param>
        <param name="constructorBindingFactory">To be added.</param>
        <param name="parameterBindingFactories">To be added.</param>
        <param name="memberClassifier">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorBindingFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory ConstructorBindingFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory ConstructorBindingFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.ConstructorBindingFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructorBindingFactory As IConstructorBindingFactory" />
      <MemberSignature Language="F#" Value="member this.ConstructorBindingFactory : Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.ConstructorBindingFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberClassifier">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier MemberClassifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier MemberClassifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.MemberClassifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberClassifier As IMemberClassifier" />
      <MemberSignature Language="F#" Value="member this.MemberClassifier : Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.MemberClassifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingFactories">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories ParameterBindingFactories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories ParameterBindingFactories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.ParameterBindingFactories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindingFactories As IParameterBindingFactories" />
      <MemberSignature Language="F#" Value="member this.ParameterBindingFactories : Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.ParameterBindingFactories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource TypeMappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeMappingSource As ITypeMappingSource" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.TypeMappingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (logger As IDiagnosticsLogger(Of DbLoggerCategory.Model)) As CoreConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" Usage="coreConventionSetBuilderDependencies.With logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" />
      </Parameters>
      <Docs>
        <param name="logger"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With (Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory constructorBindingFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With(class Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory constructorBindingFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (constructorBindingFactory As IConstructorBindingFactory) As CoreConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" Usage="coreConventionSetBuilderDependencies.With constructorBindingFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorBindingFactory" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IConstructorBindingFactory" />
      </Parameters>
      <Docs>
        <param name="constructorBindingFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With (Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With(class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (memberClassifier As IMemberClassifier) As CoreConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" Usage="coreConventionSetBuilderDependencies.With memberClassifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberClassifier" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" />
      </Parameters>
      <Docs>
        <param name="memberClassifier"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With (Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories parameterBindingFactories);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With(class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories parameterBindingFactories) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (parameterBindingFactories As IParameterBindingFactories) As CoreConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" Usage="coreConventionSetBuilderDependencies.With parameterBindingFactories" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterBindingFactories" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories" />
      </Parameters>
      <Docs>
        <param name="parameterBindingFactories"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With (Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies With(class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies.With(Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (typeMappingSource As ITypeMappingSource) As CoreConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies" Usage="coreConventionSetBuilderDependencies.With typeMappingSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>