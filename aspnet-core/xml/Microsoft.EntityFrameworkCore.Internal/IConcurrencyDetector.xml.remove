<Type Name="IConcurrencyDetector" FullName="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector">
  <TypeSignature Language="C#" Value="public interface IConcurrencyDetector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConcurrencyDetector" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConcurrencyDetector" />
  <TypeSignature Language="F#" Value="type IConcurrencyDetector = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EnterCriticalSection">
      <MemberSignature Language="C#" Value="public IDisposable EnterCriticalSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable EnterCriticalSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector.EnterCriticalSection" />
      <MemberSignature Language="VB.NET" Value="Public Function EnterCriticalSection () As IDisposable" />
      <MemberSignature Language="F#" Value="abstract member EnterCriticalSection : unit -&gt; IDisposable" Usage="iConcurrencyDetector.EnterCriticalSection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCriticalSectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;IDisposable&gt; EnterCriticalSectionAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IDisposable&gt; EnterCriticalSectionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector.EnterCriticalSectionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member EnterCriticalSectionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;IDisposable&gt;" Usage="iConcurrencyDetector.EnterCriticalSectionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IDisposable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
