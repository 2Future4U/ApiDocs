<Type Name="IConditionalRemovingExpressionVisitorFactory" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory">
  <TypeSignature Language="C#" Value="public interface IConditionalRemovingExpressionVisitorFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConditionalRemovingExpressionVisitorFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConditionalRemovingExpressionVisitorFactory" />
  <TypeSignature Language="F#" Value="type IConditionalRemovingExpressionVisitorFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.ExpressionVisitor Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.ExpressionVisitor Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As ExpressionVisitor" />
      <MemberSignature Language="F#" Value="abstract member Create : unit -&gt; System.Linq.Expressions.ExpressionVisitor" Usage="iConditionalRemovingExpressionVisitorFactory.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionVisitor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>