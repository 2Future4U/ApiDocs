<Type Name="MemberClassifier" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier">
  <TypeSignature Language="C#" Value="public class MemberClassifier : Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemberClassifier extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier" />
  <TypeSignature Language="VB.NET" Value="Public Class MemberClassifier&#xA;Implements IMemberClassifier" />
  <TypeSignature Language="F#" Value="type MemberClassifier = class&#xA;    interface IMemberClassifier" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberClassifier (Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource, Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories parameterBindingFactories);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource, class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories parameterBindingFactories) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource,Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMappingSource As ITypeMappingSource, parameterBindingFactories As IParameterBindingFactories)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource * Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier (typeMappingSource, parameterBindingFactories)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" />
        <Parameter Name="parameterBindingFactories" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource">To be added.</param>
        <param name="parameterBindingFactories">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCandidateNavigationPropertyType">
      <MemberSignature Language="C#" Value="public virtual Type FindCandidateNavigationPropertyType (System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type FindCandidateNavigationPropertyType(class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.MemberClassifier.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="abstract member FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type&#xA;override this.FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type" Usage="memberClassifier.FindCandidateNavigationPropertyType propertyInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>