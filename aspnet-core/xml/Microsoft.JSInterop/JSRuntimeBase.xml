<Type Name="JSRuntimeBase" FullName="Microsoft.JSInterop.JSRuntimeBase">
  <TypeSignature Language="C#" Value="public abstract class JSRuntimeBase : Microsoft.JSInterop.IJSRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JSRuntimeBase extends System.Object implements class Microsoft.JSInterop.IJSRuntime" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JSInterop.JSRuntimeBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JSRuntimeBase&#xA;Implements IJSRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class JSRuntimeBase abstract : Microsoft::JSInterop::IJSRuntime" />
  <TypeSignature Language="F#" Value="type JSRuntimeBase = class&#xA;    interface IJSRuntime" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JSInterop</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JSInterop.IJSRuntime</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Abstract base class for a JavaScript runtime.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JSRuntimeBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntimeBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JSRuntimeBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeJS">
      <MemberSignature Language="C#" Value="protected abstract void BeginInvokeJS (long asyncHandle, string identifier, string argsJson);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginInvokeJS(int64 asyncHandle, string identifier, string argsJson) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntimeBase.BeginInvokeJS(System.Int64,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub BeginInvokeJS (asyncHandle As Long, identifier As String, argsJson As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void BeginInvokeJS(long asyncHandle, System::String ^ identifier, System::String ^ argsJson);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvokeJS : int64 * string * string -&gt; unit" Usage="jSRuntimeBase.BeginInvokeJS (asyncHandle, identifier, argsJson)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncHandle" Type="System.Int64" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="argsJson" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="asyncHandle">The identifier for the function invocation, or zero if no async callback is required.</param>
        <param name="identifier">The identifier for the function to invoke.</param>
        <param name="argsJson">A JSON representation of the arguments.</param>
        <summary>
            Begins an asynchronous function invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; InvokeAsync&lt;T&gt; (string identifier, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; InvokeAsync&lt;T&gt;(string identifier, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntimeBase.InvokeAsync``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of T) (identifier As String, ParamArray args As Object()) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual System::Threading::Tasks::Task&lt;T&gt; ^ InvokeAsync(System::String ^ identifier, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member InvokeAsync : string * obj[] -&gt; System.Threading.Tasks.Task&lt;'T&gt;&#xA;override this.InvokeAsync : string * obj[] -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="jSRuntimeBase.InvokeAsync (identifier, args)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JSInterop.IJSRuntime.InvokeAsync``1(System.String,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">The JSON-serializable return type.</typeparam>
        <param name="identifier">An identifier for the function to invoke. For example, the value <code>"someScope.someFunction"</code> will invoke the function <code>window.someScope.someFunction</code>.</param>
        <param name="args">JSON-serializable arguments.</param>
        <summary>
            Invokes the specified JavaScript function asynchronously.
            </summary>
        <returns>An instance of <typeparamref name="T" /> obtained by JSON-deserializing the return value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
