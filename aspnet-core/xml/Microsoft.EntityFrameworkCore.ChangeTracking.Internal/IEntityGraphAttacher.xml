<Type Name="IEntityGraphAttacher" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher">
  <TypeSignature Language="C#" Value="public interface IEntityGraphAttacher" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEntityGraphAttacher" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityGraphAttacher" />
  <TypeSignature Language="F#" Value="type IEntityGraphAttacher = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AttachGraph">
      <MemberSignature Language="C#" Value="public void AttachGraph (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, Microsoft.EntityFrameworkCore.EntityState targetState, Microsoft.EntityFrameworkCore.EntityState storeGeneratedWithKeySetTargetState, bool forceStateWhenUnknownKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachGraph(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, valuetype Microsoft.EntityFrameworkCore.EntityState targetState, valuetype Microsoft.EntityFrameworkCore.EntityState storeGeneratedWithKeySetTargetState, bool forceStateWhenUnknownKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachGraph (rootEntry As InternalEntityEntry, targetState As EntityState, storeGeneratedWithKeySetTargetState As EntityState, forceStateWhenUnknownKey As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AttachGraph : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState * bool -&gt; unit" Usage="iEntityGraphAttacher.AttachGraph (rootEntry, targetState, storeGeneratedWithKeySetTargetState, forceStateWhenUnknownKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="targetState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="storeGeneratedWithKeySetTargetState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="forceStateWhenUnknownKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootEntry">To be added.</param>
        <param name="targetState">To be added.</param>
        <param name="storeGeneratedWithKeySetTargetState">To be added.</param>
        <param name="forceStateWhenUnknownKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachGraphAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AttachGraphAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, Microsoft.EntityFrameworkCore.EntityState targetState, Microsoft.EntityFrameworkCore.EntityState storeGeneratedWithKeySetTargetState, bool forceStateWhenUnknownKey, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AttachGraphAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, valuetype Microsoft.EntityFrameworkCore.EntityState targetState, valuetype Microsoft.EntityFrameworkCore.EntityState storeGeneratedWithKeySetTargetState, bool forceStateWhenUnknownKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher.AttachGraphAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AttachGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iEntityGraphAttacher.AttachGraphAsync (rootEntry, targetState, storeGeneratedWithKeySetTargetState, forceStateWhenUnknownKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="targetState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="storeGeneratedWithKeySetTargetState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="forceStateWhenUnknownKey" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rootEntry">To be added.</param>
        <param name="targetState">To be added.</param>
        <param name="storeGeneratedWithKeySetTargetState">To be added.</param>
        <param name="forceStateWhenUnknownKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>