<Type Name="IDiagnosticsLogger&lt;TLoggerCategory&gt;" FullName="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;">
  <TypeSignature Language="C#" Value="public interface IDiagnosticsLogger&lt;TLoggerCategory&gt; : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger where TLoggerCategory : LoggerCategory&lt;TLoggerCategory&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDiagnosticsLogger`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!TLoggerCategory&gt;) TLoggerCategory&gt; implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDiagnosticsLogger(Of TLoggerCategory)&#xA;Implements IDiagnosticsLogger" />
  <TypeSignature Language="F#" Value="type IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; = interface&#xA;    interface IDiagnosticsLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TLoggerCategory">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TLoggerCategory">To be added.</typeparam>
    <summary>
      <para>
                    Combines <see cref="T:Microsoft.Extensions.Logging.ILogger" /> and <see cref="T:System.Diagnostics.DiagnosticSource" />
                    for use by all EF Core logging so that events can be sent to both <see cref="T:Microsoft.Extensions.Logging.ILogger" />
                    for ASP.NET and <see cref="T:System.Diagnostics.DiagnosticSource" /> for everything else.
                </para>
      <para>
                    Also intercepts messages such that warnings
                    can be either logged or thrown, and such that a decision as to whether to log
                    sensitive data or not can be made.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>