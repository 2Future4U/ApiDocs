<Type Name="Router" FullName="Microsoft.AspNetCore.Components.Routing.Router">
  <TypeSignature Language="C#" Value="public class Router : IDisposable, Microsoft.AspNetCore.Components.IComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Router extends System.Object implements class Microsoft.AspNetCore.Components.IComponent, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Routing.Router" />
  <TypeSignature Language="VB.NET" Value="Public Class Router&#xA;Implements IComponent, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Router : IDisposable, Microsoft::AspNetCore::Components::IComponent" />
  <TypeSignature Language="F#" Value="type Router = class&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A component that displays whichever other component corresponds to the
            current navigation location.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Router ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Router();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly AppAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly AppAssembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ AppAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppAssembly : System.Reflection.Assembly" Usage="Microsoft.AspNetCore.Components.Routing.Router.AppAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the assembly that should be searched, along with its referenced
            assemblies, for components matching the URI.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizingContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment AuthorizingContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment AuthorizingContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthorizingContent As RenderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment ^ AuthorizingContent { Microsoft::AspNetCore::Components::RenderFragment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizingContent : Microsoft.AspNetCore.Components.RenderFragment" Usage="Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The content that will be displayed while asynchronous authorization is in progress.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public void Configure (Microsoft.AspNetCore.Components.RenderHandle renderHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure(valuetype Microsoft.AspNetCore.Components.RenderHandle renderHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.Configure(Microsoft.AspNetCore.Components.RenderHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Configure(Microsoft::AspNetCore::Components::RenderHandle renderHandle);" />
      <MemberSignature Language="F#" Value="abstract member Configure : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit&#xA;override this.Configure : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit" Usage="router.Configure renderHandle" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.Configure(Microsoft.AspNetCore.Components.RenderHandle)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderHandle" Type="Microsoft.AspNetCore.Components.RenderHandle" />
      </Parameters>
      <Docs>
        <param name="renderHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="router.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="NotAuthorizedContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment&lt;Microsoft.AspNetCore.Components.AuthenticationState&gt; NotAuthorizedContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment`1&lt;class Microsoft.AspNetCore.Components.AuthenticationState&gt; NotAuthorizedContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAuthorizedContent As RenderFragment(Of AuthenticationState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment&lt;Microsoft::AspNetCore::Components::AuthenticationState ^&gt; ^ NotAuthorizedContent { Microsoft::AspNetCore::Components::RenderFragment&lt;Microsoft::AspNetCore::Components::AuthenticationState ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAuthorizedContent : Microsoft.AspNetCore.Components.RenderFragment&lt;Microsoft.AspNetCore.Components.AuthenticationState&gt;" Usage="Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment&lt;Microsoft.AspNetCore.Components.AuthenticationState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The content that will be displayed if the user is not authorized.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFoundContent">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.RenderFragment NotFoundContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.RenderFragment NotFoundContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotFoundContent As RenderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::RenderFragment ^ NotFoundContent { Microsoft::AspNetCore::Components::RenderFragment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotFoundContent : Microsoft.AspNetCore.Components.RenderFragment" Usage="Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.RenderFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected virtual void Render (Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, Type handler, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Render(class Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, class System.Type handler, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.Render(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Render (builder As RenderTreeBuilder, handler As Type, parameters As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Render(Microsoft::AspNetCore::Components::RenderTree::RenderTreeBuilder ^ builder, Type ^ handler, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member Render : Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder * Type * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; unit&#xA;override this.Render : Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder * Type * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; unit" Usage="router.Render (builder, handler, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder" />
        <Parameter Name="handler" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="handler">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.Router.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetParametersAsync (parameters As ParameterCollection) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterCollection parameters);" />
      <MemberSignature Language="F#" Value="abstract member SetParametersAsync : Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task&#xA;override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task" Usage="router.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
