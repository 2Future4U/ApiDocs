<Type Name="NavLink" FullName="Microsoft.AspNetCore.Components.Routing.NavLink">
  <TypeSignature Language="C#" Value="public class NavLink : IDisposable, Microsoft.AspNetCore.Components.IComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NavLink extends System.Object implements class Microsoft.AspNetCore.Components.IComponent, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Routing.NavLink" />
  <TypeSignature Language="VB.NET" Value="Public Class NavLink&#xA;Implements IComponent, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavLink : IDisposable, Microsoft::AspNetCore::Components::IComponent" />
  <TypeSignature Language="F#" Value="type NavLink = class&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A component that renders an anchor tag, automatically toggling its 'active'
            class based on whether its 'href' matches the current URI.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NavLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.NavLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NavLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveClass">
      <MemberSignature Language="C#" Value="public string ActiveClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActiveClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActiveClass { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveClass : string" Usage="Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the CSS class name applied to the NavLink when the 
            current route matches the NavLink href.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public void Configure (Microsoft.AspNetCore.Components.RenderHandle renderHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure(valuetype Microsoft.AspNetCore.Components.RenderHandle renderHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.NavLink.Configure(Microsoft.AspNetCore.Components.RenderHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Configure(Microsoft::AspNetCore::Components::RenderHandle renderHandle);" />
      <MemberSignature Language="F#" Value="abstract member Configure : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit&#xA;override this.Configure : Microsoft.AspNetCore.Components.RenderHandle -&gt; unit" Usage="navLink.Configure renderHandle" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.Configure(Microsoft.AspNetCore.Components.RenderHandle)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderHandle" Type="Microsoft.AspNetCore.Components.RenderHandle" />
      </Parameters>
      <Docs>
        <param name="renderHandle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.NavLink.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="navLink.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.Routing.NavLinkMatch Match { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Components.Routing.NavLinkMatch Match" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.Routing.NavLink.Match" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Match As NavLinkMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::Routing::NavLinkMatch Match { Microsoft::AspNetCore::Components::Routing::NavLinkMatch get(); };" />
      <MemberSignature Language="F#" Value="member this.Match : Microsoft.AspNetCore.Components.Routing.NavLinkMatch" Usage="Microsoft.AspNetCore.Components.Routing.NavLink.Match" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Components.Parameter</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Routing.NavLinkMatch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value representing the URL matching behavior.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParametersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetParametersAsync (Microsoft.AspNetCore.Components.ParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetParametersAsync(valuetype Microsoft.AspNetCore.Components.ParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Routing.NavLink.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetParametersAsync (parameters As ParameterCollection) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SetParametersAsync(Microsoft::AspNetCore::Components::ParameterCollection parameters);" />
      <MemberSignature Language="F#" Value="abstract member SetParametersAsync : Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task&#xA;override this.SetParametersAsync : Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task" Usage="navLink.SetParametersAsync parameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.IComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.AspNetCore.Components.ParameterCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
