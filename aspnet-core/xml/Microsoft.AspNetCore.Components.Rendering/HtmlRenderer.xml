<Type Name="HtmlRenderer" FullName="Microsoft.AspNetCore.Components.Rendering.HtmlRenderer">
  <TypeSignature Language="C#" Value="public class HtmlRenderer : Microsoft.AspNetCore.Components.Rendering.Renderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlRenderer extends Microsoft.AspNetCore.Components.Rendering.Renderer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlRenderer&#xA;Inherits Renderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlRenderer : Microsoft::AspNetCore::Components::Rendering::Renderer" />
  <TypeSignature Language="F#" Value="type HtmlRenderer = class&#xA;    inherit Renderer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Components.Rendering.Renderer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" /> that produces HTML.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlRenderer (IServiceProvider serviceProvider, Func&lt;string,string&gt; htmlEncoder, Microsoft.AspNetCore.Components.Rendering.IDispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider, class System.Func`2&lt;string, string&gt; htmlEncoder, class Microsoft.AspNetCore.Components.Rendering.IDispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.#ctor(System.IServiceProvider,System.Func{System.String,System.String},Microsoft.AspNetCore.Components.Rendering.IDispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider, htmlEncoder As Func(Of String, String), dispatcher As IDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlRenderer(IServiceProvider ^ serviceProvider, Func&lt;System::String ^, System::String ^&gt; ^ htmlEncoder, Microsoft::AspNetCore::Components::Rendering::IDispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.Rendering.HtmlRenderer : IServiceProvider * Func&lt;string, string&gt; * Microsoft.AspNetCore.Components.Rendering.IDispatcher -&gt; Microsoft.AspNetCore.Components.Rendering.HtmlRenderer" Usage="new Microsoft.AspNetCore.Components.Rendering.HtmlRenderer (serviceProvider, htmlEncoder, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="htmlEncoder" Type="System.Func&lt;System.String,System.String&gt;" />
        <Parameter Name="dispatcher" Type="Microsoft.AspNetCore.Components.Rendering.IDispatcher" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to use to instantiate components.</param>
        <param name="htmlEncoder">A <see cref="T:System.Func`2" /> that will HTML encode the given string.</param>
        <param name="dispatcher">
        </param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="protected override void HandleException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleException : Exception -&gt; unit" Usage="htmlRenderer.HandleException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RenderComponentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt; RenderComponentAsync (Type componentType, Microsoft.AspNetCore.Components.ParameterCollection initialParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt; RenderComponentAsync(class System.Type componentType, valuetype Microsoft.AspNetCore.Components.ParameterCollection initialParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.RenderComponentAsync(System.Type,Microsoft.AspNetCore.Components.ParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderComponentAsync (componentType As Type, initialParameters As ParameterCollection) As Task(Of ComponentRenderedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Components::Rendering::ComponentRenderedText&gt; ^ RenderComponentAsync(Type ^ componentType, Microsoft::AspNetCore::Components::ParameterCollection initialParameters);" />
      <MemberSignature Language="F#" Value="member this.RenderComponentAsync : Type * Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt;" Usage="htmlRenderer.RenderComponentAsync (componentType, initialParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="initialParameters" Type="Microsoft.AspNetCore.Components.ParameterCollection" />
      </Parameters>
      <Docs>
        <param name="componentType">The type of the <see cref="T:Microsoft.AspNetCore.Components.IComponent" />.</param>
        <param name="initialParameters">A <see cref="T:Microsoft.AspNetCore.Components.ParameterCollection" /> with the initial parameters to render the component.</param>
        <summary>
            Renders a component into a sequence of <see cref="T:System.String" /> fragments that represent the textual representation
            of the HTML produced by the component.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns a sequence of <see cref="T:System.String" /> fragments that represent the HTML text of the component.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderComponentAsync&lt;TComponent&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt; RenderComponentAsync&lt;TComponent&gt; (Microsoft.AspNetCore.Components.ParameterCollection initialParameters) where TComponent : Microsoft.AspNetCore.Components.IComponent;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt; RenderComponentAsync&lt;(class Microsoft.AspNetCore.Components.IComponent) TComponent&gt;(valuetype Microsoft.AspNetCore.Components.ParameterCollection initialParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.RenderComponentAsync``1(Microsoft.AspNetCore.Components.ParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderComponentAsync(Of TComponent As IComponent) (initialParameters As ParameterCollection) As Task(Of ComponentRenderedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TComponent&gt;&#xA; where TComponent : Microsoft::AspNetCore::Components::IComponent System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Components::Rendering::ComponentRenderedText&gt; ^ RenderComponentAsync(Microsoft::AspNetCore::Components::ParameterCollection initialParameters);" />
      <MemberSignature Language="F#" Value="member this.RenderComponentAsync : Microsoft.AspNetCore.Components.ParameterCollection -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt; (requires 'Component :&gt; Microsoft.AspNetCore.Components.IComponent)" Usage="htmlRenderer.RenderComponentAsync initialParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Components.Rendering.ComponentRenderedText&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TComponent">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.Components.IComponent</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialParameters" Type="Microsoft.AspNetCore.Components.ParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TComponent">The type of the <see cref="T:Microsoft.AspNetCore.Components.IComponent" />.</typeparam>
        <param name="initialParameters">A <see cref="T:Microsoft.AspNetCore.Components.ParameterCollection" /> with the initial parameters to render the component.</param>
        <summary>
            Renders a component into a sequence of <see cref="T:System.String" /> fragments that represent the textual representation
            of the HTML produced by the component.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns a sequence of <see cref="T:System.String" /> fragments that represent the HTML text of the component.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDisplayAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task UpdateDisplayAsync (Microsoft.AspNetCore.Components.Rendering.RenderBatch renderBatch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task UpdateDisplayAsync([in]class Microsoft.AspNetCore.Components.Rendering.RenderBatch renderBatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.UpdateDisplayAsync(Microsoft.AspNetCore.Components.Rendering.RenderBatch@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function UpdateDisplayAsync (renderBatch As RenderBatch) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ UpdateDisplayAsync(Microsoft::AspNetCore::Components::Rendering::RenderBatch ^ renderBatch);" />
      <MemberSignature Language="F#" Value="override this.UpdateDisplayAsync : Microsoft.AspNetCore.Components.Rendering.RenderBatch -&gt; System.Threading.Tasks.Task" Usage="htmlRenderer.UpdateDisplayAsync renderBatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderBatch" Type="Microsoft.AspNetCore.Components.Rendering.RenderBatch" />
      </Parameters>
      <Docs>
        <param name="renderBatch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
