<Type Name="IDispatcher" FullName="Microsoft.AspNetCore.Components.Rendering.IDispatcher">
  <TypeSignature Language="C#" Value="public interface IDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDispatcher" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.Rendering.IDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDispatcher" />
  <TypeSignature Language="F#" Value="type IDispatcher = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Dispatches external actions to be executed on the context of a <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Invoke (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Invoke(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.IDispatcher.Invoke(System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ Invoke(Action ^ action);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Action -&gt; System.Threading.Tasks.Task" Usage="iDispatcher.Invoke action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">The action to execute.</param>
        <summary>
            Invokes the given <see cref="T:System.Action" /> in the context of the associated <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will be completed when the action has finished executing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; Invoke&lt;TResult&gt; (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.IDispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ Invoke(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="iDispatcher.Invoke function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="function">The function to execute.</param>
        <summary>
            Invokes the given <see cref="T:System.Func`1" /> in the context of the associated <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that will be completed when the function has finished executing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeAsync (Func&lt;System.Threading.Tasks.Task&gt; asyncAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task InvokeAsync(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; asyncAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.IDispatcher.InvokeAsync(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (asyncAction As Func(Of Task)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ InvokeAsync(Func&lt;System::Threading::Tasks::Task ^&gt; ^ asyncAction);" />
      <MemberSignature Language="F#" Value="abstract member InvokeAsync : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="iDispatcher.InvokeAsync asyncAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncAction" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncAction">The asynchronous action to execute.</param>
        <summary>
            Invokes the given <see cref="T:System.Func`1" /> in the context of the associated <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will be completed when the action has finished executing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; asyncFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; asyncFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.Rendering.IDispatcher.InvokeAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (asyncFunction As Func(Of Task(Of TResult))) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ InvokeAsync(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ asyncFunction);" />
      <MemberSignature Language="F#" Value="abstract member InvokeAsync : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="iDispatcher.InvokeAsync asyncFunction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="asyncFunction">The asynchronous function to execute.</param>
        <summary>
            Invokes the given <see cref="T:System.Func`1" /> in the context of the associated <see cref="T:Microsoft.AspNetCore.Components.Rendering.Renderer" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that will be completed when the function has finished executing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
