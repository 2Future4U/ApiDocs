<Type Name="FromSqlNonComposedQuerySqlGenerator" FullName="Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator">
  <TypeSignature Language="C#" Value="public class FromSqlNonComposedQuerySqlGenerator : Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FromSqlNonComposedQuerySqlGenerator extends Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class FromSqlNonComposedQuerySqlGenerator&#xA;Inherits DefaultQuerySqlGenerator" />
  <TypeSignature Language="F#" Value="type FromSqlNonComposedQuerySqlGenerator = class&#xA;    inherit DefaultQuerySqlGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FromSqlNonComposedQuerySqlGenerator (Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies dependencies, Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression, string sql, System.Linq.Expressions.Expression arguments, Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression, string sql, class System.Linq.Expressions.Expression arguments, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator : Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies * Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression * string * System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers -&gt; Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator (dependencies, selectExpression, sql, arguments, loggers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="loggers" Type="Microsoft.EntityFrameworkCore.Diagnostics.DiagnosticsLoggers" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="selectExpression">To be added.</param>
        <param name="sql">To be added.</param>
        <param name="arguments">To be added.</param>
        <param name="loggers">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValueBufferFactory">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory (Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory relationalValueBufferFactoryFactory, System.Data.Common.DbDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory(class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory relationalValueBufferFactoryFactory, class System.Data.Common.DbDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateValueBufferFactory (relationalValueBufferFactoryFactory As IRelationalValueBufferFactoryFactory, dataReader As DbDataReader) As IRelationalValueBufferFactory" />
      <MemberSignature Language="F#" Value="override this.CreateValueBufferFactory : Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory * System.Data.Common.DbDataReader -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" Usage="fromSqlNonComposedQuerySqlGenerator.CreateValueBufferFactory (relationalValueBufferFactoryFactory, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalValueBufferFactoryFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="relationalValueBufferFactoryFactory">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresRuntimeProjectionRemapping">
      <MemberSignature Language="C#" Value="public override bool RequiresRuntimeProjectionRemapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresRuntimeProjectionRemapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.RequiresRuntimeProjectionRemapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresRuntimeProjectionRemapping As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequiresRuntimeProjectionRemapping : bool" Usage="Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.RequiresRuntimeProjectionRemapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether or not the generated SQL could have out-of-order projection columns.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Visit (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Visit(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.Visit(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="fromSqlNonComposedQuerySqlGenerator.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
