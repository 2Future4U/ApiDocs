<Type Name="IRelationalCommandBuilderFactory" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory">
  <TypeSignature Language="C#" Value="public interface IRelationalCommandBuilderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalCommandBuilderFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalCommandBuilderFactory" />
  <TypeSignature Language="F#" Value="type IRelationalCommandBuilderFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" /> class.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Create (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Create(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory.Create(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (logger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command)) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilderFactory.Create logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" />.
            </summary>
        <returns> The newly created builder. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>