<Type Name="RelationalSqlGenerationHelper" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper">
  <TypeSignature Language="C#" Value="public class RelationalSqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalSqlGenerationHelper extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalSqlGenerationHelper&#xA;Implements ISqlGenerationHelper" />
  <TypeSignature Language="F#" Value="type RelationalSqlGenerationHelper = class&#xA;    interface ISqlGenerationHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Provides services to help with generation of SQL commands.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalSqlGenerationHelper (Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As RelationalSqlGenerationHelperDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        <summary>
                Initializes a new instance of the this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchTerminator">
      <MemberSignature Language="C#" Value="public virtual string BatchTerminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BatchTerminator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.BatchTerminator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BatchTerminator As String" />
      <MemberSignature Language="F#" Value="member this.BatchTerminator : string" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.BatchTerminator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.BatchTerminator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public virtual string DelimitIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DelimitIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DelimitIdentifier (identifier As String) As String" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : string -&gt; string&#xA;override this.DelimitIdentifier : string -&gt; string" Usage="relationalSqlGenerationHelper.DelimitIdentifier identifier" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The identifier to delimit.</param>
        <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns>
                The generated string.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public virtual string DelimitIdentifier (string name, string schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DelimitIdentifier(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DelimitIdentifier (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : string * string -&gt; string&#xA;override this.DelimitIdentifier : string * string -&gt; string" Usage="relationalSqlGenerationHelper.DelimitIdentifier (name, schema)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The identifier to delimit.</param>
        <param name="schema">The schema of the identifier.</param>
        <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns>
                The generated string.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public virtual void DelimitIdentifier (System.Text.StringBuilder builder, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DelimitIdentifier(class System.Text.StringBuilder builder, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DelimitIdentifier (builder As StringBuilder, identifier As String)" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : System.Text.StringBuilder * string -&gt; unit&#xA;override this.DelimitIdentifier : System.Text.StringBuilder * string -&gt; unit" Usage="relationalSqlGenerationHelper.DelimitIdentifier (builder, identifier)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="identifier">The identifier to delimit.</param>
        <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public virtual void DelimitIdentifier (System.Text.StringBuilder builder, string name, string schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DelimitIdentifier(class System.Text.StringBuilder builder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DelimitIdentifier (builder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : System.Text.StringBuilder * string * string -&gt; unit&#xA;override this.DelimitIdentifier : System.Text.StringBuilder * string * string -&gt; unit" Usage="relationalSqlGenerationHelper.DelimitIdentifier (builder, name, schema)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="name">The identifier to delimit.</param>
        <param name="schema">The schema of the identifier.</param>
        <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeIdentifier">
      <MemberSignature Language="C#" Value="public virtual string EscapeIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EscapeIdentifier (identifier As String) As String" />
      <MemberSignature Language="F#" Value="abstract member EscapeIdentifier : string -&gt; string&#xA;override this.EscapeIdentifier : string -&gt; string" Usage="relationalSqlGenerationHelper.EscapeIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The identifier to be escaped.</param>
        <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns>
                The generated string.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeIdentifier">
      <MemberSignature Language="C#" Value="public virtual void EscapeIdentifier (System.Text.StringBuilder builder, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EscapeIdentifier(class System.Text.StringBuilder builder, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EscapeIdentifier (builder As StringBuilder, identifier As String)" />
      <MemberSignature Language="F#" Value="abstract member EscapeIdentifier : System.Text.StringBuilder * string -&gt; unit&#xA;override this.EscapeIdentifier : System.Text.StringBuilder * string -&gt; unit" Usage="relationalSqlGenerationHelper.EscapeIdentifier (builder, identifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="identifier">The identifier to be escaped.</param>
        <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterName">
      <MemberSignature Language="C#" Value="public virtual string GenerateParameterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateParameterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateParameterName (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterName : string -&gt; string&#xA;override this.GenerateParameterName : string -&gt; string" Usage="relationalSqlGenerationHelper.GenerateParameterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The candidate name for the parameter.</param>
        <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
        <returns>
                A valid name based on the candidate name.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterName">
      <MemberSignature Language="C#" Value="public virtual void GenerateParameterName (System.Text.StringBuilder builder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateParameterName(class System.Text.StringBuilder builder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateParameterName (builder As StringBuilder, name As String)" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterName : System.Text.StringBuilder * string -&gt; unit&#xA;override this.GenerateParameterName : System.Text.StringBuilder * string -&gt; unit" Usage="relationalSqlGenerationHelper.GenerateParameterName (builder, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="name">The candidate name for the parameter.</param>
        <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterNamePlaceholder">
      <MemberSignature Language="C#" Value="public virtual string GenerateParameterNamePlaceholder (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateParameterNamePlaceholder(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterNamePlaceholder(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateParameterNamePlaceholder (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterNamePlaceholder : string -&gt; string&#xA;override this.GenerateParameterNamePlaceholder : string -&gt; string" Usage="relationalSqlGenerationHelper.GenerateParameterNamePlaceholder name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterNamePlaceholder(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The candidate name for the parameter placeholder.</param>
        <summary>
                Generates a valid parameter placeholder name for the given candidate name.
            </summary>
        <returns>
                A valid name based on the candidate name.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterNamePlaceholder">
      <MemberSignature Language="C#" Value="public virtual void GenerateParameterNamePlaceholder (System.Text.StringBuilder builder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateParameterNamePlaceholder(class System.Text.StringBuilder builder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterNamePlaceholder(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateParameterNamePlaceholder (builder As StringBuilder, name As String)" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterNamePlaceholder : System.Text.StringBuilder * string -&gt; unit&#xA;override this.GenerateParameterNamePlaceholder : System.Text.StringBuilder * string -&gt; unit" Usage="relationalSqlGenerationHelper.GenerateParameterNamePlaceholder (builder, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterNamePlaceholder(System.Text.StringBuilder,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="name">The candidate name for the parameter placeholder.</param>
        <summary>
                Writes a valid parameter placeholder name for the given candidate name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatementTerminator">
      <MemberSignature Language="C#" Value="public virtual string StatementTerminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatementTerminator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.StatementTerminator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatementTerminator As String" />
      <MemberSignature Language="F#" Value="member this.StatementTerminator : string" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.StatementTerminator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StatementTerminator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The terminator to be used for SQL statements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>